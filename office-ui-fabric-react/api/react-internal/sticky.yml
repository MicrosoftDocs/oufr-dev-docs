### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!Sticky:class'
    name: Sticky
    fullName: Sticky
    langs:
      - typeScript
    type: class
    extends:
      - 'React.Component<IStickyProps, IStickyState> '
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!Sticky:constructor(1)'
      - '@fluentui/react-internal!Sticky#addSticky:member(1)'
      - '@fluentui/react-internal!Sticky#canStickyBottom:member'
      - '@fluentui/react-internal!Sticky#canStickyTop:member'
      - '@fluentui/react-internal!Sticky#componentDidMount:member(1)'
      - '@fluentui/react-internal!Sticky#componentDidUpdate:member(1)'
      - '@fluentui/react-internal!Sticky#componentWillUnmount:member(1)'
      - '@fluentui/react-internal!Sticky.contextType:member'
      - '@fluentui/react-internal!Sticky.defaultProps:member'
      - '@fluentui/react-internal!Sticky#nonStickyContent:member'
      - '@fluentui/react-internal!Sticky#placeholder:member'
      - '@fluentui/react-internal!Sticky#render:member(1)'
      - '@fluentui/react-internal!Sticky#resetSticky:member(1)'
      - '@fluentui/react-internal!Sticky#root:member'
      - '@fluentui/react-internal!Sticky#setDistanceFromTop:member(1)'
      - '@fluentui/react-internal!Sticky#shouldComponentUpdate:member(1)'
      - '@fluentui/react-internal!Sticky#stickyContentBottom:member'
      - '@fluentui/react-internal!Sticky#stickyContentTop:member'
      - '@fluentui/react-internal!Sticky#syncScroll:member'
  - uid: '@fluentui/react-internal!Sticky:constructor(1)'
    summary: Constructs a new instance of the `Sticky` class
    name: (constructor)(props)
    fullName: (constructor)(props)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(props: IStickyProps);'
      parameters:
        - id: props
          description: ''
          type:
            - IStickyProps
  - uid: '@fluentui/react-internal!Sticky#addSticky:member(1)'
    name: addSticky(stickyContent)
    fullName: addSticky(stickyContent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addSticky(stickyContent: HTMLDivElement): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: stickyContent
          description: ''
          type:
            - HTMLDivElement
  - uid: '@fluentui/react-internal!Sticky#canStickyBottom:member'
    name: canStickyBottom
    fullName: canStickyBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'get canStickyBottom(): boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!Sticky#canStickyTop:member'
    name: canStickyTop
    fullName: canStickyTop
    langs:
      - typeScript
    type: property
    syntax:
      content: 'get canStickyTop(): boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!Sticky#componentDidMount:member(1)'
    name: componentDidMount()
    fullName: componentDidMount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-internal!Sticky#componentDidUpdate:member(1)'
    name: 'componentDidUpdate(prevProps, prevState)'
    fullName: 'componentDidUpdate(prevProps, prevState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidUpdate(prevProps: IStickyProps, prevState: IStickyState): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: prevProps
          description: ''
          type:
            - IStickyProps
        - id: prevState
          description: ''
          type:
            - IStickyState
  - uid: '@fluentui/react-internal!Sticky#componentWillUnmount:member(1)'
    name: componentWillUnmount()
    fullName: componentWillUnmount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-internal!Sticky.contextType:member'
    name: contextType
    fullName: contextType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'static contextType: React.Context<IScrollablePaneContext>;'
      return:
        type:
          - React.Context<IScrollablePaneContext>
  - uid: '@fluentui/react-internal!Sticky.defaultProps:member'
    name: defaultProps
    fullName: defaultProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'static defaultProps: IStickyProps;'
      return:
        type:
          - IStickyProps
  - uid: '@fluentui/react-internal!Sticky#nonStickyContent:member'
    name: nonStickyContent
    fullName: nonStickyContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'get nonStickyContent(): HTMLDivElement | null;'
      return:
        type:
          - HTMLDivElement | null
  - uid: '@fluentui/react-internal!Sticky#placeholder:member'
    name: placeholder
    fullName: placeholder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'get placeholder(): HTMLDivElement | null;'
      return:
        type:
          - HTMLDivElement | null
  - uid: '@fluentui/react-internal!Sticky#render:member(1)'
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
  - uid: '@fluentui/react-internal!Sticky#resetSticky:member(1)'
    name: resetSticky()
    fullName: resetSticky()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'resetSticky(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-internal!Sticky#root:member'
    name: root
    fullName: root
    langs:
      - typeScript
    type: property
    syntax:
      content: 'get root(): HTMLDivElement | null;'
      return:
        type:
          - HTMLDivElement | null
  - uid: '@fluentui/react-internal!Sticky#setDistanceFromTop:member(1)'
    name: setDistanceFromTop(container)
    fullName: setDistanceFromTop(container)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDistanceFromTop(container: HTMLDivElement): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: container
          description: ''
          type:
            - HTMLDivElement
  - uid: '@fluentui/react-internal!Sticky#shouldComponentUpdate:member(1)'
    name: 'shouldComponentUpdate(nextProps, nextState)'
    fullName: 'shouldComponentUpdate(nextProps, nextState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'shouldComponentUpdate(nextProps: IStickyProps, nextState: IStickyState): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: nextProps
          description: ''
          type:
            - IStickyProps
        - id: nextState
          description: ''
          type:
            - IStickyState
  - uid: '@fluentui/react-internal!Sticky#stickyContentBottom:member'
    name: stickyContentBottom
    fullName: stickyContentBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'get stickyContentBottom(): HTMLDivElement | null;'
      return:
        type:
          - HTMLDivElement | null
  - uid: '@fluentui/react-internal!Sticky#stickyContentTop:member'
    name: stickyContentTop
    fullName: stickyContentTop
    langs:
      - typeScript
    type: property
    syntax:
      content: 'get stickyContentTop(): HTMLDivElement | null;'
      return:
        type:
          - HTMLDivElement | null
  - uid: '@fluentui/react-internal!Sticky#syncScroll:member'
    name: syncScroll
    fullName: syncScroll
    langs:
      - typeScript
    type: property
    syntax:
      content: 'syncScroll: (container: HTMLElement) => void;'
      return:
        type:
          - '(container: HTMLElement) => void'
