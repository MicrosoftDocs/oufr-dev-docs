### YamlMime:TSType
name: SuggestionsStore
uid: '@fluentui/react!SuggestionsStore:class'
package: '@fluentui/react!'
fullName: SuggestionsStore
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: (constructor)(options)
    uid: '@fluentui/react!SuggestionsStore:constructor(1)'
    package: '@fluentui/react!'
    fullName: (constructor)(options)
    summary: Constructs a new instance of the `SuggestionsStore` class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constructor(options?: SuggestionsStoreOptions<T>);'
      parameters:
        - id: options
          description: ''
          type: SuggestionsStoreOptions&lt;T&gt;
properties:
  - name: suggestions
    uid: '@fluentui/react!SuggestionsStore#suggestions:member'
    package: '@fluentui/react!'
    fullName: suggestions
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'suggestions: ISuggestionModel<T>[];'
      return:
        type: 'ISuggestionModel&lt;T&gt;[]'
methods:
  - name: convertSuggestionsToSuggestionItems(suggestions)
    uid: >-
      @fluentui/react!SuggestionsStore#convertSuggestionsToSuggestionItems:member(1)
    package: '@fluentui/react!'
    fullName: convertSuggestionsToSuggestionItems(suggestions)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        convertSuggestionsToSuggestionItems(suggestions:
        Array<ISuggestionModel<T> | T>): ISuggestionModel<T>[];
      parameters:
        - id: suggestions
          description: ''
          type: Array&lt;ISuggestionModel&lt;T&gt; | T&gt;
      return:
        type: 'ISuggestionModel&lt;T&gt;[]'
        description: ''
  - name: getSuggestionAtIndex(index)
    uid: '@fluentui/react!SuggestionsStore#getSuggestionAtIndex:member(1)'
    package: '@fluentui/react!'
    fullName: getSuggestionAtIndex(index)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSuggestionAtIndex(index: number): ISuggestionModel<T>;'
      parameters:
        - id: index
          description: ''
          type: number
      return:
        type: ISuggestionModel&lt;T&gt;
        description: ''
  - name: getSuggestions()
    uid: '@fluentui/react!SuggestionsStore#getSuggestions:member(1)'
    package: '@fluentui/react!'
    fullName: getSuggestions()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSuggestions(): ISuggestionModel<T>[];'
      return:
        type: 'ISuggestionModel&lt;T&gt;[]'
        description: ''
  - name: removeSuggestion(index)
    uid: '@fluentui/react!SuggestionsStore#removeSuggestion:member(1)'
    package: '@fluentui/react!'
    fullName: removeSuggestion(index)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'removeSuggestion(index: number): void;'
      parameters:
        - id: index
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: updateSuggestions(newSuggestions)
    uid: '@fluentui/react!SuggestionsStore#updateSuggestions:member(1)'
    package: '@fluentui/react!'
    fullName: updateSuggestions(newSuggestions)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'updateSuggestions(newSuggestions: T[]): void;'
      parameters:
        - id: newSuggestions
          description: ''
          type: 'T[]'
      return:
        type: void
        description: ''
