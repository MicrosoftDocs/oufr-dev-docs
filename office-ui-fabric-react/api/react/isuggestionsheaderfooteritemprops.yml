### YamlMime:TSType
name: ISuggestionsHeaderFooterItemProps
uid: '@fluentui/react!ISuggestionsHeaderFooterItemProps:interface'
package: '@fluentui/react!'
fullName: ISuggestionsHeaderFooterItemProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: className
    uid: '@fluentui/react!ISuggestionsHeaderFooterItemProps#className:member'
    package: '@fluentui/react!'
    fullName: className
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className: string | undefined;'
      return:
        type: string | undefined
  - name: componentRef
    uid: '@fluentui/react!ISuggestionsHeaderFooterItemProps#componentRef:member'
    package: '@fluentui/react!'
    fullName: componentRef
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<{}>;'
      return:
        type: 'IRefObject&lt;{}&gt;'
  - name: id
    uid: '@fluentui/react!ISuggestionsHeaderFooterItemProps#id:member'
    package: '@fluentui/react!'
    fullName: id
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string;'
      return:
        type: string
  - name: isSelected
    uid: '@fluentui/react!ISuggestionsHeaderFooterItemProps#isSelected:member'
    package: '@fluentui/react!'
    fullName: isSelected
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isSelected: boolean;'
      return:
        type: boolean
  - name: onExecute
    uid: '@fluentui/react!ISuggestionsHeaderFooterItemProps#onExecute:member'
    package: '@fluentui/react!'
    fullName: onExecute
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onExecute?: () => void;'
      return:
        type: () =&gt; void
  - name: renderItem
    uid: '@fluentui/react!ISuggestionsHeaderFooterItemProps#renderItem:member'
    package: '@fluentui/react!'
    fullName: renderItem
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'renderItem: () => JSX.Element;'
      return:
        type: () =&gt; JSX.Element
