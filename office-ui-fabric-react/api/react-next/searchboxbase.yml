### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!SearchBoxBase:class'
    name: SearchBoxBase
    fullName: SearchBoxBase
    langs:
      - typeScript
    type: class
    extends:
      - 'React.Component<ISearchBoxProps, ISearchBoxState> '
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!SearchBoxBase:constructor(1)'
      - '@fluentui/react-next!SearchBoxBase.defaultProps:member'
      - '@fluentui/react-next!SearchBoxBase#focus:member(1)'
      - '@fluentui/react-next!SearchBoxBase#hasFocus:member(1)'
      - '@fluentui/react-next!SearchBoxBase#render:member(1)'
      - '@fluentui/react-next!SearchBoxBase#UNSAFE_componentWillReceiveProps:member(1)'
  - uid: '@fluentui/react-next!SearchBoxBase:constructor(1)'
    summary: Constructs a new instance of the `SearchBoxBase` class
    name: (constructor)(props)
    fullName: (constructor)(props)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(props: ISearchBoxProps);'
      parameters:
        - id: props
          description: ''
          type:
            - ISearchBoxProps
  - uid: '@fluentui/react-next!SearchBoxBase.defaultProps:member'
    name: defaultProps
    fullName: defaultProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'static defaultProps: Pick<ISearchBoxProps, ''disableAnimation'' | ''clearButtonProps''>;'
      return:
        type:
          - 'Pick<ISearchBoxProps, ''disableAnimation'' | ''clearButtonProps''>'
  - uid: '@fluentui/react-next!SearchBoxBase#focus:member(1)'
    summary: Sets focus to the search box input field
    name: focus()
    fullName: focus()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focus(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-next!SearchBoxBase#hasFocus:member(1)'
    summary: Returns whether or not the SearchBox has focus
    name: hasFocus()
    fullName: hasFocus()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'hasFocus(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: '@fluentui/react-next!SearchBoxBase#render:member(1)'
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
  - uid: '@fluentui/react-next!SearchBoxBase#UNSAFE_componentWillReceiveProps:member(1)'
    name: UNSAFE_componentWillReceiveProps(newProps)
    fullName: UNSAFE_componentWillReceiveProps(newProps)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'UNSAFE_componentWillReceiveProps(newProps: ISearchBoxProps): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newProps
          description: ''
          type:
            - ISearchBoxProps
