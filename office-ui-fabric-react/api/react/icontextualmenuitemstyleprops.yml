### YamlMime:TSType
name: IContextualMenuItemStyleProps
uid: '@fluentui/react!IContextualMenuItemStyleProps:interface'
package: '@fluentui/react!'
fullName: IContextualMenuItemStyleProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: checked
    uid: '@fluentui/react!IContextualMenuItemStyleProps#checked:member'
    package: '@fluentui/react!'
    fullName: checked
    summary: Whether or not the menu item is checked.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checked: boolean;'
      return:
        type: boolean
  - name: className
    uid: '@fluentui/react!IContextualMenuItemStyleProps#className:member'
    package: '@fluentui/react!'
    fullName: className
    summary: Accept custom classNames
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: disabled
    uid: '@fluentui/react!IContextualMenuItemStyleProps#disabled:member'
    package: '@fluentui/react!'
    fullName: disabled
    summary: Whether or not the menu item is disabled.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled: boolean;'
      return:
        type: boolean
  - name: dividerClassName
    uid: '@fluentui/react!IContextualMenuItemStyleProps#dividerClassName:member'
    package: '@fluentui/react!'
    fullName: dividerClassName
    summary: The optional class name to apply to the divider element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dividerClassName?: string;'
      return:
        type: string
  - name: expanded
    uid: '@fluentui/react!IContextualMenuItemStyleProps#expanded:member'
    package: '@fluentui/react!'
    fullName: expanded
    summary: Whether or not the menu item is expanded.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'expanded: boolean;'
      return:
        type: boolean
  - name: iconClassName
    uid: '@fluentui/react!IContextualMenuItemStyleProps#iconClassName:member'
    package: '@fluentui/react!'
    fullName: iconClassName
    summary: The optional class name to apply to the icon element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'iconClassName?: string;'
      return:
        type: string
  - name: isAnchorLink
    uid: '@fluentui/react!IContextualMenuItemStyleProps#isAnchorLink:member'
    package: '@fluentui/react!'
    fullName: isAnchorLink
    summary: Indicates if a menu item is an anchor link.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isAnchorLink: boolean;'
      return:
        type: boolean
  - name: itemClassName
    uid: '@fluentui/react!IContextualMenuItemStyleProps#itemClassName:member'
    package: '@fluentui/react!'
    fullName: itemClassName
    summary: The optional class name to apply to the item element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemClassName?: string;'
      return:
        type: string
  - name: knownIcon
    uid: '@fluentui/react!IContextualMenuItemStyleProps#knownIcon:member'
    package: '@fluentui/react!'
    fullName: knownIcon
    summary: Indicates if the icon used is of the known set of icons.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'knownIcon: boolean;'
      return:
        type: boolean
  - name: primaryDisabled
    uid: '@fluentui/react!IContextualMenuItemStyleProps#primaryDisabled:member'
    package: '@fluentui/react!'
    fullName: primaryDisabled
    summary: Whether or not the primary section of a split menu item is disabled.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'primaryDisabled?: boolean;'
      return:
        type: boolean
  - name: subMenuClassName
    uid: '@fluentui/react!IContextualMenuItemStyleProps#subMenuClassName:member'
    package: '@fluentui/react!'
    fullName: subMenuClassName
    summary: The optional class name to apply to the sub-menu if present.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subMenuClassName?: string;'
      return:
        type: string
  - name: theme
    uid: '@fluentui/react!IContextualMenuItemStyleProps#theme:member'
    package: '@fluentui/react!'
    fullName: theme
    summary: Theme provided by High-Order Component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
