### YamlMime:TSType
name: IColumnReorderOptions
uid: '@fluentui/react!IColumnReorderOptions:interface'
package: '@fluentui/react!'
fullName: IColumnReorderOptions
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: frozenColumnCountFromEnd
    uid: '@fluentui/react!IColumnReorderOptions#frozenColumnCountFromEnd:member'
    package: '@fluentui/react!'
    fullName: frozenColumnCountFromEnd
    summary: Specifies the number fixed columns from right
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'frozenColumnCountFromEnd?: number;'
      return:
        type: number
  - name: frozenColumnCountFromStart
    uid: '@fluentui/react!IColumnReorderOptions#frozenColumnCountFromStart:member'
    package: '@fluentui/react!'
    fullName: frozenColumnCountFromStart
    summary: Specifies the number fixed columns from left
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'frozenColumnCountFromStart?: number;'
      return:
        type: number
  - name: handleColumnReorder
    uid: '@fluentui/react!IColumnReorderOptions#handleColumnReorder:member'
    package: '@fluentui/react!'
    fullName: handleColumnReorder
    summary: >-
      Callback to handle column reordering. `draggedIndex` is the source column
      index, which should be placed at `targetIndex`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `onColumnDrop` instead.
    syntax:
      content: >-
        handleColumnReorder?: (draggedIndex: number, targetIndex: number) =>
        void;
      return:
        type: '(draggedIndex: number, targetIndex: number) =&gt; void'
  - name: onColumnDragStart
    uid: '@fluentui/react!IColumnReorderOptions#onColumnDragStart:member'
    package: '@fluentui/react!'
    fullName: onColumnDragStart
    summary: >-
      Callback to handle when dragging on this column's DetailsHeader has
      started.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onColumnDragStart?: (dragStarted: boolean) => void;'
      return:
        type: '(dragStarted: boolean) =&gt; void'
  - name: onColumnDrop
    uid: '@fluentui/react!IColumnReorderOptions#onColumnDrop:member'
    package: '@fluentui/react!'
    fullName: onColumnDrop
    summary: >-
      Callback to handle column reordering. `draggedIndex` is the source column
      index, which should be placed at `targetIndex`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onColumnDrop?: (dragDropDetails: IColumnDragDropDetails) => void;'
      return:
        type: '(dragDropDetails: IColumnDragDropDetails) =&gt; void'
  - name: onDragEnd
    uid: '@fluentui/react!IColumnReorderOptions#onDragEnd:member'
    package: '@fluentui/react!'
    fullName: onDragEnd
    summary: >-
      Callback to handle when dragging on this column's DetailsHeader has
      finished.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragEnd?: (columnDropLocationDetails: ColumnDragEndLocation) => void;'
      return:
        type: '(columnDropLocationDetails: ColumnDragEndLocation) =&gt; void'
