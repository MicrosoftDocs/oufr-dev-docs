### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!IColorPickerGridCellProps:interface'
    name: IColorPickerGridCellProps
    fullName: IColorPickerGridCellProps
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!IColorPickerGridCellProps#borderWidth:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#circle:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#color:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#disabled:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#height:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#id:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#idPrefix:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#index:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#item:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#label:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#onClick:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#onFocus:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#onHover:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#onKeyDown:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#onMouseEnter:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#onMouseLeave:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#onMouseMove:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#onWheel:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#selected:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#styles:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#theme:member'
      - '@fluentui/react-next!IColorPickerGridCellProps#width:member'
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#borderWidth:member'
    summary: 'Width of the border that indicates a selected/hovered cell, in pixels.'
    name: borderWidth
    fullName: borderWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderWidth?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#circle:member'
    summary: 'True if this cell should be rendered as a circle, false if it should be a square.  `true` (render as circle)'
    name: circle
    fullName: circle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'circle?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#color:member'
    summary: The CSS-compatible string to describe the color
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#disabled:member'
    summary: Whether this cell should be disabled  false
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#height:member'
    summary: 'Height of the cell, in pixels'
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#id:member'
    summary: Used as a PREFIX for the cell's ID (the cell will not have this literal string as its ID).
    deprecated:
      content: Deprecated due to misleading name. Use `idPrefix` instead.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#idPrefix:member'
    summary: Prefix for this cell's ID. Will be required in a future version once `id` is removed.
    name: idPrefix
    fullName: idPrefix
    langs:
      - typeScript
    type: property
    syntax:
      content: 'idPrefix?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#index:member'
    summary: Index for this option
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'index?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#item:member'
    summary: Item to render
    name: item
    fullName: item
    langs:
      - typeScript
    type: property
    syntax:
      content: 'item: IColorCellProps;'
      return:
        type:
          - IColorCellProps
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#label:member'
    summary: Tooltip and aria label for this item
    name: label
    fullName: label
    langs:
      - typeScript
    type: property
    syntax:
      content: 'label?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#onClick:member'
    summary: Handler for when a color cell is clicked.
    name: onClick
    fullName: onClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onClick?: (item: IColorCellProps) => void;'
      return:
        type:
          - '(item: IColorCellProps) => void'
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#onFocus:member'
    name: onFocus
    fullName: onFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onFocus?: (item: IColorCellProps) => void;'
      return:
        type:
          - '(item: IColorCellProps) => void'
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#onHover:member'
    name: onHover
    fullName: onHover
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onHover?: (item?: IColorCellProps) => void;'
      return:
        type:
          - '(item?: IColorCellProps) => void'
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#onKeyDown:member'
    name: onKeyDown
    fullName: onKeyDown
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onKeyDown?: (ev: React.KeyboardEvent<HTMLButtonElement>) => void;'
      return:
        type:
          - '(ev: React.KeyboardEvent<HTMLButtonElement>) => void'
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#onMouseEnter:member'
    summary: 'Mouse enter handler. Returns true if the event should be processed, false otherwise.'
    name: onMouseEnter
    fullName: onMouseEnter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onMouseEnter?: (ev: React.MouseEvent<HTMLButtonElement>) => boolean;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLButtonElement>) => boolean'
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#onMouseLeave:member'
    name: onMouseLeave
    fullName: onMouseLeave
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onMouseLeave?: (ev: React.MouseEvent<HTMLButtonElement>) => void;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLButtonElement>) => void'
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#onMouseMove:member'
    summary: 'Mouse move handler. Returns true if the event should be processed, false otherwise.'
    name: onMouseMove
    fullName: onMouseMove
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onMouseMove?: (ev: React.MouseEvent<HTMLButtonElement>) => boolean;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLButtonElement>) => boolean'
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#onWheel:member'
    name: onWheel
    fullName: onWheel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onWheel?: (ev: React.MouseEvent<HTMLButtonElement>) => void;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLButtonElement>) => void'
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#selected:member'
    summary: Whether this cell is currently selected
    name: selected
    fullName: selected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selected: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#styles:member'
    summary: Custom styles for the component.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IColorPickerGridCellStyleProps, IColorPickerGridCellStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IColorPickerGridCellStyleProps, IColorPickerGridCellStyles>'
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#theme:member'
    summary: The theme object to use for styling.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - ITheme
  - uid: '@fluentui/react-next!IColorPickerGridCellProps#width:member'
    summary: 'Width of the cell, in pixels'
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width?: number;'
      return:
        type:
          - number
