### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IModalProps:interface'
    name: IModalProps
    fullName: IModalProps
    langs:
      - typeScript
    type: interface
    extends:
      - React.ClassAttributes<ModalBase>
      - IWithResponsiveModeState
      - 'office-ui-fabric-react!IAccessiblePopupProps:interface'
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IModalProps#allowTouchBodyScroll:member'
      - 'office-ui-fabric-react!IModalProps#className:member'
      - 'office-ui-fabric-react!IModalProps#componentRef:member'
      - 'office-ui-fabric-react!IModalProps#containerClassName:member'
      - 'office-ui-fabric-react!IModalProps#dragOptions:member'
      - 'office-ui-fabric-react!IModalProps#isBlocking:member'
      - 'office-ui-fabric-react!IModalProps#isDarkOverlay:member'
      - 'office-ui-fabric-react!IModalProps#isModeless:member'
      - 'office-ui-fabric-react!IModalProps#isOpen:member'
      - 'office-ui-fabric-react!IModalProps#layerProps:member'
      - 'office-ui-fabric-react!IModalProps#onDismiss:member'
      - 'office-ui-fabric-react!IModalProps#onDismissed:member'
      - 'office-ui-fabric-react!IModalProps#onLayerDidMount:member'
      - 'office-ui-fabric-react!IModalProps#overlay:member'
      - 'office-ui-fabric-react!IModalProps#scrollableContentClassName:member'
      - 'office-ui-fabric-react!IModalProps#styles:member'
      - 'office-ui-fabric-react!IModalProps#subtitleAriaId:member'
      - 'office-ui-fabric-react!IModalProps#theme:member'
      - 'office-ui-fabric-react!IModalProps#titleAriaId:member'
      - 'office-ui-fabric-react!IModalProps#topOffsetFixed:member'
  - uid: 'office-ui-fabric-react!IModalProps#allowTouchBodyScroll:member'
    summary: Allow body scroll on content and overlay on touch devices. Changing after mounting has no effect.
    name: allowTouchBodyScroll
    fullName: allowTouchBodyScroll
    langs:
      - typeScript
    type: property
    syntax:
      content: 'allowTouchBodyScroll?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IModalProps#className:member'
    summary: Optional class name to be added to the root class
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IModalProps#componentRef:member'
    summary: >-
      Optional callback to access the IDialog interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IModal>;'
      return:
        type:
          - IRefObject<IModal>
  - uid: 'office-ui-fabric-react!IModalProps#containerClassName:member'
    summary: Optional override for container class
    name: containerClassName
    fullName: containerClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'containerClassName?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IModalProps#dragOptions:member'
    summary: The options to make the modal draggable
    name: dragOptions
    fullName: dragOptions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dragOptions?: IDragOptions;'
      return:
        type:
          - 'office-ui-fabric-react!IDragOptions:interface'
  - uid: 'office-ui-fabric-react!IModalProps#isBlocking:member'
    summary: Whether the dialog can be light dismissed by clicking outside the dialog (on the overlay).
    name: isBlocking
    fullName: isBlocking
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isBlocking?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IModalProps#isDarkOverlay:member'
    summary: Whether the overlay is dark themed.
    name: isDarkOverlay
    fullName: isDarkOverlay
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isDarkOverlay?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IModalProps#isModeless:member'
    summary: >-
      Whether the dialog should be modeless (e.g. not dismiss when focusing/clicking outside of the dialog). if true:
      isBlocking is ignored, there will be no overlay (isDarkOverlay is ignored), isClickableOutsideFocusTrap is true,
      and forceFocusInsideTrap is false
    name: isModeless
    fullName: isModeless
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isModeless?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IModalProps#isOpen:member'
    summary: Whether the dialog is displayed.
    name: isOpen
    fullName: isOpen
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isOpen?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IModalProps#layerProps:member'
    summary: Defines an optional set of props to be passed through to Layer
    name: layerProps
    fullName: layerProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layerProps?: ILayerProps;'
      return:
        type:
          - 'office-ui-fabric-react!ILayerProps:interface'
  - uid: 'office-ui-fabric-react!IModalProps#onDismiss:member'
    summary: 'A callback function for when the Modal is dismissed light dismiss, before the animation completes.'
    name: onDismiss
    fullName: onDismiss
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onDismiss?: (ev?: React.MouseEvent<HTMLButtonElement>) => any;'
      return:
        type:
          - '(ev?: React.MouseEvent<HTMLButtonElement>) => any'
  - uid: 'office-ui-fabric-react!IModalProps#onDismissed:member'
    summary: A callback function which is called after the Modal is dismissed and the animation is complete.
    name: onDismissed
    fullName: onDismissed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onDismissed?: () => any;'
      return:
        type:
          - () => any
  - uid: 'office-ui-fabric-react!IModalProps#onLayerDidMount:member'
    summary: A callback function for when the Modal content is mounted on the overlay layer
    deprecated:
      content: Use layerProps.onLayerDidMount instead
    name: onLayerDidMount
    fullName: onLayerDidMount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onLayerDidMount?: () => void;'
      return:
        type:
          - () => void
  - uid: 'office-ui-fabric-react!IModalProps#overlay:member'
    summary: Defines an optional set of props to be passed through to Overlay
    name: overlay
    fullName: overlay
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overlay?: IOverlayProps;'
      return:
        type:
          - 'office-ui-fabric-react!IOverlayProps:interface'
  - uid: 'office-ui-fabric-react!IModalProps#scrollableContentClassName:member'
    summary: Optional override for scrollable content class
    name: scrollableContentClassName
    fullName: scrollableContentClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'scrollableContentClassName?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IModalProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IModalStyleProps, IModalStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IModalStyleProps, IModalStyles>'
  - uid: 'office-ui-fabric-react!IModalProps#subtitleAriaId:member'
    summary: 'ARIA id for the subtitle of the Modal, if any'
    name: subtitleAriaId
    fullName: subtitleAriaId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtitleAriaId?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IModalProps#theme:member'
    summary: Theme provided by High-Order Component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@uifabric/styling!ITheme:interface'
  - uid: 'office-ui-fabric-react!IModalProps#titleAriaId:member'
    summary: 'ARIA id for the title of the Modal, if any'
    name: titleAriaId
    fullName: titleAriaId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'titleAriaId?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IModalProps#topOffsetFixed:member'
    summary: >-
      Whether the modal should have top offset fixed once opened and expand from the bottom only when the content
      changes dynamically.
    name: topOffsetFixed
    fullName: topOffsetFixed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'topOffsetFixed?: boolean;'
      return:
        type:
          - boolean
