### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!IContextualMenuState:interface'
    name: IContextualMenuState
    fullName: IContextualMenuState
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!IContextualMenuState#contextualMenuItems:member'
      - '@fluentui/react-next!IContextualMenuState#contextualMenuTarget:member'
      - '@fluentui/react-next!IContextualMenuState#dismissedMenuItemKey:member'
      - '@fluentui/react-next!IContextualMenuState#expandedByMouseClick:member'
      - '@fluentui/react-next!IContextualMenuState#expandedMenuItemKey:member'
      - '@fluentui/react-next!IContextualMenuState#positions:member'
      - '@fluentui/react-next!IContextualMenuState#slideDirectionalClassName:member'
      - '@fluentui/react-next!IContextualMenuState#submenuDirection:member'
      - '@fluentui/react-next!IContextualMenuState#subMenuId:member'
      - '@fluentui/react-next!IContextualMenuState#submenuTarget:member'
  - uid: '@fluentui/react-next!IContextualMenuState#contextualMenuItems:member'
    name: contextualMenuItems
    fullName: contextualMenuItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'contextualMenuItems?: IContextualMenuItem[];'
      return:
        type:
          - 'IContextualMenuItem[]'
  - uid: '@fluentui/react-next!IContextualMenuState#contextualMenuTarget:member'
    name: contextualMenuTarget
    fullName: contextualMenuTarget
    langs:
      - typeScript
    type: property
    syntax:
      content: 'contextualMenuTarget?: Element;'
      return:
        type:
          - Element
  - uid: '@fluentui/react-next!IContextualMenuState#dismissedMenuItemKey:member'
    name: dismissedMenuItemKey
    fullName: dismissedMenuItemKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dismissedMenuItemKey?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IContextualMenuState#expandedByMouseClick:member'
    summary: True if the menu was expanded by mouse click OR hover (as opposed to by keyboard)
    name: expandedByMouseClick
    fullName: expandedByMouseClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'expandedByMouseClick?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IContextualMenuState#expandedMenuItemKey:member'
    name: expandedMenuItemKey
    fullName: expandedMenuItemKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'expandedMenuItemKey?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IContextualMenuState#positions:member'
    name: positions
    fullName: positions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'positions?: any;'
      return:
        type:
          - any
  - uid: '@fluentui/react-next!IContextualMenuState#slideDirectionalClassName:member'
    name: slideDirectionalClassName
    fullName: slideDirectionalClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'slideDirectionalClassName?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IContextualMenuState#submenuDirection:member'
    name: submenuDirection
    fullName: submenuDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'submenuDirection?: DirectionalHint;'
      return:
        type:
          - DirectionalHint
  - uid: '@fluentui/react-next!IContextualMenuState#subMenuId:member'
    name: subMenuId
    fullName: subMenuId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subMenuId?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IContextualMenuState#submenuTarget:member'
    name: submenuTarget
    fullName: submenuTarget
    langs:
      - typeScript
    type: property
    syntax:
      content: 'submenuTarget?: Element;'
      return:
        type:
          - Element
