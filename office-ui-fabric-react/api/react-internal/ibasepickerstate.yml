### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IBasePickerState:interface'
    name: IBasePickerState
    fullName: IBasePickerState
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IBasePickerState#isFocused:member'
      - '@fluentui/react-internal!IBasePickerState#isMostRecentlyUsedVisible:member'
      - '@fluentui/react-internal!IBasePickerState#isResultsFooterVisible:member'
      - '@fluentui/react-internal!IBasePickerState#isSearching:member'
      - '@fluentui/react-internal!IBasePickerState#items:member'
      - '@fluentui/react-internal!IBasePickerState#moreSuggestionsAvailable:member'
      - '@fluentui/react-internal!IBasePickerState#selectedIndices:member'
      - '@fluentui/react-internal!IBasePickerState#suggestedDisplayValue:member'
      - '@fluentui/react-internal!IBasePickerState#suggestionsLoading:member'
      - '@fluentui/react-internal!IBasePickerState#suggestionsVisible:member'
  - uid: '@fluentui/react-internal!IBasePickerState#isFocused:member'
    name: isFocused
    fullName: isFocused
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isFocused?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IBasePickerState#isMostRecentlyUsedVisible:member'
    name: isMostRecentlyUsedVisible
    fullName: isMostRecentlyUsedVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isMostRecentlyUsedVisible?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IBasePickerState#isResultsFooterVisible:member'
    name: isResultsFooterVisible
    fullName: isResultsFooterVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isResultsFooterVisible?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IBasePickerState#isSearching:member'
    name: isSearching
    fullName: isSearching
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSearching?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IBasePickerState#items:member'
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'items?: any;'
      return:
        type:
          - any
  - uid: '@fluentui/react-internal!IBasePickerState#moreSuggestionsAvailable:member'
    name: moreSuggestionsAvailable
    fullName: moreSuggestionsAvailable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'moreSuggestionsAvailable?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IBasePickerState#selectedIndices:member'
    name: selectedIndices
    fullName: selectedIndices
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedIndices?: number[];'
      return:
        type:
          - 'number[]'
  - uid: '@fluentui/react-internal!IBasePickerState#suggestedDisplayValue:member'
    name: suggestedDisplayValue
    fullName: suggestedDisplayValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'suggestedDisplayValue?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IBasePickerState#suggestionsLoading:member'
    name: suggestionsLoading
    fullName: suggestionsLoading
    langs:
      - typeScript
    type: property
    syntax:
      content: 'suggestionsLoading?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IBasePickerState#suggestionsVisible:member'
    name: suggestionsVisible
    fullName: suggestionsVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'suggestionsVisible?: boolean;'
      return:
        type:
          - boolean
