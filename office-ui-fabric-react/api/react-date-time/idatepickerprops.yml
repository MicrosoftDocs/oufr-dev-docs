### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-date-time!IDatePickerProps:interface'
    name: IDatePickerProps
    fullName: IDatePickerProps
    langs:
      - typeScript
    type: interface
    extends:
      - IBaseProps<IDatePicker>
      - React.HTMLAttributes<HTMLElement>
      - 'React.RefAttributes<HTMLDivElement> '
    package: '@fluentui/react-date-time!'
    children:
      - '@fluentui/react-date-time!IDatePickerProps#allFocusable:member'
      - '@fluentui/react-date-time!IDatePickerProps#allowTextInput:member'
      - '@fluentui/react-date-time!IDatePickerProps#ariaLabel:member'
      - '@fluentui/react-date-time!IDatePickerProps#borderless:member'
      - '@fluentui/react-date-time!IDatePickerProps#calendarAs:member'
      - '@fluentui/react-date-time!IDatePickerProps#calendarProps:member'
      - '@fluentui/react-date-time!IDatePickerProps#calloutProps:member'
      - '@fluentui/react-date-time!IDatePickerProps#className:member'
      - '@fluentui/react-date-time!IDatePickerProps#componentRef:member'
      - '@fluentui/react-date-time!IDatePickerProps#dateTimeFormatter:member'
      - '@fluentui/react-date-time!IDatePickerProps#disableAutoFocus:member'
      - '@fluentui/react-date-time!IDatePickerProps#disabled:member'
      - '@fluentui/react-date-time!IDatePickerProps#firstDayOfWeek:member'
      - '@fluentui/react-date-time!IDatePickerProps#firstWeekOfYear:member'
      - '@fluentui/react-date-time!IDatePickerProps#formatDate:member'
      - '@fluentui/react-date-time!IDatePickerProps#highlightCurrentMonth:member'
      - '@fluentui/react-date-time!IDatePickerProps#highlightSelectedMonth:member'
      - '@fluentui/react-date-time!IDatePickerProps#initialPickerDate:member'
      - '@fluentui/react-date-time!IDatePickerProps#isMonthPickerVisible:member'
      - '@fluentui/react-date-time!IDatePickerProps#isRequired:member'
      - '@fluentui/react-date-time!IDatePickerProps#label:member'
      - '@fluentui/react-date-time!IDatePickerProps#maxDate:member'
      - '@fluentui/react-date-time!IDatePickerProps#minDate:member'
      - '@fluentui/react-date-time!IDatePickerProps#onAfterMenuDismiss:member'
      - '@fluentui/react-date-time!IDatePickerProps#onSelectDate:member'
      - '@fluentui/react-date-time!IDatePickerProps#parseDateFromString:member'
      - '@fluentui/react-date-time!IDatePickerProps#pickerAriaLabel:member'
      - '@fluentui/react-date-time!IDatePickerProps#placeholder:member'
      - '@fluentui/react-date-time!IDatePickerProps#showCloseButton:member'
      - '@fluentui/react-date-time!IDatePickerProps#showGoToToday:member'
      - '@fluentui/react-date-time!IDatePickerProps#showMonthPickerAsOverlay:member'
      - '@fluentui/react-date-time!IDatePickerProps#showWeekNumbers:member'
      - '@fluentui/react-date-time!IDatePickerProps#strings:member'
      - '@fluentui/react-date-time!IDatePickerProps#styles:member'
      - '@fluentui/react-date-time!IDatePickerProps#tabIndex:member'
      - '@fluentui/react-date-time!IDatePickerProps#textField:member'
      - '@fluentui/react-date-time!IDatePickerProps#theme:member'
      - '@fluentui/react-date-time!IDatePickerProps#today:member'
      - '@fluentui/react-date-time!IDatePickerProps#underlined:member'
      - '@fluentui/react-date-time!IDatePickerProps#value:member'
  - uid: '@fluentui/react-date-time!IDatePickerProps#allFocusable:member'
    summary: 'Allows all elements to be focused, including disabled ones'
    name: allFocusable
    fullName: allFocusable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'allFocusable?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#allowTextInput:member'
    summary: Whether the DatePicker allows input a date string directly or not
    name: allowTextInput
    fullName: allowTextInput
    langs:
      - typeScript
    type: property
    syntax:
      content: 'allowTextInput?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#ariaLabel:member'
    summary: Aria Label for TextField of the DatePicker for screen reader users.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-date-time!IDatePickerProps#borderless:member'
    summary: Determines if the DatePicker has a border.
    name: borderless
    fullName: borderless
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderless?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#calendarAs:member'
    summary: Custom Calendar to be used for date picking
    name: calendarAs
    fullName: calendarAs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calendarAs?: IComponentAs<ICalendarProps>;'
      return:
        type:
          - IComponentAs<ICalendarProps>
  - uid: '@fluentui/react-date-time!IDatePickerProps#calendarProps:member'
    summary: Pass calendar props to calendar component
    name: calendarProps
    fullName: calendarProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calendarProps?: ICalendarProps;'
      return:
        type:
          - ICalendarProps
  - uid: '@fluentui/react-date-time!IDatePickerProps#calloutProps:member'
    summary: Pass callout props to callout component
    name: calloutProps
    fullName: calloutProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calloutProps?: ICalloutProps;'
      return:
        type:
          - ICalloutProps
  - uid: '@fluentui/react-date-time!IDatePickerProps#className:member'
    summary: Optional CSS class for the DatePicker root element.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-date-time!IDatePickerProps#componentRef:member'
    summary: >-
      Optional callback to access the IDatePicker interface. Use this instead of ref for accessing the public methods
      and properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IDatePicker>;'
      return:
        type:
          - IRefObject<IDatePicker>
  - uid: '@fluentui/react-date-time!IDatePickerProps#dateTimeFormatter:member'
    summary: 'Apply additional formating to dates, for example localized date formatting.'
    name: dateTimeFormatter
    fullName: dateTimeFormatter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dateTimeFormatter?: IDateFormatting;'
      return:
        type:
          - '@fluentui/date-time-utilities!IDateFormatting:interface'
  - uid: '@fluentui/react-date-time!IDatePickerProps#disableAutoFocus:member'
    summary: Whether the DatePicker should open automatically when the control is focused
    name: disableAutoFocus
    fullName: disableAutoFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disableAutoFocus?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#disabled:member'
    summary: Disabled state of the DatePicker.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#firstDayOfWeek:member'
    summary: The first day of the week for your locale.
    name: firstDayOfWeek
    fullName: firstDayOfWeek
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstDayOfWeek?: DayOfWeek;'
      return:
        type:
          - '@fluentui/date-time-utilities!DayOfWeek:enum'
  - uid: '@fluentui/react-date-time!IDatePickerProps#firstWeekOfYear:member'
    summary: >-
      Defines when the first week of the year should start, FirstWeekOfYear.FirstDay, FirstWeekOfYear.FirstFullWeek or
      FirstWeekOfYear.FirstFourDayWeek are the possible values
    name: firstWeekOfYear
    fullName: firstWeekOfYear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstWeekOfYear?: FirstWeekOfYear;'
      return:
        type:
          - '@fluentui/date-time-utilities!FirstWeekOfYear:enum'
  - uid: '@fluentui/react-date-time!IDatePickerProps#formatDate:member'
    summary: Optional method to format the chosen date to a string to display in the DatePicker
    name: formatDate
    fullName: formatDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formatDate?: (date?: Date) => string;'
      return:
        type:
          - '(date?: Date) => string'
  - uid: '@fluentui/react-date-time!IDatePickerProps#highlightCurrentMonth:member'
    summary: Whether the month picker should highlight the current month
    name: highlightCurrentMonth
    fullName: highlightCurrentMonth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightCurrentMonth?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#highlightSelectedMonth:member'
    summary: Whether the month picker should highlight the selected month
    name: highlightSelectedMonth
    fullName: highlightSelectedMonth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightSelectedMonth?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#initialPickerDate:member'
    summary: The initially highlighted date.
    name: initialPickerDate
    fullName: initialPickerDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'initialPickerDate?: Date;'
      return:
        type:
          - Date
  - uid: '@fluentui/react-date-time!IDatePickerProps#isMonthPickerVisible:member'
    summary: Whether the month picker is shown beside the day picker or hidden.
    name: isMonthPickerVisible
    fullName: isMonthPickerVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isMonthPickerVisible?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#isRequired:member'
    summary: Whether the DatePicker is a required field or not
    name: isRequired
    fullName: isRequired
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isRequired?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#label:member'
    summary: Label for the DatePicker
    name: label
    fullName: label
    langs:
      - typeScript
    type: property
    syntax:
      content: 'label?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-date-time!IDatePickerProps#maxDate:member'
    summary: The maximum allowable date.
    name: maxDate
    fullName: maxDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxDate?: Date;'
      return:
        type:
          - Date
  - uid: '@fluentui/react-date-time!IDatePickerProps#minDate:member'
    summary: The minimum allowable date.
    name: minDate
    fullName: minDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minDate?: Date;'
      return:
        type:
          - Date
  - uid: '@fluentui/react-date-time!IDatePickerProps#onAfterMenuDismiss:member'
    summary: Callback that runs after DatePicker's menu (Calendar) is closed
    name: onAfterMenuDismiss
    fullName: onAfterMenuDismiss
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onAfterMenuDismiss?: () => void;'
      return:
        type:
          - () => void
  - uid: '@fluentui/react-date-time!IDatePickerProps#onSelectDate:member'
    summary: Callback issued when a date is selected
    name: onSelectDate
    fullName: onSelectDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onSelectDate?: (date: Date | null | undefined) => void;'
      return:
        type:
          - '(date: Date | null | undefined) => void'
  - uid: '@fluentui/react-date-time!IDatePickerProps#parseDateFromString:member'
    summary: 'Optional method to parse the text input value to date, it is only useful when allowTextInput is set to true'
    name: parseDateFromString
    fullName: parseDateFromString
    langs:
      - typeScript
    type: property
    syntax:
      content: 'parseDateFromString?: (dateStr: string) => Date | null;'
      return:
        type:
          - '(dateStr: string) => Date | null'
  - uid: '@fluentui/react-date-time!IDatePickerProps#pickerAriaLabel:member'
    summary: Aria label for date picker popup for screen reader users.
    name: pickerAriaLabel
    fullName: pickerAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pickerAriaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-date-time!IDatePickerProps#placeholder:member'
    summary: Placeholder text for the DatePicker
    name: placeholder
    fullName: placeholder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'placeholder?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-date-time!IDatePickerProps#showCloseButton:member'
    summary: Whether the CalendarDay close button should be shown or not.
    name: showCloseButton
    fullName: showCloseButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showCloseButton?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#showGoToToday:member'
    summary: Whether the "Go to today" link should be shown or not
    name: showGoToToday
    fullName: showGoToToday
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showGoToToday?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#showMonthPickerAsOverlay:member'
    summary: Show month picker on top of date picker when visible.
    name: showMonthPickerAsOverlay
    fullName: showMonthPickerAsOverlay
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showMonthPickerAsOverlay?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#showWeekNumbers:member'
    summary: Whether the calendar should show the week number (weeks 1 to 53) before each week row
    name: showWeekNumbers
    fullName: showWeekNumbers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showWeekNumbers?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#strings:member'
    summary: Localized strings to use in the DatePicker
    name: strings
    fullName: strings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strings?: IDatePickerStrings;'
      return:
        type:
          - IDatePickerStrings
  - uid: '@fluentui/react-date-time!IDatePickerProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IDatePickerStyleProps, IDatePickerStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IDatePickerStyleProps, IDatePickerStyles>'
  - uid: '@fluentui/react-date-time!IDatePickerProps#tabIndex:member'
    summary: The tabIndex of the TextField
    name: tabIndex
    fullName: tabIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tabIndex?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-date-time!IDatePickerProps#textField:member'
    summary: Pass textField props to textField component. Prop name is "textField" for compatiblity with upcoming slots work.
    name: textField
    fullName: textField
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textField?: ITextFieldProps;'
      return:
        type:
          - ITextFieldProps
  - uid: '@fluentui/react-date-time!IDatePickerProps#theme:member'
    summary: Theme provided by High-Order Component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
  - uid: '@fluentui/react-date-time!IDatePickerProps#today:member'
    summary: 'Value of today. If unspecified, current time in client machine will be used.'
    name: today
    fullName: today
    langs:
      - typeScript
    type: property
    syntax:
      content: 'today?: Date;'
      return:
        type:
          - Date
  - uid: '@fluentui/react-date-time!IDatePickerProps#underlined:member'
    summary: Whether or not the Textfield of the DatePicker is underlined.
    name: underlined
    fullName: underlined
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underlined?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IDatePickerProps#value:member'
    summary: 'Default value of the DatePicker, if any'
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value?: Date;'
      return:
        type:
          - Date
