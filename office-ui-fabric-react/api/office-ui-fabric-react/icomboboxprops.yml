### YamlMime:TSType
name: IComboBoxProps
uid: 'office-ui-fabric-react!IComboBoxProps:interface'
package: office-ui-fabric-react!
fullName: IComboBoxProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: allowFreeform
    uid: 'office-ui-fabric-react!IComboBoxProps#allowFreeform:member'
    package: office-ui-fabric-react!
    fullName: allowFreeform
    summary: >-
      Whether the ComboBox is free form, meaning that the user input is not
      bound to provided options. Defaults to false.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allowFreeform?: boolean;'
      return:
        type: boolean
  - name: ariaDescribedBy
    uid: 'office-ui-fabric-react!IComboBoxProps#ariaDescribedBy:member'
    package: office-ui-fabric-react!
    fullName: ariaDescribedBy
    summary: >-
      Optional prop to add a string id that can be referenced inside the
      aria-describedby attribute
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaDescribedBy?: string;'
      return:
        type: string
  - name: autoComplete
    uid: 'office-ui-fabric-react!IComboBoxProps#autoComplete:member'
    package: office-ui-fabric-react!
    fullName: autoComplete
    summary: >-
      Whether the ComboBox auto completes. As the user is inputing text, it will
      be suggested potential matches from the list of options. If the combo box
      is expanded, this will also scroll to the suggested option, and give it a
      selected style.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoComplete?: ''on'' | ''off'';'
      return:
        type: '''on'' | ''off'''
  - name: autofill
    uid: 'office-ui-fabric-react!IComboBoxProps#autofill:member'
    package: office-ui-fabric-react!
    fullName: autofill
    summary: The AutofillProps to be passed into the Autofill component inside combobox
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autofill?: IAutofillProps;'
      return:
        type: IAutofillProps
  - name: buttonIconProps
    uid: 'office-ui-fabric-react!IComboBoxProps#buttonIconProps:member'
    package: office-ui-fabric-react!
    fullName: buttonIconProps
    summary: The IconProps to use for the button aspect of the combobox
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'buttonIconProps?: IIconProps;'
      return:
        type: IIconProps
  - name: caretDownButtonStyles
    uid: 'office-ui-fabric-react!IComboBoxProps#caretDownButtonStyles:member'
    package: office-ui-fabric-react!
    fullName: caretDownButtonStyles
    summary: Styles for the caret down button.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'caretDownButtonStyles?: Partial<IButtonStyles>;'
      return:
        type: Partial&lt;IButtonStyles&gt;
  - name: comboBoxOptionStyles
    uid: 'office-ui-fabric-react!IComboBoxProps#comboBoxOptionStyles:member'
    package: office-ui-fabric-react!
    fullName: comboBoxOptionStyles
    summary: >-
      Default styles that should be applied to ComboBox options, in case an
      option does not come with user-defined custom styles
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'comboBoxOptionStyles?: Partial<IComboBoxOptionStyles>;'
      return:
        type: Partial&lt;IComboBoxOptionStyles&gt;
  - name: componentRef
    uid: 'office-ui-fabric-react!IComboBoxProps#componentRef:member'
    package: office-ui-fabric-react!
    fullName: componentRef
    summary: >-
      Optional callback to access the IComboBox interface. Use this instead of
      ref for accessing the public methods and properties of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IComboBox>;'
      return:
        type: IRefObject&lt;IComboBox&gt;
  - name: dropdownMaxWidth
    uid: 'office-ui-fabric-react!IComboBoxProps#dropdownMaxWidth:member'
    package: office-ui-fabric-react!
    fullName: dropdownMaxWidth
    summary: Custom max width for dropdown
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dropdownMaxWidth?: number;'
      return:
        type: number
  - name: dropdownWidth
    uid: 'office-ui-fabric-react!IComboBoxProps#dropdownWidth:member'
    package: office-ui-fabric-react!
    fullName: dropdownWidth
    summary: >-
      Custom width for dropdown (unless useComboBoxAsMenuWidth is undefined or
      false)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dropdownWidth?: number;'
      return:
        type: number
  - name: getClassNames
    uid: 'office-ui-fabric-react!IComboBoxProps#getClassNames:member'
    package: office-ui-fabric-react!
    fullName: getClassNames
    summary: >-
      Custom function for providing the classNames for the ComboBox. Can be used
      to provide all styles for the component instead of applying them on top of
      the default styles.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getClassNames?: (theme: ITheme, isOpen: boolean, disabled: boolean,
        required: boolean, focused: boolean, allowFreeForm: boolean,
        hasErrorMessage: boolean, className?: string) => IComboBoxClassNames;
      return:
        type: >-
          (theme: ITheme, isOpen: boolean, disabled: boolean, required: boolean,
          focused: boolean, allowFreeForm: boolean, hasErrorMessage: boolean,
          className?: string) =&gt; IComboBoxClassNames
  - name: iconButtonProps
    uid: 'office-ui-fabric-react!IComboBoxProps#iconButtonProps:member'
    package: office-ui-fabric-react!
    fullName: iconButtonProps
    summary: Optional iconButton props on combo box
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'iconButtonProps?: IButtonProps;'
      return:
        type: IButtonProps
  - name: isButtonAriaHidden
    uid: 'office-ui-fabric-react!IComboBoxProps#isButtonAriaHidden:member'
    package: office-ui-fabric-react!
    fullName: isButtonAriaHidden
    summary: >-
      Sets the 'aria-hidden' attribute on the ComboBox's button element
      instructing screen readers how to handle the element. This element is
      hidden by default because all functionality is handled by the input
      element and the arrow button is only meant to be decorative.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isButtonAriaHidden?: boolean;'
      return:
        type: boolean
  - name: keytipProps
    uid: 'office-ui-fabric-react!IComboBoxProps#keytipProps:member'
    package: office-ui-fabric-react!
    fullName: keytipProps
    summary: Optional keytip for this combo box
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'keytipProps?: IKeytipProps;'
      return:
        type: IKeytipProps
  - name: multiSelectDelimiter
    uid: 'office-ui-fabric-react!IComboBoxProps#multiSelectDelimiter:member'
    package: office-ui-fabric-react!
    fullName: multiSelectDelimiter
    summary: >-
      When multiple items are selected, this will be used to separate values in
      the combobox input.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'multiSelectDelimiter?: string;'
      return:
        type: string
  - name: onChange
    uid: 'office-ui-fabric-react!IComboBoxProps#onChange:member'
    package: office-ui-fabric-react!
    fullName: onChange
    summary: >-
      Callback issued when either: 1) the selected option changes 2) a manually
      edited value is submitted. In this case there may not be a matched option
      if allowFreeform is also true (and hence only value would be true, the
      other parameter would be null in this case)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onChange?: (event: React.FormEvent<IComboBox>, option?: IComboBoxOption,
        index?: number, value?: string) => void;
      return:
        type: >-
          (event: React.FormEvent&lt;IComboBox&gt;, option?: IComboBoxOption,
          index?: number, value?: string) =&gt; void
  - name: onItemClick
    uid: 'office-ui-fabric-react!IComboBoxProps#onItemClick:member'
    package: office-ui-fabric-react!
    fullName: onItemClick
    summary: Callback issued when a ComboBox item is clicked.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onItemClick?: (event: React.FormEvent<IComboBox>, option?:
        IComboBoxOption, index?: number) => void;
      return:
        type: >-
          (event: React.FormEvent&lt;IComboBox&gt;, option?: IComboBoxOption,
          index?: number) =&gt; void
  - name: onMenuDismiss
    uid: 'office-ui-fabric-react!IComboBoxProps#onMenuDismiss:member'
    package: office-ui-fabric-react!
    fullName: onMenuDismiss
    summary: Function that gets invoked before the menu gets dismissed
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMenuDismiss?: () => void;'
      return:
        type: () =&gt; void
  - name: onMenuDismissed
    uid: 'office-ui-fabric-react!IComboBoxProps#onMenuDismissed:member'
    package: office-ui-fabric-react!
    fullName: onMenuDismissed
    summary: Function that gets invoked when the ComboBox menu is dismissed
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMenuDismissed?: () => void;'
      return:
        type: () =&gt; void
  - name: onMenuOpen
    uid: 'office-ui-fabric-react!IComboBoxProps#onMenuOpen:member'
    package: office-ui-fabric-react!
    fullName: onMenuOpen
    summary: Function that gets invoked when the ComboBox menu is launched
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMenuOpen?: () => void;'
      return:
        type: () =&gt; void
  - name: onPendingValueChanged
    uid: 'office-ui-fabric-react!IComboBoxProps#onPendingValueChanged:member'
    package: office-ui-fabric-react!
    fullName: onPendingValueChanged
    summary: >-
      Callback issued when the user changes the pending value in ComboBox. This
      will be called any time the component is updated and there is a current
      pending value. Option, index, and value will all be undefined if no change
      has taken place and the previously entered pending value is still valid.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPendingValueChanged?: (option?: IComboBoxOption, index?: number,
        value?: string) => void;
      return:
        type: '(option?: IComboBoxOption, index?: number, value?: string) =&gt; void'
  - name: onRenderLabel
    uid: 'office-ui-fabric-react!IComboBoxProps#onRenderLabel:member'
    package: office-ui-fabric-react!
    fullName: onRenderLabel
    summary: Custom render function for the label text.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderLabel?: IRenderFunction<IOnRenderComboBoxLabelProps>;'
      return:
        type: IRenderFunction&lt;IOnRenderComboBoxLabelProps&gt;
  - name: onRenderLowerContent
    uid: 'office-ui-fabric-react!IComboBoxProps#onRenderLowerContent:member'
    package: office-ui-fabric-react!
    fullName: onRenderLowerContent
    summary: Add additional content below the callout list.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderLowerContent?: IRenderFunction<IComboBoxProps>;'
      return:
        type: IRenderFunction&lt;IComboBoxProps&gt;
  - name: onRenderUpperContent
    uid: 'office-ui-fabric-react!IComboBoxProps#onRenderUpperContent:member'
    package: office-ui-fabric-react!
    fullName: onRenderUpperContent
    summary: Add additional content above the callout list.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderUpperContent?: IRenderFunction<IComboBoxProps>;'
      return:
        type: IRenderFunction&lt;IComboBoxProps&gt;
  - name: onResolveOptions
    uid: 'office-ui-fabric-react!IComboBoxProps#onResolveOptions:member'
    package: office-ui-fabric-react!
    fullName: onResolveOptions
    summary: >-
      Callback issued when the options should be resolved, if they have been
      updated or if they need to be passed in the first time
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onResolveOptions?: (options: IComboBoxOption[]) => IComboBoxOption[] |
        PromiseLike<IComboBoxOption[]>;
      return:
        type: >-
          (options: IComboBoxOption[]) =&gt; IComboBoxOption[] |
          PromiseLike&lt;IComboBoxOption[]&gt;
  - name: onScrollToItem
    uid: 'office-ui-fabric-react!IComboBoxProps#onScrollToItem:member'
    package: office-ui-fabric-react!
    fullName: onScrollToItem
    summary: >-
      Callback issued when the ComboBox requests the list to scroll to a
      specific element
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onScrollToItem?: (itemIndex: number) => void;'
      return:
        type: '(itemIndex: number) =&gt; void'
  - name: options
    uid: 'office-ui-fabric-react!IComboBoxProps#options:member'
    package: office-ui-fabric-react!
    fullName: options
    summary: Collection of options for this ComboBox
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'options: IComboBoxOption[];'
      return:
        type: 'IComboBoxOption[]'
  - name: persistMenu
    uid: 'office-ui-fabric-react!IComboBoxProps#persistMenu:member'
    package: office-ui-fabric-react!
    fullName: persistMenu
    summary: >-
      Menu will not be created or destroyed when opened or closed, instead it
      will be hidden. This will improve perf of the menu opening but could
      potentially impact overall perf by having more elements in the dom. Should
      only be used when perf is important. Note: This may increase the amount of
      time it takes for the comboBox itself to mount.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'persistMenu?: boolean;'
      return:
        type: boolean
  - name: scrollSelectedToTop
    uid: 'office-ui-fabric-react!IComboBoxProps#scrollSelectedToTop:member'
    package: office-ui-fabric-react!
    fullName: scrollSelectedToTop
    summary: >-
      When options are scrollable the selected option is positioned at the top
      of the callout when it is opened (unless it has reached the end of the
      scrollbar).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scrollSelectedToTop?: boolean;'
      return:
        type: boolean
  - name: shouldRestoreFocus
    uid: 'office-ui-fabric-react!IComboBoxProps#shouldRestoreFocus:member'
    package: office-ui-fabric-react!
    fullName: shouldRestoreFocus
    summary: >-
      When specified, determines whether the callout (the menu which drops down)
      should restore the focus after being dismissed or not. If false, then the
      menu will not try to set focus to whichever element had focus before the
      menu was opened.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'shouldRestoreFocus?: boolean;'
      return:
        type: boolean
  - name: styles
    uid: 'office-ui-fabric-react!IComboBoxProps#styles:member'
    package: office-ui-fabric-react!
    fullName: styles
    summary: Custom styles for this component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: Partial<IComboBoxStyles>;'
      return:
        type: Partial&lt;IComboBoxStyles&gt;
  - name: text
    uid: 'office-ui-fabric-react!IComboBoxProps#text:member'
    package: office-ui-fabric-react!
    fullName: text
    summary: 'Value to show in the input, does not have to map to a combobox option'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'text?: string;'
      return:
        type: string
  - name: theme
    uid: 'office-ui-fabric-react!IComboBoxProps#theme:member'
    package: office-ui-fabric-react!
    fullName: theme
    summary: Theme provided by HOC.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
  - name: useComboBoxAsMenuWidth
    uid: 'office-ui-fabric-react!IComboBoxProps#useComboBoxAsMenuWidth:member'
    package: office-ui-fabric-react!
    fullName: useComboBoxAsMenuWidth
    summary: Whether to use the ComboBoxes width as the menu's width
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useComboBoxAsMenuWidth?: boolean;'
      return:
        type: boolean
extends: 'ISelectableDroppableTextProps&lt;IComboBox, IComboBox&gt; '
