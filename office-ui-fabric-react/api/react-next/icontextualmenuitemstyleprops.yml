### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps:interface'
    name: IContextualMenuItemStyleProps
    fullName: IContextualMenuItemStyleProps
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!IContextualMenuItemStyleProps#checked:member'
      - '@fluentui/react-next!IContextualMenuItemStyleProps#className:member'
      - '@fluentui/react-next!IContextualMenuItemStyleProps#disabled:member'
      - '@fluentui/react-next!IContextualMenuItemStyleProps#dividerClassName:member'
      - '@fluentui/react-next!IContextualMenuItemStyleProps#expanded:member'
      - '@fluentui/react-next!IContextualMenuItemStyleProps#iconClassName:member'
      - '@fluentui/react-next!IContextualMenuItemStyleProps#isAnchorLink:member'
      - '@fluentui/react-next!IContextualMenuItemStyleProps#itemClassName:member'
      - '@fluentui/react-next!IContextualMenuItemStyleProps#knownIcon:member'
      - '@fluentui/react-next!IContextualMenuItemStyleProps#primaryDisabled:member'
      - '@fluentui/react-next!IContextualMenuItemStyleProps#subMenuClassName:member'
      - '@fluentui/react-next!IContextualMenuItemStyleProps#theme:member'
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#checked:member'
    summary: Whether or not the menu item is checked.
    name: checked
    fullName: checked
    langs:
      - typeScript
    type: property
    syntax:
      content: 'checked: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#className:member'
    summary: Accept custom classNames
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#disabled:member'
    summary: Whether or not the menu item is disabled.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#dividerClassName:member'
    summary: The optional class name to apply to the divider element.
    name: dividerClassName
    fullName: dividerClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dividerClassName?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#expanded:member'
    summary: Whether or not the menu item is expanded.
    name: expanded
    fullName: expanded
    langs:
      - typeScript
    type: property
    syntax:
      content: 'expanded: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#iconClassName:member'
    summary: The optional class name to apply to the icon element.
    name: iconClassName
    fullName: iconClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'iconClassName?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#isAnchorLink:member'
    summary: Indicates if a menu item is an anchor link.
    name: isAnchorLink
    fullName: isAnchorLink
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isAnchorLink: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#itemClassName:member'
    summary: The optional class name to apply to the item element.
    name: itemClassName
    fullName: itemClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemClassName?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#knownIcon:member'
    summary: Indicates if the icon used is of the known set of icons.
    name: knownIcon
    fullName: knownIcon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'knownIcon: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#primaryDisabled:member'
    summary: Whether or not the primary section of a split menu item is disabled.
    name: primaryDisabled
    fullName: primaryDisabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'primaryDisabled?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#subMenuClassName:member'
    summary: The optional class name to apply to the sub-menu if present.
    name: subMenuClassName
    fullName: subMenuClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subMenuClassName?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps#theme:member'
    summary: Theme provided by High-Order Component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme: ITheme;'
      return:
        type:
          - '@uifabric/styling!ITheme:interface'
