### YamlMime:TSType
name: IPickerItemProps
uid: '@fluentui/react!IPickerItemProps:interface'
package: '@fluentui/react!'
fullName: IPickerItemProps
summary: PickerItem props common for any type of items.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: componentRef
    uid: '@fluentui/react!IPickerItemProps#componentRef:member'
    package: '@fluentui/react!'
    fullName: componentRef
    summary: >-
      Optional callback to access the IPickerItem interface. Use this instead of
      ref for accessing the public methods and properties of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IPickerItem>;'
      return:
        type: IRefObject&lt;IPickerItem&gt;
  - name: index
    uid: '@fluentui/react!IPickerItemProps#index:member'
    package: '@fluentui/react!'
    fullName: index
    summary: Index number of the item in the array of picked items.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'index: number;'
      return:
        type: number
  - name: item
    uid: '@fluentui/react!IPickerItemProps#item:member'
    package: '@fluentui/react!'
    fullName: item
    summary: 'The item of Type T (Persona, Tag, or any other custom item provided).'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'item: T;'
      return:
        type: T
  - name: key
    uid: '@fluentui/react!IPickerItemProps#key:member'
    package: '@fluentui/react!'
    fullName: key
    summary: Unique key for each picked item.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'key?: string | number;'
      return:
        type: string | number
  - name: onItemChange
    uid: '@fluentui/react!IPickerItemProps#onItemChange:member'
    package: '@fluentui/react!'
    fullName: onItemChange
    summary: >-
      Internal Use only, gives a callback to the renderer to call when an item
      has changed. This allows the base picker to keep track of changes in the
      items.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onItemChange?: (item: T, index: number) => void;'
      return:
        type: '(item: T, index: number) =&gt; void'
  - name: onRemoveItem
    uid: '@fluentui/react!IPickerItemProps#onRemoveItem:member'
    package: '@fluentui/react!'
    fullName: onRemoveItem
    summary: Callback issued when the item is removed from the array of picked items.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRemoveItem?: () => void;'
      return:
        type: () =&gt; void
  - name: removeButtonAriaLabel
    uid: '@fluentui/react!IPickerItemProps#removeButtonAriaLabel:member'
    package: '@fluentui/react!'
    fullName: removeButtonAriaLabel
    summary: Aria-label for the picked item remove button.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'removeButtonAriaLabel?: string;'
      return:
        type: string
  - name: selected
    uid: '@fluentui/react!IPickerItemProps#selected:member'
    package: '@fluentui/react!'
    fullName: selected
    summary: Whether the picked item is selected or not.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selected?: boolean;'
      return:
        type: boolean
extends: 'React.AllHTMLAttributes&lt;HTMLElement&gt; '
