### YamlMime:TSType
name: ISelectionOptions
uid: '@fluentui/utilities!ISelectionOptions:interface'
package: '@fluentui/utilities!'
fullName: ISelectionOptions
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: canSelectItem
    uid: '@fluentui/utilities!ISelectionOptions#canSelectItem:member'
    package: '@fluentui/utilities!'
    fullName: canSelectItem
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'canSelectItem?: (item: TItem, index?: number) => boolean;'
      return:
        type: '(item: TItem, index?: number) =&gt; boolean'
  - name: getKey
    uid: '@fluentui/utilities!ISelectionOptions#getKey:member'
    package: '@fluentui/utilities!'
    fullName: getKey
    summary: >-
      Custom logic to generate item keys. Required if `TItem` does not have a
      `key` property.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getKey?: (item: TItem, index?: number) => string | number;'
      return:
        type: '(item: TItem, index?: number) =&gt; string | number'
  - name: items
    uid: '@fluentui/utilities!ISelectionOptions#items:member'
    package: '@fluentui/utilities!'
    fullName: items
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'items?: TItem[];'
      return:
        type: 'TItem[]'
  - name: onSelectionChanged
    uid: '@fluentui/utilities!ISelectionOptions#onSelectionChanged:member'
    package: '@fluentui/utilities!'
    fullName: onSelectionChanged
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSelectionChanged?: () => void;'
      return:
        type: () =&gt; void
  - name: selectionMode
    uid: '@fluentui/utilities!ISelectionOptions#selectionMode:member'
    package: '@fluentui/utilities!'
    fullName: selectionMode
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectionMode?: SelectionMode;'
      return:
        type: '<xref uid="@fluentui/utilities!SelectionMode:enum" />'
