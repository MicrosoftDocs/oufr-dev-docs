### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IOverflowSetProps:interface'
    name: IOverflowSetProps
    fullName: IOverflowSetProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.RefAttributes<HTMLElement> '
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IOverflowSetProps#className:member'
      - '@fluentui/react-internal!IOverflowSetProps#componentRef:member'
      - '@fluentui/react-internal!IOverflowSetProps#items:member'
      - '@fluentui/react-internal!IOverflowSetProps#itemSubMenuProvider:member'
      - '@fluentui/react-internal!IOverflowSetProps#keytipSequences:member'
      - '@fluentui/react-internal!IOverflowSetProps#onRenderItem:member'
      - '@fluentui/react-internal!IOverflowSetProps#onRenderOverflowButton:member'
      - '@fluentui/react-internal!IOverflowSetProps#overflowItems:member'
      - '@fluentui/react-internal!IOverflowSetProps#overflowSide:member'
      - '@fluentui/react-internal!IOverflowSetProps#role:member'
      - '@fluentui/react-internal!IOverflowSetProps#styles:member'
      - '@fluentui/react-internal!IOverflowSetProps#vertical:member'
  - uid: '@fluentui/react-internal!IOverflowSetProps#className:member'
    summary: Class name
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IOverflowSetProps#componentRef:member'
    summary: Gets the component ref.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IOverflowSet>;'
      return:
        type:
          - IRefObject<IOverflowSet>
  - uid: '@fluentui/react-internal!IOverflowSetProps#items:member'
    summary: An array of items to be rendered by your onRenderItem function in the primary content area
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'items?: IOverflowSetItemProps[];'
      return:
        type:
          - 'IOverflowSetItemProps[]'
  - uid: '@fluentui/react-internal!IOverflowSetProps#itemSubMenuProvider:member'
    summary: >-
      Function that will take in an IOverflowSetItemProps and return the subMenu for that item. If not provided, will
      use 'item.subMenuProps.items' by default. This is only used if your overflow set has keytips.
    name: itemSubMenuProvider
    fullName: itemSubMenuProvider
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemSubMenuProvider?: (item: IOverflowSetItemProps) => any[] | undefined;'
      return:
        type:
          - '(item: IOverflowSetItemProps) => any[] | undefined'
  - uid: '@fluentui/react-internal!IOverflowSetProps#keytipSequences:member'
    summary: 'Optional full keytip sequence for the overflow button, if it will have a keytip.'
    name: keytipSequences
    fullName: keytipSequences
    langs:
      - typeScript
    type: property
    syntax:
      content: 'keytipSequences?: string[];'
      return:
        type:
          - 'string[]'
  - uid: '@fluentui/react-internal!IOverflowSetProps#onRenderItem:member'
    summary: Method to call when trying to render an item.
    name: onRenderItem
    fullName: onRenderItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderItem: (item: IOverflowSetItemProps) => any;'
      return:
        type:
          - '(item: IOverflowSetItemProps) => any'
  - uid: '@fluentui/react-internal!IOverflowSetProps#onRenderOverflowButton:member'
    summary: >-
      Rendering method for overflow button and contextual menu. The argument to the function is the overflowItems passed
      in as props to this function.
    name: onRenderOverflowButton
    fullName: onRenderOverflowButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderOverflowButton: IRenderFunction<any[]>;'
      return:
        type:
          - 'IRenderFunction<any[]>'
  - uid: '@fluentui/react-internal!IOverflowSetProps#overflowItems:member'
    summary: An array of items to be passed to overflow contextual menu
    name: overflowItems
    fullName: overflowItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowItems?: IOverflowSetItemProps[];'
      return:
        type:
          - 'IOverflowSetItemProps[]'
  - uid: '@fluentui/react-internal!IOverflowSetProps#overflowSide:member'
    summary: >-
      Controls wether or not the overflow button is placed at the start or end of the items. This gives a reversed
      visual behavior but maintains correct keyboard navigation.
    name: overflowSide
    fullName: overflowSide
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowSide?: ''start'' | ''end'';'
      return:
        type:
          - '''start'' | ''end'''
  - uid: '@fluentui/react-internal!IOverflowSetProps#role:member'
    summary: The role for the OverflowSet.
    name: role
    fullName: role
    langs:
      - typeScript
    type: property
    syntax:
      content: 'role?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IOverflowSetProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IOverflowSetProps, IOverflowSetStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IOverflowSetProps, IOverflowSetStyles>'
  - uid: '@fluentui/react-internal!IOverflowSetProps#vertical:member'
    summary: >-
      Change item layout direction to vertical/stacked. If role is set to `menubar`<!-- -->, `vertical={true}` will also
      add proper `aria-orientation`<!-- -->.
    name: vertical
    fullName: vertical
    langs:
      - typeScript
    type: property
    syntax:
      content: 'vertical?: boolean;'
      return:
        type:
          - boolean
