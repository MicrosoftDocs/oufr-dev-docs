### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IPanelStyleProps:interface'
    name: IPanelStyleProps
    fullName: IPanelStyleProps
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IPanelStyleProps#className:member'
      - '@fluentui/react-internal!IPanelStyleProps#focusTrapZoneClassName:member'
      - '@fluentui/react-internal!IPanelStyleProps#hasCloseButton:member'
      - '@fluentui/react-internal!IPanelStyleProps#hasCustomNavigation:member'
      - '@fluentui/react-internal!IPanelStyleProps#headerClassName:member'
      - '@fluentui/react-internal!IPanelStyleProps#isAnimating:member'
      - '@fluentui/react-internal!IPanelStyleProps#isFooterAtBottom:member'
      - '@fluentui/react-internal!IPanelStyleProps#isFooterSticky:member'
      - '@fluentui/react-internal!IPanelStyleProps#isHiddenOnDismiss:member'
      - '@fluentui/react-internal!IPanelStyleProps#isOnRightSide:member'
      - '@fluentui/react-internal!IPanelStyleProps#isOpen:member'
      - '@fluentui/react-internal!IPanelStyleProps#theme:member'
      - '@fluentui/react-internal!IPanelStyleProps#type:member'
  - uid: '@fluentui/react-internal!IPanelStyleProps#className:member'
    summary: Accept custom classNames
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IPanelStyleProps#focusTrapZoneClassName:member'
    summary: Classname for FocusTrapZone element
    name: focusTrapZoneClassName
    fullName: focusTrapZoneClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'focusTrapZoneClassName?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IPanelStyleProps#hasCloseButton:member'
    summary: Panel has close button
    name: hasCloseButton
    fullName: hasCloseButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasCloseButton?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IPanelStyleProps#hasCustomNavigation:member'
    summary: >-
      Determines where the header is rendered based on whether the user has passed in a custom onRenderNavigation or
      onRenderNavigationContent render callback
    name: hasCustomNavigation
    fullName: hasCustomNavigation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasCustomNavigation?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IPanelStyleProps#headerClassName:member'
    summary: Optional parameter to provider the class name for header text
    name: headerClassName
    fullName: headerClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headerClassName?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IPanelStyleProps#isAnimating:member'
    summary: Is animation currently running
    name: isAnimating
    fullName: isAnimating
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isAnimating?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IPanelStyleProps#isFooterAtBottom:member'
    summary: Determines if content should stretch to fill available space putting footer at the bottom of the page
    name: isFooterAtBottom
    fullName: isFooterAtBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isFooterAtBottom?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IPanelStyleProps#isFooterSticky:member'
    summary: Based on state value setting footer to sticky or not
    name: isFooterSticky
    fullName: isFooterSticky
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isFooterSticky?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IPanelStyleProps#isHiddenOnDismiss:member'
    summary: Is panel hidden on dismiss
    name: isHiddenOnDismiss
    fullName: isHiddenOnDismiss
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isHiddenOnDismiss?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IPanelStyleProps#isOnRightSide:member'
    summary: Is panel on right side
    name: isOnRightSide
    fullName: isOnRightSide
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isOnRightSide?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IPanelStyleProps#isOpen:member'
    summary: Is Panel open
    name: isOpen
    fullName: isOpen
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isOpen?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IPanelStyleProps#theme:member'
    summary: Theme provided by High-Order Component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
  - uid: '@fluentui/react-internal!IPanelStyleProps#type:member'
    summary: Type of the panel.
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type?: PanelType;'
      return:
        type:
          - PanelType
