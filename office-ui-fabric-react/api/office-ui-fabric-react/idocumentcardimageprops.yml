### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IDocumentCardImageProps:interface'
    name: IDocumentCardImageProps
    fullName: IDocumentCardImageProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'IBaseProps<{}> '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IDocumentCardImageProps#className:member'
      - 'office-ui-fabric-react!IDocumentCardImageProps#componentRef:member'
      - 'office-ui-fabric-react!IDocumentCardImageProps#height:member'
      - 'office-ui-fabric-react!IDocumentCardImageProps#iconProps:member'
      - 'office-ui-fabric-react!IDocumentCardImageProps#imageFit:member'
      - 'office-ui-fabric-react!IDocumentCardImageProps#imageSrc:member'
      - 'office-ui-fabric-react!IDocumentCardImageProps#styles:member'
      - 'office-ui-fabric-react!IDocumentCardImageProps#theme:member'
      - 'office-ui-fabric-react!IDocumentCardImageProps#width:member'
  - uid: 'office-ui-fabric-react!IDocumentCardImageProps#className:member'
    summary: Optional override class name
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IDocumentCardImageProps#componentRef:member'
    summary: Gets the component ref.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IDocumentCardImage>;'
      return:
        type:
          - IRefObject<IDocumentCardImage>
  - uid: 'office-ui-fabric-react!IDocumentCardImageProps#height:member'
    summary: 'If provided, forces the preview image to be this height.'
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IDocumentCardImageProps#iconProps:member'
    summary: The props for the icon associated with this document type.
    name: iconProps
    fullName: iconProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'iconProps?: IIconProps;'
      return:
        type:
          - 'office-ui-fabric-react!IIconProps:interface'
  - uid: 'office-ui-fabric-react!IDocumentCardImageProps#imageFit:member'
    summary: >-
      Used to determine how to size the image to fit the dimensions of the component. If both dimensions are provided,
      then the image is fit using ImageFit.scale, otherwise ImageFit.none is used.
    name: imageFit
    fullName: imageFit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'imageFit?: ImageFit;'
      return:
        type:
          - ImageFit
  - uid: 'office-ui-fabric-react!IDocumentCardImageProps#imageSrc:member'
    summary: Path to the preview image.
    name: imageSrc
    fullName: imageSrc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'imageSrc?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IDocumentCardImageProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IDocumentCardImageStyleProps, IDocumentCardImageStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IDocumentCardImageStyleProps, IDocumentCardImageStyles>'
  - uid: 'office-ui-fabric-react!IDocumentCardImageProps#theme:member'
    summary: Theme provided by HOC.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@uifabric/styling!ITheme:interface'
  - uid: 'office-ui-fabric-react!IDocumentCardImageProps#width:member'
    summary: 'If provided, forces the preview image to be this width.'
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width?: number;'
      return:
        type:
          - number
