### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!ISuggestionsHeaderFooterItemProps:interface'
    name: ISuggestionsHeaderFooterItemProps
    fullName: ISuggestionsHeaderFooterItemProps
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#className:member'
      - '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#componentRef:member'
      - '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#id:member'
      - '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#isSelected:member'
      - '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#onExecute:member'
      - '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#renderItem:member'
  - uid: '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#className:member'
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className: string | undefined;'
      return:
        type:
          - string | undefined
  - uid: '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#componentRef:member'
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<{}>;'
      return:
        type:
          - 'IRefObject<{}>'
  - uid: '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#id:member'
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#isSelected:member'
    name: isSelected
    fullName: isSelected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSelected: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#onExecute:member'
    name: onExecute
    fullName: onExecute
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onExecute?: () => void;'
      return:
        type:
          - () => void
  - uid: '@fluentui/react-next!ISuggestionsHeaderFooterItemProps#renderItem:member'
    name: renderItem
    fullName: renderItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'renderItem: () => JSX.Element;'
      return:
        type:
          - () => JSX.Element
