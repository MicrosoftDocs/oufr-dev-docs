### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!IRatingProps:interface'
    summary: Rating component props.
    name: IRatingProps
    fullName: IRatingProps
    langs:
      - typeScript
    type: interface
    extends:
      - React.HTMLAttributes<HTMLDivElement>
      - 'React.RefAttributes<HTMLDivElement> '
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!IRatingProps#allowZeroStars:member'
      - '@fluentui/react-next!IRatingProps#ariaLabelFormat:member'
      - '@fluentui/react-next!IRatingProps#componentRef:member'
      - '@fluentui/react-next!IRatingProps#defaultRating:member'
      - '@fluentui/react-next!IRatingProps#disabled:member'
      - '@fluentui/react-next!IRatingProps#getAriaLabel:member'
      - '@fluentui/react-next!IRatingProps#icon:member'
      - '@fluentui/react-next!IRatingProps#max:member'
      - '@fluentui/react-next!IRatingProps#min:member'
      - '@fluentui/react-next!IRatingProps#onChange:member'
      - '@fluentui/react-next!IRatingProps#rating:member'
      - '@fluentui/react-next!IRatingProps#readOnly:member'
      - '@fluentui/react-next!IRatingProps#size:member'
      - '@fluentui/react-next!IRatingProps#styles:member'
      - '@fluentui/react-next!IRatingProps#theme:member'
      - '@fluentui/react-next!IRatingProps#unselectedIcon:member'
  - uid: '@fluentui/react-next!IRatingProps#allowZeroStars:member'
    summary: >-
      Allow the initial rating value (or updated values passed in through `rating`<!-- -->) to be 0. Note that a value
      of 0 still won't be selectable by mouse or keyboard.
    name: allowZeroStars
    fullName: allowZeroStars
    langs:
      - typeScript
    type: property
    syntax:
      content: 'allowZeroStars?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IRatingProps#ariaLabelFormat:member'
    summary: >-
      Optional label format for each individual rating star (not the rating control as a whole) that will be read by
      screen readers. Placeholder `{0}` is the current rating and placeholder `{1}` is the max: for example, `"Select
      {0} of {1} stars"`<!-- -->.


      (To set the label for the control as a whole, use `getAriaLabel` or `aria-label`<!-- -->.)
    name: ariaLabelFormat
    fullName: ariaLabelFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabelFormat?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IRatingProps#componentRef:member'
    summary: >-
      Optional callback to access the IRating interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IRating>;'
      return:
        type:
          - IRefObject<IRating>
  - uid: '@fluentui/react-next!IRatingProps#defaultRating:member'
    summary: >-
      Default rating. Must be a number between `min` and `max`<!-- -->. Only provide this if the Rating is an
      uncontrolled component; otherwise, use the `rating` property.
    name: defaultRating
    fullName: defaultRating
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultRating?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!IRatingProps#disabled:member'
    summary: Whether the control should be disabled.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IRatingProps#getAriaLabel:member'
    name: getAriaLabel
    fullName: getAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'getAriaLabel?: (rating: number, max: number) => string;'
      return:
        type:
          - '(rating: number, max: number) => string'
  - uid: '@fluentui/react-next!IRatingProps#icon:member'
    summary: Custom icon name for selected rating elements.
    name: icon
    fullName: icon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'icon?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!IRatingProps#max:member'
    summary: Maximum rating. Must be &gt;<!-- -->= `min`<!-- -->.
    name: max
    fullName: max
    langs:
      - typeScript
    type: property
    syntax:
      content: 'max?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!IRatingProps#min:member'
    summary: Minimum rating. Must be &gt;<!-- -->= 0.
    deprecated:
      content: Use `allowZeroStars` instead.
    name: min
    fullName: min
    langs:
      - typeScript
    type: property
    syntax:
      content: 'min?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!IRatingProps#onChange:member'
    summary: Callback for when the rating changes.
    name: onChange
    fullName: onChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChange?: (event: React.FormEvent<HTMLElement>, rating?: number) => void;'
      return:
        type:
          - '(event: React.FormEvent<HTMLElement>, rating?: number) => void'
  - uid: '@fluentui/react-next!IRatingProps#rating:member'
    summary: >-
      Current rating. Must be a number between `min` and `max`<!-- -->. Only provide this if the Rating is a controlled
      component where you are maintaining its current state; otherwise, use the `defaultRating` property.
    name: rating
    fullName: rating
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rating?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!IRatingProps#readOnly:member'
    summary: Optional flag to mark rating control as readOnly
    name: readOnly
    fullName: readOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readOnly?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!IRatingProps#size:member'
    summary: Size of rating
    name: size
    fullName: size
    langs:
      - typeScript
    type: property
    syntax:
      content: 'size?: RatingSize;'
      return:
        type:
          - RatingSize
  - uid: '@fluentui/react-next!IRatingProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IRatingStyleProps, IRatingStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IRatingStyleProps, IRatingStyles>'
  - uid: '@fluentui/react-next!IRatingProps#theme:member'
    summary: Theme (provided through customization.)
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - ITheme
  - uid: '@fluentui/react-next!IRatingProps#unselectedIcon:member'
    summary: Custom icon name for unselected rating elements.
    name: unselectedIcon
    fullName: unselectedIcon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'unselectedIcon?: string;'
      return:
        type:
          - string
