### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!PanelBase:class'
    name: PanelBase
    fullName: PanelBase
    langs:
      - typeScript
    type: class
    extends:
      - 'React.Component<IPanelProps, IPanelState> '
    implements:
      - 'IPanel '
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!PanelBase:constructor(1)'
      - '@fluentui/react-internal!PanelBase#close:member(1)'
      - '@fluentui/react-internal!PanelBase#componentDidMount:member(1)'
      - '@fluentui/react-internal!PanelBase#componentDidUpdate:member(1)'
      - '@fluentui/react-internal!PanelBase#componentWillUnmount:member(1)'
      - '@fluentui/react-internal!PanelBase.defaultProps:member'
      - '@fluentui/react-internal!PanelBase#dismiss:member'
      - '@fluentui/react-internal!PanelBase.getDerivedStateFromProps:member(1)'
      - '@fluentui/react-internal!PanelBase#isActive:member'
      - '@fluentui/react-internal!PanelBase#open:member(1)'
      - '@fluentui/react-internal!PanelBase#render:member(1)'
  - uid: '@fluentui/react-internal!PanelBase:constructor(1)'
    summary: Constructs a new instance of the `PanelBase` class
    name: (constructor)(props)
    fullName: (constructor)(props)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(props: IPanelProps);'
      parameters:
        - id: props
          description: ''
          type:
            - IPanelProps
  - uid: '@fluentui/react-internal!PanelBase#close:member(1)'
    name: close()
    fullName: close()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-internal!PanelBase#componentDidMount:member(1)'
    name: componentDidMount()
    fullName: componentDidMount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-internal!PanelBase#componentDidUpdate:member(1)'
    name: 'componentDidUpdate(previousProps, previousState)'
    fullName: 'componentDidUpdate(previousProps, previousState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidUpdate(previousProps: IPanelProps, previousState: IPanelState): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: previousProps
          description: ''
          type:
            - IPanelProps
        - id: previousState
          description: ''
          type:
            - IPanelState
  - uid: '@fluentui/react-internal!PanelBase#componentWillUnmount:member(1)'
    name: componentWillUnmount()
    fullName: componentWillUnmount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-internal!PanelBase.defaultProps:member'
    name: defaultProps
    fullName: defaultProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'static defaultProps: IPanelProps;'
      return:
        type:
          - IPanelProps
  - uid: '@fluentui/react-internal!PanelBase#dismiss:member'
    name: dismiss
    fullName: dismiss
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dismiss: (ev?: KeyboardEvent | React.SyntheticEvent<HTMLElement, Event> | undefined) => void;'
      return:
        type:
          - '(ev?: KeyboardEvent | React.SyntheticEvent<HTMLElement, Event> | undefined) => void'
  - uid: '@fluentui/react-internal!PanelBase.getDerivedStateFromProps:member(1)'
    name: 'getDerivedStateFromProps(nextProps, prevState)'
    fullName: 'getDerivedStateFromProps(nextProps, prevState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static getDerivedStateFromProps(nextProps: Readonly<IPanelProps>, prevState: Readonly<IPanelState>):
        Partial<IPanelState> | null;
      return:
        type:
          - Partial<IPanelState> | null
        description: ''
      parameters:
        - id: nextProps
          description: ''
          type:
            - Readonly<IPanelProps>
        - id: prevState
          description: ''
          type:
            - Readonly<IPanelState>
  - uid: '@fluentui/react-internal!PanelBase#isActive:member'
    summary: isActive is true when panel is open or opening.
    name: isActive
    fullName: isActive
    langs:
      - typeScript
    type: property
    syntax:
      content: 'get isActive(): boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!PanelBase#open:member(1)'
    name: open()
    fullName: open()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'open(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-internal!PanelBase#render:member(1)'
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): JSX.Element | null;'
      return:
        type:
          - JSX.Element | null
        description: ''
