### YamlMime:TSType
name: ThemeProviderProps
uid: '@fluentui/react-theme-provider!ThemeProviderProps:interface'
package: '@fluentui/react-theme-provider!'
fullName: ThemeProviderProps
summary: Props for the ThemeProvider component.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: applyTo
    uid: '@fluentui/react-theme-provider!ThemeProviderProps#applyTo:member'
    package: '@fluentui/react-theme-provider!'
    fullName: applyTo
    summary: >-
      Defines where body-related theme is applied to. Setting to 'element' will
      apply body styles to the root element of ThemeProvider. Setting to 'body'
      will apply body styles to document body. Setting to 'none' will not apply
      body styles to either element or body.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'applyTo?: ''element'' | ''body'' | ''none'';'
      return:
        type: '''element'' | ''body'' | ''none'''
  - name: as
    uid: '@fluentui/react-theme-provider!ThemeProviderProps#as:member'
    package: '@fluentui/react-theme-provider!'
    fullName: as
    summary: >-
      A component that should be used as the root element of the ThemeProvider
      component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'as?: React.ElementType;'
      return:
        type: React.ElementType
  - name: ref
    uid: '@fluentui/react-theme-provider!ThemeProviderProps#ref:member'
    package: '@fluentui/react-theme-provider!'
    fullName: ref
    summary: Optional ref to the root element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ref?: React.Ref<HTMLElement>;'
      return:
        type: React.Ref&lt;HTMLElement&gt;
  - name: renderer
    uid: '@fluentui/react-theme-provider!ThemeProviderProps#renderer:member'
    package: '@fluentui/react-theme-provider!'
    fullName: renderer
    summary: >-
      Optional interface for registering dynamic styles. Defaults to using
      `merge-styles`<!-- -->. Use this to opt into a particular rendering
      implementation, such as `emotion`<!-- -->, `styled-components`<!-- -->, or
      `jss`<!-- -->. Note: performance will differ between all renders. Please
      measure your scenarios before using an alternative implementation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'renderer?: StyleRenderer;'
      return:
        type: '<xref uid="@fluentui/react-theme-provider!StyleRenderer:interface" />'
  - name: theme
    uid: '@fluentui/react-theme-provider!ThemeProviderProps#theme:member'
    package: '@fluentui/react-theme-provider!'
    fullName: theme
    summary: Defines the theme provided by the user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: PartialTheme | Theme;'
      return:
        type: PartialTheme | Theme
extends: 'React.HTMLAttributes&lt;HTMLDivElement&gt; '
