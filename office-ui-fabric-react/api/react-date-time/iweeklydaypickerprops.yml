### YamlMime:TSType
name: IWeeklyDayPickerProps
uid: '@fluentui/react-date-time!IWeeklyDayPickerProps:interface'
package: '@fluentui/react-date-time!'
fullName: IWeeklyDayPickerProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: animationDirection
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#animationDirection:member'
    package: '@fluentui/react-date-time!'
    fullName: animationDirection
    summary: >-
      The cardinal directions for animation to occur during transitions, either
      horizontal or veritcal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'animationDirection?: AnimationDirection;'
      return:
        type: '<xref uid="@fluentui/react-date-time!AnimationDirection:enum" />'
  - name: className
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#className:member'
    package: '@fluentui/react-date-time!'
    fullName: className
    summary: Additional CSS class(es) to apply to the WeeklyDayPicker.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#componentRef:member'
    package: '@fluentui/react-date-time!'
    fullName: componentRef
    summary: >-
      Optional callback to access the IWeeklyDayPicker interface. Use this
      instead of ref for accessing the public methods and properties of the
      component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IWeeklyDayPicker>;'
      return:
        type: IRefObject&lt;IWeeklyDayPicker&gt;
  - name: dateTimeFormatter
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#dateTimeFormatter:member'
    package: '@fluentui/react-date-time!'
    fullName: dateTimeFormatter
    summary: >-
      Apply additional formating to dates, for example localized date
      formatting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dateTimeFormatter?: IDateFormatting;'
      return:
        type: '<xref uid="@fluentui/date-time-utilities!IDateFormatting:interface" />'
  - name: firstDayOfWeek
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#firstDayOfWeek:member'
    package: '@fluentui/react-date-time!'
    fullName: firstDayOfWeek
    summary: The first day of the week for your locale.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'firstDayOfWeek?: DayOfWeek;'
      return:
        type: '<xref uid="@fluentui/date-time-utilities!DayOfWeek:enum" />'
  - name: initialDate
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#initialDate:member'
    package: '@fluentui/react-date-time!'
    fullName: initialDate
    summary: The initially selected date.  Today's date (`new Date()`<!-- -->)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'initialDate?: Date;'
      return:
        type: Date
  - name: maxDate
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#maxDate:member'
    package: '@fluentui/react-date-time!'
    fullName: maxDate
    summary: >-
      If set the Calendar will not allow navigation to or selection of a date
      later than this value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxDate?: Date;'
      return:
        type: Date
  - name: minDate
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#minDate:member'
    package: '@fluentui/react-date-time!'
    fullName: minDate
    summary: >-
      If set the Calendar will not allow navigation to or selection of a date
      earlier than this value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minDate?: Date;'
      return:
        type: Date
  - name: navigationIcons
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#navigationIcons:member'
    package: '@fluentui/react-date-time!'
    fullName: navigationIcons
    summary: Customize navigation icons.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'navigationIcons?: IWeeklyDayPickerNavigationIcons;'
      return:
        type: IWeeklyDayPickerNavigationIcons
  - name: onNavigateDate
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#onNavigateDate:member'
    package: '@fluentui/react-date-time!'
    fullName: onNavigateDate
    summary: Callback issued when a date in the calendar is navigated
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onNavigateDate?: (date: Date) => void;'
      return:
        type: '(date: Date) =&gt; void'
  - name: onSelectDate
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#onSelectDate:member'
    package: '@fluentui/react-date-time!'
    fullName: onSelectDate
    summary: Callback issued when a date is selected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSelectDate?: (date: Date) => void;'
      return:
        type: '(date: Date) =&gt; void'
  - name: restrictedDates
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#restrictedDates:member'
    package: '@fluentui/react-date-time!'
    fullName: restrictedDates
    summary: If set the Calendar will not allow selection of dates in this array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'restrictedDates?: Date[];'
      return:
        type: 'Date[]'
  - name: showFullMonth
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#showFullMonth:member'
    package: '@fluentui/react-date-time!'
    fullName: showFullMonth
    summary: 'Whether to show as a month picker. If false, shows only one week'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showFullMonth?: boolean;'
      return:
        type: boolean
  - name: strings
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#strings:member'
    package: '@fluentui/react-date-time!'
    fullName: strings
    summary: Localized strings to use in the WeeklyDayPicker
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strings: IWeeklyDayPickerStrings;'
      return:
        type: >-
          <xref
          uid="@fluentui/react-date-time!IWeeklyDayPickerStrings:interface" />
  - name: styles
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#styles:member'
    package: '@fluentui/react-date-time!'
    fullName: styles
    summary: Customized styles for the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IWeeklyDayPickerStyleProps,
        IWeeklyDayPickerStyles>;
      return:
        type: >-
          IStyleFunctionOrObject&lt;IWeeklyDayPickerStyleProps,
          IWeeklyDayPickerStyles&gt;
  - name: theme
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#theme:member'
    package: '@fluentui/react-date-time!'
    fullName: theme
    summary: Theme (provided through customization).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
  - name: today
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#today:member'
    package: '@fluentui/react-date-time!'
    fullName: today
    summary: >-
      Value of today. If unspecified, current time in client machine will be
      used.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'today?: Date;'
      return:
        type: Date
  - name: weeksToShow
    uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#weeksToShow:member'
    package: '@fluentui/react-date-time!'
    fullName: weeksToShow
    summary: >-
      How many weeks to show if showFullMonth=true. If not provided, will show
      enough weeks to display the current month, between 4 and 6 depending
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'weeksToShow?: number;'
      return:
        type: number
extends: IBaseProps&lt;IWeeklyDayPicker&gt;
