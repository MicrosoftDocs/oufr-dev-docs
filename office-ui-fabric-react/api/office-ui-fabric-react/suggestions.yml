### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!Suggestions:class'
    name: Suggestions
    fullName: Suggestions
    langs:
      - typeScript
    type: class
    extends:
      - 'React.Component<ISuggestionsProps<T>, ISuggestionsState> '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!Suggestions#_forceResolveButton:member'
      - 'office-ui-fabric-react!Suggestions#_searchForMoreButton:member'
      - 'office-ui-fabric-react!Suggestions#_selectedElement:member'
      - 'office-ui-fabric-react!Suggestions:constructor(1)'
      - 'office-ui-fabric-react!Suggestions#componentDidMount:member(1)'
      - 'office-ui-fabric-react!Suggestions#componentDidUpdate:member(1)'
      - 'office-ui-fabric-react!Suggestions#executeSelectedAction:member(1)'
      - 'office-ui-fabric-react!Suggestions#focusAboveSuggestions:member(1)'
      - 'office-ui-fabric-react!Suggestions#focusBelowSuggestions:member(1)'
      - 'office-ui-fabric-react!Suggestions#focusSearchForMoreButton:member(1)'
      - 'office-ui-fabric-react!Suggestions#hasSuggestedAction:member(1)'
      - 'office-ui-fabric-react!Suggestions#hasSuggestedActionSelected:member(1)'
      - 'office-ui-fabric-react!Suggestions#render:member(1)'
      - 'office-ui-fabric-react!Suggestions#scrollSelected:member(1)'
      - 'office-ui-fabric-react!Suggestions#tryHandleKeyDown:member'
  - uid: 'office-ui-fabric-react!Suggestions#_forceResolveButton:member'
    name: _forceResolveButton
    fullName: _forceResolveButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected _forceResolveButton: React.RefObject<IButton>;'
      return:
        type:
          - React.RefObject<IButton>
  - uid: 'office-ui-fabric-react!Suggestions#_searchForMoreButton:member'
    name: _searchForMoreButton
    fullName: _searchForMoreButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected _searchForMoreButton: React.RefObject<IButton>;'
      return:
        type:
          - React.RefObject<IButton>
  - uid: 'office-ui-fabric-react!Suggestions#_selectedElement:member'
    name: _selectedElement
    fullName: _selectedElement
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected _selectedElement: React.RefObject<HTMLDivElement>;'
      return:
        type:
          - React.RefObject<HTMLDivElement>
  - uid: 'office-ui-fabric-react!Suggestions:constructor(1)'
    summary: Constructs a new instance of the `Suggestions` class
    name: (constructor)(suggestionsProps)
    fullName: (constructor)(suggestionsProps)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(suggestionsProps: ISuggestionsProps<T>);'
      parameters:
        - id: suggestionsProps
          description: ''
          type:
            - ISuggestionsProps<T>
  - uid: 'office-ui-fabric-react!Suggestions#componentDidMount:member(1)'
    name: componentDidMount()
    fullName: componentDidMount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!Suggestions#componentDidUpdate:member(1)'
    name: componentDidUpdate()
    fullName: componentDidUpdate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidUpdate(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!Suggestions#executeSelectedAction:member(1)'
    name: executeSelectedAction()
    fullName: executeSelectedAction()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'executeSelectedAction(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!Suggestions#focusAboveSuggestions:member(1)'
    name: focusAboveSuggestions()
    fullName: focusAboveSuggestions()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focusAboveSuggestions(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!Suggestions#focusBelowSuggestions:member(1)'
    name: focusBelowSuggestions()
    fullName: focusBelowSuggestions()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focusBelowSuggestions(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!Suggestions#focusSearchForMoreButton:member(1)'
    name: focusSearchForMoreButton()
    fullName: focusSearchForMoreButton()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focusSearchForMoreButton(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!Suggestions#hasSuggestedAction:member(1)'
    name: hasSuggestedAction()
    fullName: hasSuggestedAction()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'hasSuggestedAction(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: 'office-ui-fabric-react!Suggestions#hasSuggestedActionSelected:member(1)'
    name: hasSuggestedActionSelected()
    fullName: hasSuggestedActionSelected()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'hasSuggestedActionSelected(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: 'office-ui-fabric-react!Suggestions#render:member(1)'
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
  - uid: 'office-ui-fabric-react!Suggestions#scrollSelected:member(1)'
    name: scrollSelected()
    fullName: scrollSelected()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'scrollSelected(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!Suggestions#tryHandleKeyDown:member'
    summary: 'Returns true if the event was handled, false otherwise'
    name: tryHandleKeyDown
    fullName: tryHandleKeyDown
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tryHandleKeyDown: (keyCode: number, currentSuggestionIndex: number) => boolean;'
      return:
        type:
          - '(keyCode: number, currentSuggestionIndex: number) => boolean'
