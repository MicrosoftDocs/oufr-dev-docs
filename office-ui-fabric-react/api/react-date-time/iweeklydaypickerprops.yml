### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps:interface'
    name: IWeeklyDayPickerProps
    fullName: IWeeklyDayPickerProps
    langs:
      - typeScript
    type: interface
    extends:
      - IBaseProps<IWeeklyDayPicker>
      - 'Partial<ICalendarDayGridProps> '
    package: '@fluentui/react-date-time!'
    children:
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#animationDirection:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#className:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#componentRef:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#dateTimeFormatter:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#firstDayOfWeek:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#initialDate:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#maxDate:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#minDate:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#navigationIcons:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#onNavigateDate:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#onSelectDate:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#restrictedDates:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#showFullMonth:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#strings:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#styles:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#theme:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#today:member'
      - '@fluentui/react-date-time!IWeeklyDayPickerProps#weeksToShow:member'
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#animationDirection:member'
    summary: 'The cardinal directions for animation to occur during transitions, either horizontal or veritcal'
    name: animationDirection
    fullName: animationDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animationDirection?: AnimationDirection;'
      return:
        type:
          - '@fluentui/react-date-time!AnimationDirection:enum'
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#className:member'
    summary: Additional CSS class(es) to apply to the WeeklyDayPicker.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#componentRef:member'
    summary: >-
      Optional callback to access the IWeeklyDayPicker interface. Use this instead of ref for accessing the public
      methods and properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IWeeklyDayPicker>;'
      return:
        type:
          - IRefObject<IWeeklyDayPicker>
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#dateTimeFormatter:member'
    summary: 'Apply additional formating to dates, for example localized date formatting.'
    name: dateTimeFormatter
    fullName: dateTimeFormatter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dateTimeFormatter?: IDateFormatting;'
      return:
        type:
          - '@fluentui/date-time-utilities!IDateFormatting:interface'
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#firstDayOfWeek:member'
    summary: The first day of the week for your locale.
    name: firstDayOfWeek
    fullName: firstDayOfWeek
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstDayOfWeek?: DayOfWeek;'
      return:
        type:
          - '@fluentui/date-time-utilities!DayOfWeek:enum'
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#initialDate:member'
    summary: 'The initially selected date. If not provided, defaults to today''s date'
    name: initialDate
    fullName: initialDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'initialDate?: Date;'
      return:
        type:
          - Date
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#maxDate:member'
    summary: If set the Calendar will not allow navigation to or selection of a date later than this value.
    name: maxDate
    fullName: maxDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxDate?: Date;'
      return:
        type:
          - Date
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#minDate:member'
    summary: If set the Calendar will not allow navigation to or selection of a date earlier than this value.
    name: minDate
    fullName: minDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minDate?: Date;'
      return:
        type:
          - Date
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#navigationIcons:member'
    summary: Customize navigation icons.
    name: navigationIcons
    fullName: navigationIcons
    langs:
      - typeScript
    type: property
    syntax:
      content: 'navigationIcons?: IWeeklyDayPickerNavigationIcons;'
      return:
        type:
          - IWeeklyDayPickerNavigationIcons
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#onNavigateDate:member'
    summary: Callback issued when a date in the calendar is navigated
    name: onNavigateDate
    fullName: onNavigateDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onNavigateDate?: (date: Date) => void;'
      return:
        type:
          - '(date: Date) => void'
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#onSelectDate:member'
    summary: Callback issued when a date is selected
    name: onSelectDate
    fullName: onSelectDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onSelectDate?: (date: Date) => void;'
      return:
        type:
          - '(date: Date) => void'
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#restrictedDates:member'
    summary: If set the Calendar will not allow selection of dates in this array.
    name: restrictedDates
    fullName: restrictedDates
    langs:
      - typeScript
    type: property
    syntax:
      content: 'restrictedDates?: Date[];'
      return:
        type:
          - 'Date[]'
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#showFullMonth:member'
    summary: 'Whether to show as a month picker. If false, shows only one week'
    name: showFullMonth
    fullName: showFullMonth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showFullMonth?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#strings:member'
    summary: Localized strings to use in the WeeklyDayPicker
    name: strings
    fullName: strings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strings: IWeeklyDayPickerStrings;'
      return:
        type:
          - '@fluentui/react-date-time!IWeeklyDayPickerStrings:interface'
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#styles:member'
    summary: Customized styles for the component.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IWeeklyDayPickerStyleProps, IWeeklyDayPickerStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IWeeklyDayPickerStyleProps, IWeeklyDayPickerStyles>'
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#theme:member'
    summary: Theme (provided through customization).
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#today:member'
    summary: 'Value of today. If unspecified, current time in client machine will be used.'
    name: today
    fullName: today
    langs:
      - typeScript
    type: property
    syntax:
      content: 'today?: Date;'
      return:
        type:
          - Date
  - uid: '@fluentui/react-date-time!IWeeklyDayPickerProps#weeksToShow:member'
    summary: >-
      How many weeks to show if showFullMonth=true. If not provided, will show enough weeks to display the current
      month, between 4 and 6 depending
    name: weeksToShow
    fullName: weeksToShow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'weeksToShow?: number;'
      return:
        type:
          - number
