### YamlMime:TSType
name: IDetailsRowCheckProps
uid: '@fluentui/react!IDetailsRowCheckProps:interface'
package: '@fluentui/react!'
fullName: IDetailsRowCheckProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: anySelected
    uid: '@fluentui/react!IDetailsRowCheckProps#anySelected:member'
    package: '@fluentui/react!'
    fullName: anySelected
    summary: Is any selected - also true for isSelectionModal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'anySelected?: boolean;'
      return:
        type: boolean
  - name: canSelect
    uid: '@fluentui/react!IDetailsRowCheckProps#canSelect:member'
    package: '@fluentui/react!'
    fullName: canSelect
    summary: Can this checkbox be selectable
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'canSelect: boolean;'
      return:
        type: boolean
  - name: checkClassName
    uid: '@fluentui/react!IDetailsRowCheckProps#checkClassName:member'
    package: '@fluentui/react!'
    fullName: checkClassName
    summary: The classname to be passed down to Check component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checkClassName?: string;'
      return:
        type: string
  - name: className
    uid: '@fluentui/react!IDetailsRowCheckProps#className:member'
    package: '@fluentui/react!'
    fullName: className
    summary: Optional className to attach to the slider root element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: compact
    uid: '@fluentui/react!IDetailsRowCheckProps#compact:member'
    package: '@fluentui/react!'
    fullName: compact
    summary: Is this in compact mode?
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'compact?: boolean;'
      return:
        type: boolean
  - name: isHeader
    uid: '@fluentui/react!IDetailsRowCheckProps#isHeader:member'
    package: '@fluentui/react!'
    fullName: isHeader
    summary: Is the check part of the header in a DetailsList
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isHeader?: boolean;'
      return:
        type: boolean
  - name: isVisible
    uid: '@fluentui/react!IDetailsRowCheckProps#isVisible:member'
    package: '@fluentui/react!'
    fullName: isVisible
    summary: Whether or not this checkbox is visible
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isVisible?: boolean;'
      return:
        type: boolean
  - name: onRenderDetailsCheckbox
    uid: '@fluentui/react!IDetailsRowCheckProps#onRenderDetailsCheckbox:member'
    package: '@fluentui/react!'
    fullName: onRenderDetailsCheckbox
    summary: 'If provided, can be used to render a custom checkbox'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderDetailsCheckbox?: IRenderFunction<IDetailsCheckboxProps>;'
      return:
        type: IRenderFunction&lt;IDetailsCheckboxProps&gt;
  - name: selected
    uid: '@fluentui/react!IDetailsRowCheckProps#selected:member'
    package: '@fluentui/react!'
    fullName: selected
    summary: Whether or not this check is selected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selected?: boolean;'
      return:
        type: boolean
  - name: styles
    uid: '@fluentui/react!IDetailsRowCheckProps#styles:member'
    package: '@fluentui/react!'
    fullName: styles
    summary: Style override
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IDetailsRowCheckStyleProps,
        IDetailsRowCheckStyles>;
      return:
        type: >-
          IStyleFunctionOrObject&lt;IDetailsRowCheckStyleProps,
          IDetailsRowCheckStyles&gt;
  - name: theme
    uid: '@fluentui/react!IDetailsRowCheckProps#theme:member'
    package: '@fluentui/react!'
    fullName: theme
    summary: Theme provided by High-Order Component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
  - name: useFastIcons
    uid: '@fluentui/react!IDetailsRowCheckProps#useFastIcons:member'
    package: '@fluentui/react!'
    fullName: useFastIcons
    summary: >-
      Whether to use fast icon and check components. The icons can't be targeted
      by customization but are still customizable via class names.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useFastIcons?: boolean;'
      return:
        type: boolean
extends: 'React.HTMLAttributes&lt;HTMLElement&gt; '
