### YamlMime:TSType
name: IPivotProps
uid: '@fluentui/react-internal!IPivotProps:interface'
package: '@fluentui/react-internal!'
fullName: IPivotProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: className
    uid: '@fluentui/react-internal!IPivotProps#className:member'
    package: '@fluentui/react-internal!'
    fullName: className
    summary: Additional css class to apply to the Pivot
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: '@fluentui/react-internal!IPivotProps#componentRef:member'
    package: '@fluentui/react-internal!'
    fullName: componentRef
    summary: >-
      Optional callback to access the IPivot interface. Use this instead of ref
      for accessing the public methods and properties of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: React.RefObject<IPivot>;'
      return:
        type: React.RefObject&lt;IPivot&gt;
  - name: defaultSelectedKey
    uid: '@fluentui/react-internal!IPivotProps#defaultSelectedKey:member'
    package: '@fluentui/react-internal!'
    fullName: defaultSelectedKey
    summary: >-
      Default selected key for the pivot. Only provide this if the pivot is an
      uncontrolled component; otherwise, use the `selectedKey` property.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultSelectedKey?: string;'
      return:
        type: string
  - name: getTabId
    uid: '@fluentui/react-internal!IPivotProps#getTabId:member'
    package: '@fluentui/react-internal!'
    fullName: getTabId
    summary: >-
      Callback to customize how IDs are generated for each tab header. Useful if
      you're rendering content outside and need to connect aria-labelledby.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getTabId?: (itemKey: string, index: number) => string;'
      return:
        type: '(itemKey: string, index: number) =&gt; string'
  - name: headersOnly
    uid: '@fluentui/react-internal!IPivotProps#headersOnly:member'
    package: '@fluentui/react-internal!'
    fullName: headersOnly
    summary: >-
      Whether to skip rendering the tabpanel with the content of the selected
      tab. Use this prop if you plan to separately render the tab content and
      don't want to leave an empty tabpanel in the page that may confuse Screen
      Readers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'headersOnly?: boolean;'
      return:
        type: boolean
  - name: linkFormat
    uid: '@fluentui/react-internal!IPivotProps#linkFormat:member'
    package: '@fluentui/react-internal!'
    fullName: linkFormat
    summary: 'Link format (links, tabs)'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'linkFormat?: PivotLinkFormatType;'
      return:
        type: PivotLinkFormatType
  - name: linkSize
    uid: '@fluentui/react-internal!IPivotProps#linkSize:member'
    package: '@fluentui/react-internal!'
    fullName: linkSize
    summary: 'Link size (normal, large)'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'linkSize?: PivotLinkSizeType;'
      return:
        type: PivotLinkSizeType
  - name: onLinkClick
    uid: '@fluentui/react-internal!IPivotProps#onLinkClick:member'
    package: '@fluentui/react-internal!'
    fullName: onLinkClick
    summary: Callback for when the selected pivot item is changed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLinkClick?: (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) =>
        void;
      return:
        type: >-
          (item?: PivotItem, ev?: React.MouseEvent&lt;HTMLElement&gt;) =&gt;
          void
  - name: overflowBehavior
    uid: '@fluentui/react-internal!IPivotProps#overflowBehavior:member'
    package: '@fluentui/react-internal!'
    fullName: overflowBehavior
    summary: >-
      Overflow behavior when there is not enough room to display all of the
      links/tabs \* none: Pivot links will overflow the container and may not be
      visible \* menu: Display an overflow menu that contains the tabs that
      don't fit

       none
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'overflowBehavior?: ''none'' | ''menu'';'
      return:
        type: '''none'' | ''menu'''
  - name: selectedKey
    uid: '@fluentui/react-internal!IPivotProps#selectedKey:member'
    package: '@fluentui/react-internal!'
    fullName: selectedKey
    summary: >-
      Key of the selected pivot item. Updating this will override the Pivot's
      selected item state. Only provide this if the pivot is a controlled
      component where you are maintaining the current state; otherwise, use
      `defaultSelectedKey`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectedKey?: string | null;'
      return:
        type: string | null
  - name: styles
    uid: '@fluentui/react-internal!IPivotProps#styles:member'
    package: '@fluentui/react-internal!'
    fullName: styles
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IPivotStyleProps, IPivotStyles>;'
      return:
        type: 'IStyleFunctionOrObject&lt;IPivotStyleProps, IPivotStyles&gt;'
  - name: theme
    uid: '@fluentui/react-internal!IPivotProps#theme:member'
    package: '@fluentui/react-internal!'
    fullName: theme
    summary: Theme provided by High-Order Component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
extends: React.HTMLAttributes&lt;HTMLDivElement&gt;
