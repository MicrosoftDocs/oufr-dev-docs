### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-button!ButtonProps:interface'
    name: ButtonProps
    fullName: ButtonProps
    langs:
      - typeScript
    type: interface
    extends:
      - '@fluentui/react-compose!ComponentProps:interface'
      - 'React.HTMLAttributes<HTMLButtonElement> '
    package: '@fluentui/react-button!'
    children:
      - '@fluentui/react-button!ButtonProps#circular:member'
      - '@fluentui/react-button!ButtonProps#componentRef:member'
      - '@fluentui/react-button!ButtonProps#disabled:member'
      - '@fluentui/react-button!ButtonProps#fluid:member'
      - '@fluentui/react-button!ButtonProps#icon:member'
      - '@fluentui/react-button!ButtonProps#iconOnly:member'
      - '@fluentui/react-button!ButtonProps#iconPosition:member'
      - '@fluentui/react-button!ButtonProps#inverted:member'
      - '@fluentui/react-button!ButtonProps#loader:member'
      - '@fluentui/react-button!ButtonProps#loading:member'
      - '@fluentui/react-button!ButtonProps#primary:member'
      - '@fluentui/react-button!ButtonProps#secondary:member'
      - '@fluentui/react-button!ButtonProps#size:member'
      - '@fluentui/react-button!ButtonProps#tokens:member'
  - uid: '@fluentui/react-button!ButtonProps#circular:member'
    summary: A button can appear circular.
    name: circular
    fullName: circular
    langs:
      - typeScript
    type: property
    syntax:
      content: 'circular?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-button!ButtonProps#componentRef:member'
    summary: Access the imperative API of the Button.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: React.RefObject<ButtonRef>;'
      return:
        type:
          - React.RefObject<ButtonRef>
  - uid: '@fluentui/react-button!ButtonProps#disabled:member'
    summary: A button can show that it cannot be interacted with.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-button!ButtonProps#fluid:member'
    summary: A button can fill the width of its container.
    name: fluid
    fullName: fluid
    langs:
      - typeScript
    type: property
    syntax:
      content: 'fluid?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-button!ButtonProps#icon:member'
    summary: 'Shorthand icon. A shorthand prop can be a literal, object, JSX, or function which takes render options.'
    name: icon
    fullName: icon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'icon?: SlotProp<React.HTMLAttributes<HTMLSpanElement>>;'
      return:
        type:
          - SlotProp<React.HTMLAttributes<HTMLSpanElement>>
  - uid: '@fluentui/react-button!ButtonProps#iconOnly:member'
    summary: A button can contain only an icon.
    name: iconOnly
    fullName: iconOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'iconOnly?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-button!ButtonProps#iconPosition:member'
    summary: An icon button can format its icon to appear before or after its content.
    name: iconPosition
    fullName: iconPosition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'iconPosition?: ''before'' | ''after'';'
      return:
        type:
          - '''before'' | ''after'''
  - uid: '@fluentui/react-button!ButtonProps#inverted:member'
    summary: A button that inherits its background and has a subtle appearance.
    name: inverted
    fullName: inverted
    langs:
      - typeScript
    type: property
    syntax:
      content: 'inverted?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-button!ButtonProps#loader:member'
    summary: Shorthand loader content within the button.
    name: loader
    fullName: loader
    langs:
      - typeScript
    type: property
    syntax:
      content: 'loader?: SlotProp<React.HTMLAttributes<HTMLSpanElement>>;'
      return:
        type:
          - SlotProp<React.HTMLAttributes<HTMLSpanElement>>
  - uid: '@fluentui/react-button!ButtonProps#loading:member'
    summary: A button can show a loading indicator.
    name: loading
    fullName: loading
    langs:
      - typeScript
    type: property
    syntax:
      content: 'loading?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-button!ButtonProps#primary:member'
    summary: A button can emphasize that it represents the primary action.
    name: primary
    fullName: primary
    langs:
      - typeScript
    type: property
    syntax:
      content: 'primary?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-button!ButtonProps#secondary:member'
    summary: A button can emphasize that it represents an alternative action.
    name: secondary
    fullName: secondary
    langs:
      - typeScript
    type: property
    syntax:
      content: 'secondary?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-button!ButtonProps#size:member'
    summary: A button can be sized.
    name: size
    fullName: size
    langs:
      - typeScript
    type: property
    syntax:
      content: 'size?: SizeValue;'
      return:
        type:
          - SizeValue
  - uid: '@fluentui/react-button!ButtonProps#tokens:member'
    summary: A button can be formatted to show only text in order to indicate a less-pronounced action.
    name: tokens
    fullName: tokens
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tokens?: RecursivePartial<ButtonTokens>;'
      return:
        type:
          - RecursivePartial<ButtonTokens>
