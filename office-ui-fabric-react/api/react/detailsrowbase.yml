### YamlMime:TSType
name: DetailsRowBase
uid: '@fluentui/react!DetailsRowBase:class'
package: '@fluentui/react!'
fullName: DetailsRowBase
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: (constructor)(props)
    uid: '@fluentui/react!DetailsRowBase:constructor(1)'
    package: '@fluentui/react!'
    fullName: (constructor)(props)
    summary: Constructs a new instance of the `DetailsRowBase` class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constructor(props: IDetailsRowBaseProps);'
      parameters:
        - id: props
          description: ''
          type: IDetailsRowBaseProps
methods:
  - name: _onRenderCheck(props)
    uid: '@fluentui/react!DetailsRowBase#_onRenderCheck:member(1)'
    package: '@fluentui/react!'
    fullName: _onRenderCheck(props)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected _onRenderCheck(props: IDetailsRowCheckProps): JSX.Element;'
      parameters:
        - id: props
          description: ''
          type: IDetailsRowCheckProps
      return:
        type: JSX.Element
        description: ''
  - name: componentDidMount()
    uid: '@fluentui/react!DetailsRowBase#componentDidMount:member(1)'
    package: '@fluentui/react!'
    fullName: componentDidMount()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type: void
        description: ''
  - name: componentDidUpdate(previousProps)
    uid: '@fluentui/react!DetailsRowBase#componentDidUpdate:member(1)'
    package: '@fluentui/react!'
    fullName: componentDidUpdate(previousProps)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentDidUpdate(previousProps: IDetailsRowBaseProps): void;'
      parameters:
        - id: previousProps
          description: ''
          type: IDetailsRowBaseProps
      return:
        type: void
        description: ''
  - name: componentWillUnmount()
    uid: '@fluentui/react!DetailsRowBase#componentWillUnmount:member(1)'
    package: '@fluentui/react!'
    fullName: componentWillUnmount()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type: void
        description: ''
  - name: focus(forceIntoFirstElement)
    uid: '@fluentui/react!DetailsRowBase#focus:member(1)'
    package: '@fluentui/react!'
    fullName: focus(forceIntoFirstElement)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'focus(forceIntoFirstElement?: boolean): boolean;'
      parameters:
        - id: forceIntoFirstElement
          description: ''
          type: boolean
      return:
        type: boolean
        description: ''
  - name: 'getDerivedStateFromProps(nextProps, previousState)'
    uid: '@fluentui/react!DetailsRowBase.getDerivedStateFromProps:member(1)'
    package: '@fluentui/react!'
    fullName: 'getDerivedStateFromProps(nextProps, previousState)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static getDerivedStateFromProps(nextProps: IDetailsRowBaseProps,
        previousState: IDetailsRowState): IDetailsRowState;
      parameters:
        - id: nextProps
          description: ''
          type: IDetailsRowBaseProps
        - id: previousState
          description: ''
          type: IDetailsRowState
      return:
        type: IDetailsRowState
        description: ''
  - name: 'measureCell(index, onMeasureDone)'
    uid: '@fluentui/react!DetailsRowBase#measureCell:member(1)'
    package: '@fluentui/react!'
    fullName: 'measureCell(index, onMeasureDone)'
    summary: >-
      measure cell at index. and call the call back with the measured cell width
      when finish measure
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        measureCell(index: number, onMeasureDone: (width: number) => void):
        void;
      parameters:
        - id: index
          description: The cell index
          type: number
        - id: onMeasureDone
          description: The call back function when finish measure
          type: '(width: number) =&gt; void'
      return:
        type: void
        description: ''
  - name: render()
    uid: '@fluentui/react!DetailsRowBase#render:member(1)'
    package: '@fluentui/react!'
    fullName: render()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type: JSX.Element
        description: ''
  - name: 'shouldComponentUpdate(nextProps, nextState)'
    uid: '@fluentui/react!DetailsRowBase#shouldComponentUpdate:member(1)'
    package: '@fluentui/react!'
    fullName: 'shouldComponentUpdate(nextProps, nextState)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        shouldComponentUpdate(nextProps: IDetailsRowBaseProps, nextState:
        IDetailsRowState): boolean;
      parameters:
        - id: nextProps
          description: ''
          type: IDetailsRowBaseProps
        - id: nextState
          description: ''
          type: IDetailsRowState
      return:
        type: boolean
        description: ''
extends: 'React.Component&lt;IDetailsRowBaseProps, IDetailsRowState&gt; '
