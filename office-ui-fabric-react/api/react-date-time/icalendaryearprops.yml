### YamlMime:TSType
name: ICalendarYearProps
uid: '@fluentui/react-date-time!ICalendarYearProps:interface'
package: '@fluentui/react-date-time!'
fullName: ICalendarYearProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: animationDirection
    uid: '@fluentui/react-date-time!ICalendarYearProps#animationDirection:member'
    package: '@fluentui/react-date-time!'
    fullName: animationDirection
    summary: >-
      The cardinal directions for animation to occur during transitions, either
      horizontal or veritcal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'animationDirection?: AnimationDirection;'
      return:
        type: '<xref uid="@fluentui/react-date-time!AnimationDirection:enum" />'
  - name: className
    uid: '@fluentui/react-date-time!ICalendarYearProps#className:member'
    package: '@fluentui/react-date-time!'
    fullName: className
    summary: Accept custom classNames
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: '@fluentui/react-date-time!ICalendarYearProps#componentRef:member'
    package: '@fluentui/react-date-time!'
    fullName: componentRef
    summary: >-
      Optional callback to access the ICalendarYear interface. Use this instead
      of ref for accessing the public methods and properties of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<ICalendarYear>;'
      return:
        type: IRefObject&lt;ICalendarYear&gt;
  - name: highlightCurrentYear
    uid: '@fluentui/react-date-time!ICalendarYearProps#highlightCurrentYear:member'
    package: '@fluentui/react-date-time!'
    fullName: highlightCurrentYear
    summary: Whether the year picker should highlight the current year
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'highlightCurrentYear?: boolean;'
      return:
        type: boolean
  - name: highlightSelectedYear
    uid: '@fluentui/react-date-time!ICalendarYearProps#highlightSelectedYear:member'
    package: '@fluentui/react-date-time!'
    fullName: highlightSelectedYear
    summary: Whether the year picker should highlight the selected year
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'highlightSelectedYear?: boolean;'
      return:
        type: boolean
  - name: maxYear
    uid: '@fluentui/react-date-time!ICalendarYearProps#maxYear:member'
    package: '@fluentui/react-date-time!'
    fullName: maxYear
    summary: >-
      If set the Calendar will not allow navigation to or selection of a year
      later than this value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxYear?: number;'
      return:
        type: number
  - name: minYear
    uid: '@fluentui/react-date-time!ICalendarYearProps#minYear:member'
    package: '@fluentui/react-date-time!'
    fullName: minYear
    summary: >-
      If set the Calendar will not allow navigation to or selection of a year
      earlier than this value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minYear?: number;'
      return:
        type: number
  - name: navigatedYear
    uid: '@fluentui/react-date-time!ICalendarYearProps#navigatedYear:member'
    package: '@fluentui/react-date-time!'
    fullName: navigatedYear
    summary: The currently navigated year
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'navigatedYear?: number;'
      return:
        type: number
  - name: navigationIcons
    uid: '@fluentui/react-date-time!ICalendarYearProps#navigationIcons:member'
    package: '@fluentui/react-date-time!'
    fullName: navigationIcons
    summary: Custom navigation icons.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'navigationIcons?: ICalendarNavigationIcons;'
      return:
        type: >-
          <xref
          uid="@fluentui/react-date-time!ICalendarNavigationIcons:interface" />
  - name: onHeaderSelect
    uid: '@fluentui/react-date-time!ICalendarYearProps#onHeaderSelect:member'
    package: '@fluentui/react-date-time!'
    fullName: onHeaderSelect
    summary: Callback action when the header is selected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onHeaderSelect?: (focus: boolean) => void;'
      return:
        type: '(focus: boolean) =&gt; void'
  - name: onRenderTitle
    uid: '@fluentui/react-date-time!ICalendarYearProps#onRenderTitle:member'
    package: '@fluentui/react-date-time!'
    fullName: onRenderTitle
    summary: Custom renderer for the title
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderTitle?: (props: ICalendarYearHeaderProps) => React.ReactNode;'
      return:
        type: '(props: ICalendarYearHeaderProps) =&gt; React.ReactNode'
  - name: onRenderYear
    uid: '@fluentui/react-date-time!ICalendarYearProps#onRenderYear:member'
    package: '@fluentui/react-date-time!'
    fullName: onRenderYear
    summary: Custom renderer for the year
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderYear?: (year: number) => React.ReactNode;'
      return:
        type: '(year: number) =&gt; React.ReactNode'
  - name: onSelectYear
    uid: '@fluentui/react-date-time!ICalendarYearProps#onSelectYear:member'
    package: '@fluentui/react-date-time!'
    fullName: onSelectYear
    summary: Callback action when a year is selected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSelectYear?: (year: number) => void;'
      return:
        type: '(year: number) =&gt; void'
  - name: selectedYear
    uid: '@fluentui/react-date-time!ICalendarYearProps#selectedYear:member'
    package: '@fluentui/react-date-time!'
    fullName: selectedYear
    summary: The currently selected year
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectedYear?: number;'
      return:
        type: number
  - name: strings
    uid: '@fluentui/react-date-time!ICalendarYearProps#strings:member'
    package: '@fluentui/react-date-time!'
    fullName: strings
    summary: Localized strings to use in the Calendar
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strings?: ICalendarYearStrings;'
      return:
        type: >-
          <xref uid="@fluentui/react-date-time!ICalendarYearStrings:interface"
          />
  - name: styles
    uid: '@fluentui/react-date-time!ICalendarYearProps#styles:member'
    package: '@fluentui/react-date-time!'
    fullName: styles
    summary: Customized styles for the calendar month component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<ICalendarYearStyleProps,
        ICalendarYearStyles>;
      return:
        type: >-
          IStyleFunctionOrObject&lt;ICalendarYearStyleProps,
          ICalendarYearStyles&gt;
  - name: theme
    uid: '@fluentui/react-date-time!ICalendarYearProps#theme:member'
    package: '@fluentui/react-date-time!'
    fullName: theme
    summary: Theme (provided through customization).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
extends: 'IBaseProps&lt;ICalendarYear&gt; '
