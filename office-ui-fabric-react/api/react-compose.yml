### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-compose!'
    name: '@fluentui/react-compose'
    fullName: '@fluentui/react-compose'
    langs:
      - typeScript
    type: package
    children:
      - '@fluentui/react-compose!ComponentWithAs:interface'
      - '@fluentui/react-compose!compose:function(1)'
  - uid: '@fluentui/react-compose!compose:function(1)'
    name: 'compose(input, inputOptions)'
    fullName: 'compose(input, inputOptions)'
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        declare function compose<ElementType extends React.ElementType, InputProps, InputStylesProps, ParentProps,
        ParentStylesProps>(input: Input<ElementType, InputProps>, inputOptions?: ComposeOptions<InputProps,
        InputStylesProps, ParentStylesProps>): ComponentWithAs<ElementType, InputProps & ParentProps>;
      return:
        type:
          - 'ComponentWithAs<ElementType, InputProps & ParentProps>'
        description: ''
      parameters:
        - id: input
          description: ''
          type:
            - 'Input<ElementType, InputProps>'
        - id: inputOptions
          description: ''
          type:
            - 'ComposeOptions<InputProps, InputStylesProps, ParentStylesProps>'
      typeParameters:
        - id: ElementType
          type:
            - React.ElementType
        - id: InputProps
        - id: InputStylesProps
        - id: ParentProps
        - id: ParentStylesProps
references:
  - uid: '@fluentui/react-compose!ComponentWithAs:interface'
    name: ComponentWithAs
