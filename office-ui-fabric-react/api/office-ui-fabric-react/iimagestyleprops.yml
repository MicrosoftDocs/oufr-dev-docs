### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IImageStyleProps:interface'
    name: IImageStyleProps
    fullName: IImageStyleProps
    langs:
      - typeScript
    type: interface
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IImageStyleProps#className:member'
      - 'office-ui-fabric-react!IImageStyleProps#height:member'
      - 'office-ui-fabric-react!IImageStyleProps#isCenter:member'
      - 'office-ui-fabric-react!IImageStyleProps#isCenterContain:member'
      - 'office-ui-fabric-react!IImageStyleProps#isCenterCover:member'
      - 'office-ui-fabric-react!IImageStyleProps#isContain:member'
      - 'office-ui-fabric-react!IImageStyleProps#isCover:member'
      - 'office-ui-fabric-react!IImageStyleProps#isError:member'
      - 'office-ui-fabric-react!IImageStyleProps#isLandscape:member'
      - 'office-ui-fabric-react!IImageStyleProps#isLoaded:member'
      - 'office-ui-fabric-react!IImageStyleProps#isNone:member'
      - 'office-ui-fabric-react!IImageStyleProps#isNotImageFit:member'
      - 'office-ui-fabric-react!IImageStyleProps#maximizeFrame:member'
      - 'office-ui-fabric-react!IImageStyleProps#shouldFadeIn:member'
      - 'office-ui-fabric-react!IImageStyleProps#shouldStartVisible:member'
      - 'office-ui-fabric-react!IImageStyleProps#theme:member'
      - 'office-ui-fabric-react!IImageStyleProps#width:member'
  - uid: 'office-ui-fabric-react!IImageStyleProps#className:member'
    summary: Accept custom classNames
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IImageStyleProps#height:member'
    summary: Image height value
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height?: number | string;'
      return:
        type:
          - number | string
  - uid: 'office-ui-fabric-react!IImageStyleProps#isCenter:member'
    summary: 'ImageFit booleans for center, cover, contain, centerContain, centerCover, none'
    name: isCenter
    fullName: isCenter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCenter?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#isCenterContain:member'
    name: isCenterContain
    fullName: isCenterContain
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCenterContain?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#isCenterCover:member'
    name: isCenterCover
    fullName: isCenterCover
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCenterCover?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#isContain:member'
    name: isContain
    fullName: isContain
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isContain?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#isCover:member'
    name: isCover
    fullName: isCover
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCover?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#isError:member'
    summary: if true image load is in error
    name: isError
    fullName: isError
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isError?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#isLandscape:member'
    summary: If true the image is coverStyle landscape instead of portrait
    name: isLandscape
    fullName: isLandscape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isLandscape?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#isLoaded:member'
    summary: 'If true, the image is loaded'
    name: isLoaded
    fullName: isLoaded
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isLoaded?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#isNone:member'
    name: isNone
    fullName: isNone
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isNone?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#isNotImageFit:member'
    summary: 'if true, imageFit is undefined'
    name: isNotImageFit
    fullName: isNotImageFit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isNotImageFit?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#maximizeFrame:member'
    summary: 'If true, the image frame will expand to fill its parent container.'
    name: maximizeFrame
    fullName: maximizeFrame
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maximizeFrame?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#shouldFadeIn:member'
    summary: 'If true, fades the image in when loaded.'
    name: shouldFadeIn
    fullName: shouldFadeIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shouldFadeIn?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#shouldStartVisible:member'
    summary: >-
      If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until it is
      successfully loaded. This disables shouldFadeIn.
    name: shouldStartVisible
    fullName: shouldStartVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shouldStartVisible?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IImageStyleProps#theme:member'
    summary: Accept theme prop.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
  - uid: 'office-ui-fabric-react!IImageStyleProps#width:member'
    summary: Image width value
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width?: number | string;'
      return:
        type:
          - number | string
