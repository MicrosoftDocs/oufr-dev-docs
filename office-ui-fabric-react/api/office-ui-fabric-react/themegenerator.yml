### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!ThemeGenerator:class'
    name: ThemeGenerator
    fullName: ThemeGenerator
    langs:
      - typeScript
    type: class
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!ThemeGenerator.getThemeAsCode:member(1)'
      - 'office-ui-fabric-react!ThemeGenerator.getThemeAsCodeWithCreateTheme:member(1)'
      - 'office-ui-fabric-react!ThemeGenerator.getThemeAsJson:member(1)'
      - 'office-ui-fabric-react!ThemeGenerator.getThemeAsSass:member(1)'
      - 'office-ui-fabric-react!ThemeGenerator.getThemeForPowerShell:member(1)'
      - 'office-ui-fabric-react!ThemeGenerator.insureSlots:member(1)'
      - 'office-ui-fabric-react!ThemeGenerator.setSlot:member(1)'
  - uid: 'office-ui-fabric-react!ThemeGenerator.getThemeAsCode:member(1)'
    name: getThemeAsCode(slotRules)
    fullName: getThemeAsCode(slotRules)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static getThemeAsCode(slotRules: IThemeRules): any;'
      return:
        type:
          - any
        description: ''
      parameters:
        - id: slotRules
          description: ''
          type:
            - 'office-ui-fabric-react!IThemeRules:interface'
  - uid: 'office-ui-fabric-react!ThemeGenerator.getThemeAsCodeWithCreateTheme:member(1)'
    summary: >-
      Gets code-formatted load theme blob, specifically for the new theme designer, aka.ms/themedesigner. Shouldn't use
      loadTheme like the old theme designer since it's deprecated. We want to use the theme object from createTheme and
      use the Customizations.applySettings API instead.
    name: getThemeAsCodeWithCreateTheme(slotRules)
    fullName: getThemeAsCodeWithCreateTheme(slotRules)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static getThemeAsCodeWithCreateTheme(slotRules: IThemeRules): any;'
      return:
        type:
          - any
        description: ''
      parameters:
        - id: slotRules
          description: ''
          type:
            - 'office-ui-fabric-react!IThemeRules:interface'
  - uid: 'office-ui-fabric-react!ThemeGenerator.getThemeAsJson:member(1)'
    name: getThemeAsJson(slotRules)
    fullName: getThemeAsJson(slotRules)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static getThemeAsJson(slotRules: IThemeRules): any;'
      return:
        type:
          - any
        description: ''
      parameters:
        - id: slotRules
          description: ''
          type:
            - 'office-ui-fabric-react!IThemeRules:interface'
  - uid: 'office-ui-fabric-react!ThemeGenerator.getThemeAsSass:member(1)'
    name: getThemeAsSass(slotRules)
    fullName: getThemeAsSass(slotRules)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static getThemeAsSass(slotRules: IThemeRules): any;'
      return:
        type:
          - any
        description: ''
      parameters:
        - id: slotRules
          description: ''
          type:
            - 'office-ui-fabric-react!IThemeRules:interface'
  - uid: 'office-ui-fabric-react!ThemeGenerator.getThemeForPowerShell:member(1)'
    name: getThemeForPowerShell(slotRules)
    fullName: getThemeForPowerShell(slotRules)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static getThemeForPowerShell(slotRules: IThemeRules): any;'
      return:
        type:
          - any
        description: ''
      parameters:
        - id: slotRules
          description: ''
          type:
            - 'office-ui-fabric-react!IThemeRules:interface'
  - uid: 'office-ui-fabric-react!ThemeGenerator.insureSlots:member(1)'
    name: 'insureSlots(slotRules, isInverted)'
    fullName: 'insureSlots(slotRules, isInverted)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static insureSlots(slotRules: IThemeRules, isInverted: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: slotRules
          description: ''
          type:
            - 'office-ui-fabric-react!IThemeRules:interface'
        - id: isInverted
          description: ''
          type:
            - boolean
  - uid: 'office-ui-fabric-react!ThemeGenerator.setSlot:member(1)'
    name: 'setSlot(rule, color, isInverted, isCustomization, overwriteCustomColor)'
    fullName: 'setSlot(rule, color, isInverted, isCustomization, overwriteCustomColor)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static setSlot(rule: IThemeSlotRule, color: string | IColor, isInverted?: boolean, isCustomization?: boolean,
        overwriteCustomColor?: boolean): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: rule
          description: ''
          type:
            - 'office-ui-fabric-react!IThemeSlotRule:interface'
        - id: color
          description: ''
          type:
            - string | IColor
        - id: isInverted
          description: ''
          type:
            - boolean
        - id: isCustomization
          description: ''
          type:
            - boolean
        - id: overwriteCustomColor
          description: ''
          type:
            - boolean
