### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!ICalloutContentStyleProps:interface'
    name: ICalloutContentStyleProps
    fullName: ICalloutContentStyleProps
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!ICalloutContentStyleProps#backgroundColor:member'
      - '@fluentui/react-internal!ICalloutContentStyleProps#beakWidth:member'
      - '@fluentui/react-internal!ICalloutContentStyleProps#calloutMaxWidth:member'
      - '@fluentui/react-internal!ICalloutContentStyleProps#calloutWidth:member'
      - '@fluentui/react-internal!ICalloutContentStyleProps#className:member'
      - '@fluentui/react-internal!ICalloutContentStyleProps#overflowYHidden:member'
      - '@fluentui/react-internal!ICalloutContentStyleProps#positions:member'
      - '@fluentui/react-internal!ICalloutContentStyleProps#theme:member'
  - uid: '@fluentui/react-internal!ICalloutContentStyleProps#backgroundColor:member'
    summary: Background color for the beak and callout.
    name: backgroundColor
    fullName: backgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundColor?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!ICalloutContentStyleProps#beakWidth:member'
    summary: Width of Callout beak
    name: beakWidth
    fullName: beakWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beakWidth?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-internal!ICalloutContentStyleProps#calloutMaxWidth:member'
    summary: Max width for callout including borders.
    name: calloutMaxWidth
    fullName: calloutMaxWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calloutMaxWidth?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-internal!ICalloutContentStyleProps#calloutWidth:member'
    summary: Width for callout including borders.
    name: calloutWidth
    fullName: calloutWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calloutWidth?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-internal!ICalloutContentStyleProps#className:member'
    summary: CSS class to apply to the callout.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!ICalloutContentStyleProps#overflowYHidden:member'
    summary: 'Whether or not to clip content of the callout, if it overflows vertically.'
    name: overflowYHidden
    fullName: overflowYHidden
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowYHidden?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!ICalloutContentStyleProps#positions:member'
    summary: Callout positioning data
    name: positions
    fullName: positions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'positions?: ICalloutPositionedInfo;'
      return:
        type:
          - ICalloutPositionedInfo
  - uid: '@fluentui/react-internal!ICalloutContentStyleProps#theme:member'
    summary: Theme to apply to the calloutContent.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
