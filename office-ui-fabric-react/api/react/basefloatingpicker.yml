### YamlMime:TSType
name: BaseFloatingPicker
uid: '@fluentui/react!BaseFloatingPicker:class'
package: '@fluentui/react!'
fullName: BaseFloatingPicker
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: (constructor)(basePickerProps)
    uid: '@fluentui/react!BaseFloatingPicker:constructor(1)'
    package: '@fluentui/react!'
    fullName: (constructor)(basePickerProps)
    summary: Constructs a new instance of the `BaseFloatingPicker` class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constructor(basePickerProps: P);'
      parameters:
        - id: basePickerProps
          description: ''
          type: P
properties:
  - name: completeSuggestion
    uid: '@fluentui/react!BaseFloatingPicker#completeSuggestion:member'
    package: '@fluentui/react!'
    fullName: completeSuggestion
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'completeSuggestion: () => void;'
      return:
        type: () =&gt; void
  - name: currentPromise
    uid: '@fluentui/react!BaseFloatingPicker#currentPromise:member'
    package: '@fluentui/react!'
    fullName: currentPromise
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected currentPromise: PromiseLike<T[]>;'
      return:
        type: 'PromiseLike&lt;T[]&gt;'
  - name: currentSelectedSuggestionIndex
    uid: '@fluentui/react!BaseFloatingPicker#currentSelectedSuggestionIndex:member'
    package: '@fluentui/react!'
    fullName: currentSelectedSuggestionIndex
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get currentSelectedSuggestionIndex(): number;'
      return:
        type: number
  - name: hidePicker
    uid: '@fluentui/react!BaseFloatingPicker#hidePicker:member'
    package: '@fluentui/react!'
    fullName: hidePicker
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hidePicker: () => void;'
      return:
        type: () =&gt; void
  - name: inputText
    uid: '@fluentui/react!BaseFloatingPicker#inputText:member'
    package: '@fluentui/react!'
    fullName: inputText
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get inputText(): string;'
      return:
        type: string
  - name: isComponentMounted
    uid: '@fluentui/react!BaseFloatingPicker#isComponentMounted:member'
    package: '@fluentui/react!'
    fullName: isComponentMounted
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected isComponentMounted: boolean;'
      return:
        type: boolean
  - name: isSuggestionsShown
    uid: '@fluentui/react!BaseFloatingPicker#isSuggestionsShown:member'
    package: '@fluentui/react!'
    fullName: isSuggestionsShown
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get isSuggestionsShown(): boolean;'
      return:
        type: boolean
  - name: onKeyDown
    uid: '@fluentui/react!BaseFloatingPicker#onKeyDown:member'
    package: '@fluentui/react!'
    fullName: onKeyDown
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onKeyDown: (ev: MouseEvent) => void;'
      return:
        type: '(ev: MouseEvent) =&gt; void'
  - name: onQueryStringChanged
    uid: '@fluentui/react!BaseFloatingPicker#onQueryStringChanged:member'
    package: '@fluentui/react!'
    fullName: onQueryStringChanged
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onQueryStringChanged: (queryString: string) => void;'
      return:
        type: '(queryString: string) =&gt; void'
  - name: onSuggestionClick
    uid: '@fluentui/react!BaseFloatingPicker#onSuggestionClick:member'
    package: '@fluentui/react!'
    fullName: onSuggestionClick
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected onSuggestionClick: (ev: React.MouseEvent<HTMLElement,
        MouseEvent>, item: T, index: number) => void;
      return:
        type: >-
          (ev: React.MouseEvent&lt;HTMLElement, MouseEvent&gt;, item: T, index:
          number) =&gt; void
  - name: onSuggestionRemove
    uid: '@fluentui/react!BaseFloatingPicker#onSuggestionRemove:member'
    package: '@fluentui/react!'
    fullName: onSuggestionRemove
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected onSuggestionRemove: (ev: React.MouseEvent<HTMLElement,
        MouseEvent>, item: T, index: number) => void;
      return:
        type: >-
          (ev: React.MouseEvent&lt;HTMLElement, MouseEvent&gt;, item: T, index:
          number) =&gt; void
  - name: root
    uid: '@fluentui/react!BaseFloatingPicker#root:member'
    package: '@fluentui/react!'
    fullName: root
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected root: React.RefObject<HTMLDivElement>;'
      return:
        type: React.RefObject&lt;HTMLDivElement&gt;
  - name: selection
    uid: '@fluentui/react!BaseFloatingPicker#selection:member'
    package: '@fluentui/react!'
    fullName: selection
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected selection: Selection;'
      return:
        type: '<xref uid="@fluentui/utilities!Selection:class" />'
  - name: showPicker
    uid: '@fluentui/react!BaseFloatingPicker#showPicker:member'
    package: '@fluentui/react!'
    fullName: showPicker
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showPicker: (updateValue?: boolean) => void;'
      return:
        type: '(updateValue?: boolean) =&gt; void'
  - name: suggestions
    uid: '@fluentui/react!BaseFloatingPicker#suggestions:member'
    package: '@fluentui/react!'
    fullName: suggestions
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get suggestions(): any[];'
      return:
        type: 'any[]'
  - name: suggestionsControl
    uid: '@fluentui/react!BaseFloatingPicker#suggestionsControl:member'
    package: '@fluentui/react!'
    fullName: suggestionsControl
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected suggestionsControl: React.RefObject<SuggestionsControl<T>>;'
      return:
        type: React.RefObject&lt;SuggestionsControl&lt;T&gt;&gt;
  - name: SuggestionsControlOfProperType
    uid: '@fluentui/react!BaseFloatingPicker#SuggestionsControlOfProperType:member'
    package: '@fluentui/react!'
    fullName: SuggestionsControlOfProperType
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected SuggestionsControlOfProperType: new (props:
        ISuggestionsControlProps<T>) => SuggestionsControl<T>;
      return:
        type: >-
          new (props: ISuggestionsControlProps&lt;T&gt;) =&gt;
          SuggestionsControl&lt;T&gt;
  - name: suggestionStore
    uid: '@fluentui/react!BaseFloatingPicker#suggestionStore:member'
    package: '@fluentui/react!'
    fullName: suggestionStore
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected suggestionStore: SuggestionsStore<T>;'
      return:
        type: SuggestionsStore&lt;T&gt;
methods:
  - name: componentDidMount()
    uid: '@fluentui/react!BaseFloatingPicker#componentDidMount:member(1)'
    package: '@fluentui/react!'
    fullName: componentDidMount()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type: void
        description: ''
  - name: componentDidUpdate()
    uid: '@fluentui/react!BaseFloatingPicker#componentDidUpdate:member(1)'
    package: '@fluentui/react!'
    fullName: componentDidUpdate()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentDidUpdate(): void;'
      return:
        type: void
        description: ''
  - name: componentWillUnmount()
    uid: '@fluentui/react!BaseFloatingPicker#componentWillUnmount:member(1)'
    package: '@fluentui/react!'
    fullName: componentWillUnmount()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type: void
        description: ''
  - name: forceResolveSuggestion()
    uid: '@fluentui/react!BaseFloatingPicker#forceResolveSuggestion:member(1)'
    package: '@fluentui/react!'
    fullName: forceResolveSuggestion()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'forceResolveSuggestion(): void;'
      return:
        type: void
        description: ''
  - name: onChange(item)
    uid: '@fluentui/react!BaseFloatingPicker#onChange:member(1)'
    package: '@fluentui/react!'
    fullName: onChange(item)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onChange(item: T): void;'
      parameters:
        - id: item
          description: ''
          type: T
      return:
        type: void
        description: ''
  - name: onSelectionChange()
    uid: '@fluentui/react!BaseFloatingPicker#onSelectionChange:member(1)'
    package: '@fluentui/react!'
    fullName: onSelectionChange()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onSelectionChange(): void;'
      return:
        type: void
        description: ''
  - name: render()
    uid: '@fluentui/react!BaseFloatingPicker#render:member(1)'
    package: '@fluentui/react!'
    fullName: render()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type: JSX.Element
        description: ''
  - name: renderSuggestions()
    uid: '@fluentui/react!BaseFloatingPicker#renderSuggestions:member(1)'
    package: '@fluentui/react!'
    fullName: renderSuggestions()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected renderSuggestions(): JSX.Element | null;'
      return:
        type: JSX.Element | null
        description: ''
  - name: 'updateSuggestions(suggestions, forceUpdate)'
    uid: '@fluentui/react!BaseFloatingPicker#updateSuggestions:member(1)'
    package: '@fluentui/react!'
    fullName: 'updateSuggestions(suggestions, forceUpdate)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'updateSuggestions(suggestions: T[], forceUpdate?: boolean): void;'
      parameters:
        - id: suggestions
          description: ''
          type: 'T[]'
        - id: forceUpdate
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: updateSuggestionsList(suggestions)
    uid: '@fluentui/react!BaseFloatingPicker#updateSuggestionsList:member(1)'
    package: '@fluentui/react!'
    fullName: updateSuggestionsList(suggestions)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>):
        void;
      parameters:
        - id: suggestions
          description: ''
          type: 'T[] | PromiseLike&lt;T[]&gt;'
      return:
        type: void
        description: ''
  - name: updateSuggestionWithZeroState()
    uid: '@fluentui/react!BaseFloatingPicker#updateSuggestionWithZeroState:member(1)'
    package: '@fluentui/react!'
    fullName: updateSuggestionWithZeroState()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected updateSuggestionWithZeroState(): void;'
      return:
        type: void
        description: ''
  - name: updateValue(updatedValue)
    uid: '@fluentui/react!BaseFloatingPicker#updateValue:member(1)'
    package: '@fluentui/react!'
    fullName: updateValue(updatedValue)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected updateValue(updatedValue: string): void;'
      parameters:
        - id: updatedValue
          description: ''
          type: string
      return:
        type: void
        description: ''
extends: 'React.Component&lt;P, IBaseFloatingPickerState&gt; '
