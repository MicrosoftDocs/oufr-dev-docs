### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!ISearchBoxProps:interface'
    name: ISearchBoxProps
    fullName: ISearchBoxProps
    langs:
      - typeScript
    type: interface
    extends:
      - React.InputHTMLAttributes<HTMLInputElement>
      - 'React.RefAttributes<HTMLDivElement> '
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!ISearchBoxProps#ariaLabel:member'
      - '@fluentui/react-internal!ISearchBoxProps#className:member'
      - '@fluentui/react-internal!ISearchBoxProps#clearButtonProps:member'
      - '@fluentui/react-internal!ISearchBoxProps#componentRef:member'
      - '@fluentui/react-internal!ISearchBoxProps#defaultValue:member'
      - '@fluentui/react-internal!ISearchBoxProps#disableAnimation:member'
      - '@fluentui/react-internal!ISearchBoxProps#iconProps:member'
      - '@fluentui/react-internal!ISearchBoxProps#labelText:member'
      - '@fluentui/react-internal!ISearchBoxProps#onChange:member'
      - '@fluentui/react-internal!ISearchBoxProps#onChanged:member'
      - '@fluentui/react-internal!ISearchBoxProps#onClear:member'
      - '@fluentui/react-internal!ISearchBoxProps#onEscape:member'
      - '@fluentui/react-internal!ISearchBoxProps#onSearch:member'
      - '@fluentui/react-internal!ISearchBoxProps#placeholder:member'
      - '@fluentui/react-internal!ISearchBoxProps#role:member'
      - '@fluentui/react-internal!ISearchBoxProps#styles:member'
      - '@fluentui/react-internal!ISearchBoxProps#theme:member'
      - '@fluentui/react-internal!ISearchBoxProps#underlined:member'
      - '@fluentui/react-internal!ISearchBoxProps#value:member'
  - uid: '@fluentui/react-internal!ISearchBoxProps#ariaLabel:member'
    summary: The aria label of the SearchBox for the benefit of screen readers.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!ISearchBoxProps#className:member'
    summary: CSS class to apply to the SearchBox.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!ISearchBoxProps#clearButtonProps:member'
    summary: The props for the clear button.
    name: clearButtonProps
    fullName: clearButtonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'clearButtonProps?: IButtonProps;'
      return:
        type:
          - 'office-ui-fabric-react!IButtonProps:interface'
  - uid: '@fluentui/react-internal!ISearchBoxProps#componentRef:member'
    summary: >-
      Optional callback to access the ISearchBox interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: React.Ref<ISearchBox>;'
      return:
        type:
          - React.Ref<ISearchBox>
  - uid: '@fluentui/react-internal!ISearchBoxProps#defaultValue:member'
    summary: 'The default value of the text in the SearchBox, in the case of an uncontrolled component.'
    name: defaultValue
    fullName: defaultValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultValue?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!ISearchBoxProps#disableAnimation:member'
    summary: Whether or not to animate the SearchBox icon on focus.
    name: disableAnimation
    fullName: disableAnimation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disableAnimation?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!ISearchBoxProps#iconProps:member'
    summary: The props for the icon.
    name: iconProps
    fullName: iconProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'iconProps?: Pick<IIconProps, Exclude<keyof IIconProps, ''className''>>;'
      return:
        type:
          - 'Pick<IIconProps, Exclude<keyof IIconProps, ''className''>>'
  - uid: '@fluentui/react-internal!ISearchBoxProps#labelText:member'
    summary: Deprecated. Use `placeholder` instead.
    deprecated:
      content: Use `placeholder` instead.
    name: labelText
    fullName: labelText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'labelText?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!ISearchBoxProps#onChange:member'
    summary: Callback function for when the typed input for the SearchBox has changed.
    name: onChange
    fullName: onChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChange?: (event?: React.ChangeEvent<HTMLInputElement>, newValue?: string) => void;'
      return:
        type:
          - '(event?: React.ChangeEvent<HTMLInputElement>, newValue?: string) => void'
  - uid: '@fluentui/react-internal!ISearchBoxProps#onChanged:member'
    summary: 'Deprecated at v0.52.2, use `onChange` instead.'
    deprecated:
      content: Use `onChange` instead.
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChanged?: (newValue: any) => void;'
      return:
        type:
          - '(newValue: any) => void'
  - uid: '@fluentui/react-internal!ISearchBoxProps#onClear:member'
    summary: Callback executed when the user clears the search box by either clicking 'X' or hitting escape.
    name: onClear
    fullName: onClear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onClear?: (ev?: any) => void;'
      return:
        type:
          - '(ev?: any) => void'
  - uid: '@fluentui/react-internal!ISearchBoxProps#onEscape:member'
    summary: Callback executed when the user presses escape in the search box.
    name: onEscape
    fullName: onEscape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onEscape?: (ev?: any) => void;'
      return:
        type:
          - '(ev?: any) => void'
  - uid: '@fluentui/react-internal!ISearchBoxProps#onSearch:member'
    summary: Callback executed when the user presses enter in the search box.
    name: onSearch
    fullName: onSearch
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onSearch?: (newValue: any) => void;'
      return:
        type:
          - '(newValue: any) => void'
  - uid: '@fluentui/react-internal!ISearchBoxProps#placeholder:member'
    summary: Placeholder for the search box.
    name: placeholder
    fullName: placeholder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'placeholder?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!ISearchBoxProps#role:member'
    summary: 'The role assigned to the root DIV element of the SearchBox, useful for defining a landmark role, such as "search".'
    name: role
    fullName: role
    langs:
      - typeScript
    type: property
    syntax:
      content: 'role?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!ISearchBoxProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ISearchBoxStyleProps, ISearchBoxStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<ISearchBoxStyleProps, ISearchBoxStyles>'
  - uid: '@fluentui/react-internal!ISearchBoxProps#theme:member'
    summary: Theme (provided through customization).
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
  - uid: '@fluentui/react-internal!ISearchBoxProps#underlined:member'
    summary: Whether or not the SearchBox is underlined.
    name: underlined
    fullName: underlined
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underlined?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!ISearchBoxProps#value:member'
    summary: The value of the text in the SearchBox.
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value?: string;'
      return:
        type:
          - string
