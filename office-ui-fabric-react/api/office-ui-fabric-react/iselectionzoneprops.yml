### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!ISelectionZoneProps:interface'
    name: ISelectionZoneProps
    fullName: ISelectionZoneProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.ClassAttributes<SelectionZone> '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!ISelectionZoneProps#componentRef:member'
      - 'office-ui-fabric-react!ISelectionZoneProps#disableAutoSelectOnInputElements:member'
      - 'office-ui-fabric-react!ISelectionZoneProps#enableTouchInvocationTarget:member'
      - 'office-ui-fabric-react!ISelectionZoneProps#enterModalOnTouch:member'
      - 'office-ui-fabric-react!ISelectionZoneProps#isSelectedOnFocus:member'
      - 'office-ui-fabric-react!ISelectionZoneProps#layout:member'
      - 'office-ui-fabric-react!ISelectionZoneProps#onItemContextMenu:member'
      - 'office-ui-fabric-react!ISelectionZoneProps#onItemInvoked:member'
      - 'office-ui-fabric-react!ISelectionZoneProps#selection:member'
      - 'office-ui-fabric-react!ISelectionZoneProps#selectionMode:member'
      - 'office-ui-fabric-react!ISelectionZoneProps#selectionPreservedOnEmptyClick:member'
  - uid: 'office-ui-fabric-react!ISelectionZoneProps#componentRef:member'
    summary: Reference to the component interface.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: () => void;'
      return:
        type:
          - () => void
  - uid: 'office-ui-fabric-react!ISelectionZoneProps#disableAutoSelectOnInputElements:member'
    summary: 'If true, disables automatic selection on input elements.'
    name: disableAutoSelectOnInputElements
    fullName: disableAutoSelectOnInputElements
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disableAutoSelectOnInputElements?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!ISelectionZoneProps#enableTouchInvocationTarget:member'
    summary: >-
      Determines whether elements with the attribute `data-selection-touch-invoke` should be used as invocation targets
      for an item if the user is using touch.
    name: enableTouchInvocationTarget
    fullName: enableTouchInvocationTarget
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableTouchInvocationTarget?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!ISelectionZoneProps#enterModalOnTouch:member'
    summary: 'If true, modal selection is enabled on touch event.'
    name: enterModalOnTouch
    fullName: enterModalOnTouch
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enterModalOnTouch?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!ISelectionZoneProps#isSelectedOnFocus:member'
    summary: Determines if an item is selected on focus.
    name: isSelectedOnFocus
    fullName: isSelectedOnFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSelectedOnFocus?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!ISelectionZoneProps#layout:member'
    deprecated:
      content: 'No longer in use, focus is now managed by .'
    name: layout
    fullName: layout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layout?: {};'
      return:
        type:
          - '{}'
  - uid: 'office-ui-fabric-react!ISelectionZoneProps#onItemContextMenu:member'
    summary: Optional callback for when an item's contextual menu action occurs.
    name: onItemContextMenu
    fullName: onItemContextMenu
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onItemContextMenu?: (item?: any, index?: number, ev?: Event) => void | boolean;'
      return:
        type:
          - '(item?: any, index?: number, ev?: Event) => void | boolean'
  - uid: 'office-ui-fabric-react!ISelectionZoneProps#onItemInvoked:member'
    summary: Optional callback for when an item is invoked via ENTER or double-click.
    name: onItemInvoked
    fullName: onItemInvoked
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onItemInvoked?: (item?: IObjectWithKey, index?: number, ev?: Event) => void;'
      return:
        type:
          - '(item?: IObjectWithKey, index?: number, ev?: Event) => void'
  - uid: 'office-ui-fabric-react!ISelectionZoneProps#selection:member'
    summary: 'Required  instance bound to the [SelectionZone](xref:office-ui-fabric-react!SelectionZone:class)<!-- -->.'
    name: selection
    fullName: selection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selection: ISelection;'
      return:
        type:
          - '@fluentui/utilities!ISelection:interface'
  - uid: 'office-ui-fabric-react!ISelectionZoneProps#selectionMode:member'
    summary: 'The mode of Selection, where the value is one of ''none'', ''single'', or ''multiple''.'
    name: selectionMode
    fullName: selectionMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectionMode?: SelectionMode;'
      return:
        type:
          - '@fluentui/utilities!SelectionMode:enum'
  - uid: 'office-ui-fabric-react!ISelectionZoneProps#selectionPreservedOnEmptyClick:member'
    summary: 'If true, selection is preserved on outer click.'
    name: selectionPreservedOnEmptyClick
    fullName: selectionPreservedOnEmptyClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectionPreservedOnEmptyClick?: boolean;'
      return:
        type:
          - boolean
