### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!CheckboxBase:class'
    name: CheckboxBase
    fullName: CheckboxBase
    langs:
      - typeScript
    type: class
    extends:
      - 'React.Component<ICheckboxProps, ICheckboxState> '
    implements:
      - 'office-ui-fabric-react!ICheckbox:interface'
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!CheckboxBase:constructor(1)'
      - 'office-ui-fabric-react!CheckboxBase#checked:member'
      - 'office-ui-fabric-react!CheckboxBase.defaultProps:member'
      - 'office-ui-fabric-react!CheckboxBase#focus:member(1)'
      - 'office-ui-fabric-react!CheckboxBase.getDerivedStateFromProps:member(1)'
      - 'office-ui-fabric-react!CheckboxBase#indeterminate:member'
      - 'office-ui-fabric-react!CheckboxBase#render:member(1)'
  - uid: 'office-ui-fabric-react!CheckboxBase:constructor(1)'
    summary: Initialize a new instance of the Checkbox
    name: '(constructor)(props, context)'
    fullName: '(constructor)(props, context)'
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(props: ICheckboxProps, context?: any);'
      parameters:
        - id: props
          description: Props for the component
          type:
            - 'office-ui-fabric-react!ICheckboxProps:interface'
        - id: context
          description: Context or initial state for the base component.
          type:
            - any
  - uid: 'office-ui-fabric-react!CheckboxBase#checked:member'
    name: checked
    fullName: checked
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly checked: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!CheckboxBase.defaultProps:member'
    name: defaultProps
    fullName: defaultProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'static defaultProps: ICheckboxProps;'
      return:
        type:
          - 'office-ui-fabric-react!ICheckboxProps:interface'
  - uid: 'office-ui-fabric-react!CheckboxBase#focus:member(1)'
    name: focus()
    fullName: focus()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focus(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!CheckboxBase.getDerivedStateFromProps:member(1)'
    name: 'getDerivedStateFromProps(nextProps, prevState)'
    fullName: 'getDerivedStateFromProps(nextProps, prevState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static getDerivedStateFromProps(nextProps: Readonly<ICheckboxProps>, prevState: Readonly<ICheckboxState>):
        ICheckboxState | null;
      return:
        type:
          - ICheckboxState | null
        description: ''
      parameters:
        - id: nextProps
          description: ''
          type:
            - Readonly<ICheckboxProps>
        - id: prevState
          description: ''
          type:
            - Readonly<ICheckboxState>
  - uid: 'office-ui-fabric-react!CheckboxBase#indeterminate:member'
    name: indeterminate
    fullName: indeterminate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly indeterminate: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!CheckboxBase#render:member(1)'
    summary: Render the Checkbox based on passed props
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
