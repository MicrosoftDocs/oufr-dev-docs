### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IChoiceGroupOption:interface'
    name: IChoiceGroupOption
    fullName: IChoiceGroupOption
    langs:
      - typeScript
    type: interface
    extends:
      - 'Omit<React.InputHTMLAttributes<HTMLElement | HTMLInputElement>, ''checked''> '
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IChoiceGroupOption#ariaLabel:member'
      - '@fluentui/react-internal!IChoiceGroupOption#disabled:member'
      - '@fluentui/react-internal!IChoiceGroupOption#iconProps:member'
      - '@fluentui/react-internal!IChoiceGroupOption#id:member'
      - '@fluentui/react-internal!IChoiceGroupOption#imageAlt:member'
      - '@fluentui/react-internal!IChoiceGroupOption#imageSize:member'
      - '@fluentui/react-internal!IChoiceGroupOption#imageSrc:member'
      - '@fluentui/react-internal!IChoiceGroupOption#key:member'
      - '@fluentui/react-internal!IChoiceGroupOption#labelId:member'
      - '@fluentui/react-internal!IChoiceGroupOption#onRenderField:member'
      - '@fluentui/react-internal!IChoiceGroupOption#onRenderLabel:member'
      - '@fluentui/react-internal!IChoiceGroupOption#selectedImageSrc:member'
      - '@fluentui/react-internal!IChoiceGroupOption#styles:member'
      - '@fluentui/react-internal!IChoiceGroupOption#text:member'
  - uid: '@fluentui/react-internal!IChoiceGroupOption#ariaLabel:member'
    summary: Aria label of the option for the benefit of screen reader users.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IChoiceGroupOption#disabled:member'
    summary: Whether or not the option is disabled.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IChoiceGroupOption#iconProps:member'
    summary: Props for an icon to display with this option.
    name: iconProps
    fullName: iconProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'iconProps?: IIconProps;'
      return:
        type:
          - IIconProps
  - uid: '@fluentui/react-internal!IChoiceGroupOption#id:member'
    summary: ID used on the option's input element.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IChoiceGroupOption#imageAlt:member'
    summary: Alt text if the option is an image.  '' (empty string)
    name: imageAlt
    fullName: imageAlt
    langs:
      - typeScript
    type: property
    syntax:
      content: 'imageAlt?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IChoiceGroupOption#imageSize:member'
    summary: The width and height of the image in px for choice field.
    name: imageSize
    fullName: imageSize
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        imageSize?: {
                width: number;
                height: number;
            };
      return:
        type:
          - |-
            {
                    width: number;
                    height: number;
                }
  - uid: '@fluentui/react-internal!IChoiceGroupOption#imageSrc:member'
    summary: Image to display with this option.
    name: imageSrc
    fullName: imageSrc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'imageSrc?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IChoiceGroupOption#key:member'
    summary: A required key to uniquely identify the option.
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'key: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IChoiceGroupOption#labelId:member'
    summary: ID used on the option's label.
    name: labelId
    fullName: labelId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'labelId?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IChoiceGroupOption#onRenderField:member'
    summary: Used to customize option rendering.
    name: onRenderField
    fullName: onRenderField
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderField?: IRenderFunction<IChoiceGroupOptionProps>;'
      return:
        type:
          - IRenderFunction<IChoiceGroupOptionProps>
  - uid: '@fluentui/react-internal!IChoiceGroupOption#onRenderLabel:member'
    summary: Used to customize label rendering.
    name: onRenderLabel
    fullName: onRenderLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderLabel?: IRenderFunction<IChoiceGroupOptionProps>;'
      return:
        type:
          - IRenderFunction<IChoiceGroupOptionProps>
  - uid: '@fluentui/react-internal!IChoiceGroupOption#selectedImageSrc:member'
    summary: The src of image for choice field which is selected.
    name: selectedImageSrc
    fullName: selectedImageSrc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedImageSrc?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IChoiceGroupOption#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>'
  - uid: '@fluentui/react-internal!IChoiceGroupOption#text:member'
    summary: The text string for the option.
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'text: string;'
      return:
        type:
          - string
