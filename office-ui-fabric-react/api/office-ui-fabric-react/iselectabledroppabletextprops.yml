### YamlMime:TSType
name: ISelectableDroppableTextProps
uid: 'office-ui-fabric-react!ISelectableDroppableTextProps:interface'
package: office-ui-fabric-react!
fullName: ISelectableDroppableTextProps
summary: >-
  - `TComponent` - Component used for reference properties, such as
  `componentRef`<!-- -->. - `TListenerElement` - Listener element associated
  with HTML event callbacks. Optional. If not provided, `TComponent` is assumed.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: ariaLabel
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#ariaLabel:member'
    package: office-ui-fabric-react!
    fullName: ariaLabel
    summary: Aria Label for the ISelectableDroppableText for screen reader users.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type: string
  - name: calloutProps
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#calloutProps:member'
    package: office-ui-fabric-react!
    fullName: calloutProps
    summary: >-
      Custom properties for ISelectableDroppableText's Callout used to render
      options.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'calloutProps?: ICalloutProps;'
      return:
        type: ICalloutProps
  - name: className
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#className:member'
    package: office-ui-fabric-react!
    fullName: className
    summary: 'If provided, additional class name to provide on the root element.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#componentRef:member'
    package: office-ui-fabric-react!
    fullName: componentRef
    summary: >-
      Optional callback to access the ISelectableDroppableText interface. Use
      this instead of ref for accessing the public methods and properties of the
      component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<TComponent>;'
      return:
        type: IRefObject&lt;TComponent&gt;
  - name: defaultSelectedKey
    uid: >-
      office-ui-fabric-react!ISelectableDroppableTextProps#defaultSelectedKey:member
    package: office-ui-fabric-react!
    fullName: defaultSelectedKey
    summary: >-
      The key(s) that will be initially used to set a selected item.


      Mutually exclusive with `selectedKey`<!-- -->. For Dropdown in
      multi-select mode, use `defaultSelectedKeys` instead.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultSelectedKey?: string | number | string[] | number[] | null;'
      return:
        type: 'string | number | string[] | number[] | null'
  - name: disabled
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#disabled:member'
    package: office-ui-fabric-react!
    fullName: disabled
    summary: Whether or not the ISelectableDroppableText is disabled.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: boolean;'
      return:
        type: boolean
  - name: errorMessage
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#errorMessage:member'
    package: office-ui-fabric-react!
    fullName: errorMessage
    summary: Descriptive label for the ISelectableDroppableText Error Message
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'errorMessage?: string;'
      return:
        type: string
  - name: id
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#id:member'
    package: office-ui-fabric-react!
    fullName: id
    summary: Id of the ISelectableDroppableText
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id?: string;'
      return:
        type: string
  - name: label
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#label:member'
    package: office-ui-fabric-react!
    fullName: label
    summary: Descriptive label for the ISelectableDroppableText
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'label?: string;'
      return:
        type: string
  - name: multiSelect
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#multiSelect:member'
    package: office-ui-fabric-react!
    fullName: multiSelect
    summary: >-
      Optional prop that indicates if multi-choice selections are allowed or
      not.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'multiSelect?: boolean;'
      return:
        type: boolean
  - name: onDismiss
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#onDismiss:member'
    package: office-ui-fabric-react!
    fullName: onDismiss
    summary: Callback that is issued when the options callout is dismissed
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDismiss?: () => void;'
      return:
        type: () =&gt; void
  - name: onRenderContainer
    uid: >-
      office-ui-fabric-react!ISelectableDroppableTextProps#onRenderContainer:member
    package: office-ui-fabric-react!
    fullName: onRenderContainer
    summary: Optional custom renderer for the ISelectableDroppableText container
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRenderContainer?:
        IRenderFunction<ISelectableDroppableTextProps<TComponent,
        TListenerElement>>;
      return:
        type: >-
          IRenderFunction&lt;ISelectableDroppableTextProps&lt;TComponent,
          TListenerElement&gt;&gt;
  - name: onRenderItem
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#onRenderItem:member'
    package: office-ui-fabric-react!
    fullName: onRenderItem
    summary: Optional custom renderer for the ISelectableDroppableText options
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderItem?: IRenderFunction<ISelectableOption>;'
      return:
        type: IRenderFunction&lt;ISelectableOption&gt;
  - name: onRenderList
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#onRenderList:member'
    package: office-ui-fabric-react!
    fullName: onRenderList
    summary: Optional custom renderer for the ISelectableDroppableText list
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRenderList?: IRenderFunction<ISelectableDroppableTextProps<TComponent,
        TListenerElement>>;
      return:
        type: >-
          IRenderFunction&lt;ISelectableDroppableTextProps&lt;TComponent,
          TListenerElement&gt;&gt;
  - name: onRenderOption
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#onRenderOption:member'
    package: office-ui-fabric-react!
    fullName: onRenderOption
    summary: Optional custom renderer for the ISelectableDroppableText option content
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderOption?: IRenderFunction<ISelectableOption>;'
      return:
        type: IRenderFunction&lt;ISelectableOption&gt;
  - name: openOnKeyboardFocus
    uid: >-
      office-ui-fabric-react!ISelectableDroppableTextProps#openOnKeyboardFocus:member
    package: office-ui-fabric-react!
    fullName: openOnKeyboardFocus
    summary: Whether or not the ComboBox/Dropdown should expand on keyboard focus.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'openOnKeyboardFocus?: boolean;'
      return:
        type: boolean
  - name: options
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#options:member'
    package: office-ui-fabric-react!
    fullName: options
    summary: Collection of options for this ISelectableDroppableText
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'options?: any;'
      return:
        type: any
  - name: panelProps
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#panelProps:member'
    package: office-ui-fabric-react!
    fullName: panelProps
    summary: >-
      Custom properties for ISelectableDroppableText's Panel used to render
      options on small devices.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'panelProps?: IPanelProps;'
      return:
        type: IPanelProps
  - name: placeholder
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#placeholder:member'
    package: office-ui-fabric-react!
    fullName: placeholder
    summary: Input placeholder text. Displayed until option is selected.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'placeholder?: string;'
      return:
        type: string
  - name: required
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#required:member'
    package: office-ui-fabric-react!
    fullName: required
    summary: Whether or not the ISelectableDroppableText is required.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'required?: boolean;'
      return:
        type: boolean
  - name: selectedKey
    uid: 'office-ui-fabric-react!ISelectableDroppableTextProps#selectedKey:member'
    package: office-ui-fabric-react!
    fullName: selectedKey
    summary: >-
      The key(s) of the selected item. If you provide this, you must maintain
      selection state by observing onChange events and passing a new value in
      when changed. Note that passing in `null` will cause selection to be
      reset.


      Mutually exclusive with `defaultSelectedKey`<!-- -->. For Dropdown in
      multi-select mode, use `selectedKeys` instead.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectedKey?: string | number | string[] | number[] | null;'
      return:
        type: 'string | number | string[] | number[] | null'
extends: 'React.HTMLAttributes&lt;TListenerElement&gt; '
