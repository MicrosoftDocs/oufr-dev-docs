### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!ICustomizerProps:interface'
    name: ICustomizerProps
    fullName: ICustomizerProps
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!ICustomizerProps#contextTransform:member'
      - '@fluentui/react-next!ICustomizerProps#disableThemeProvider:member'
      - '@fluentui/react-next!ICustomizerProps#scopedSettings:member'
      - '@fluentui/react-next!ICustomizerProps#settings:member'
  - uid: '@fluentui/react-next!ICustomizerProps#contextTransform:member'
    summary: >-
      Optional transform function for context. Any implementations should take care to return context without mutating
      it.
    name: contextTransform
    fullName: contextTransform
    langs:
      - typeScript
    type: property
    syntax:
      content: 'contextTransform?: (context: Readonly<ICustomizerContext>) => ICustomizerContext;'
      return:
        type:
          - '(context: Readonly<ICustomizerContext>) => ICustomizerContext'
  - uid: '@fluentui/react-next!ICustomizerProps#disableThemeProvider:member'
    summary: >-
      In cases where ThemeProvider is not needed (e.g. only RTL in theme has changed, Customizer is only used on V7
      components), this can be set to true to disable ThemeProvider.
    name: disableThemeProvider
    fullName: disableThemeProvider
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disableThemeProvider?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ICustomizerProps#scopedSettings:member'
    summary: >-
      Scoped settings are settings that are scoped to a specific scope. The scope is the name that is passed to the
      `customizable` function when the the component is customized.
    name: scopedSettings
    fullName: scopedSettings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'scopedSettings?: ISettings | ISettingsFunction;'
      return:
        type:
          - ISettings | ISettingsFunction
  - uid: '@fluentui/react-next!ICustomizerProps#settings:member'
    summary: >-
      Settings are used as general settings for the React tree below. Components can subscribe to receive the settings
      by using `customizable`<!-- -->.
    name: settings
    fullName: settings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'settings?: ISettings | ISettingsFunction;'
      return:
        type:
          - ISettings | ISettingsFunction
