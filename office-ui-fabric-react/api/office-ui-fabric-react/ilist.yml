### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IList:interface'
    name: IList
    fullName: IList
    langs:
      - typeScript
    type: interface
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IList#forceUpdate:member'
      - 'office-ui-fabric-react!IList#getStartItemIndexInView:member'
      - 'office-ui-fabric-react!IList#getTotalListHeight:member'
      - 'office-ui-fabric-react!IList#scrollToIndex:member'
  - uid: 'office-ui-fabric-react!IList#forceUpdate:member'
    summary: Force the component to update.
    name: forceUpdate
    fullName: forceUpdate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'forceUpdate: () => void;'
      return:
        type:
          - () => void
  - uid: 'office-ui-fabric-react!IList#getStartItemIndexInView:member'
    summary: Get the start index of the page that is currently in view
    name: getStartItemIndexInView
    fullName: getStartItemIndexInView
    langs:
      - typeScript
    type: property
    syntax:
      content: 'getStartItemIndexInView: () => number;'
      return:
        type:
          - () => number
  - uid: 'office-ui-fabric-react!IList#getTotalListHeight:member'
    summary: Get the current height the list and it's pages.
    name: getTotalListHeight
    fullName: getTotalListHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'getTotalListHeight?: () => number;'
      return:
        type:
          - () => number
  - uid: 'office-ui-fabric-react!IList#scrollToIndex:member'
    summary: >-
      Scroll to the given index. By default will bring the page the specified item is on into the view. If a callback to
      measure the height of an individual item is specified, will only scroll to bring the specific item into view.


      Note: with items of variable height and no passed in `getPageHeight` method, the list might jump after scrolling
      when windows before/ahead are being rendered, and the estimated height is replaced using actual elements.
    name: scrollToIndex
    fullName: scrollToIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: >-
        scrollToIndex: (index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode) =>
        void;
      return:
        type:
          - '(index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode) => void'
