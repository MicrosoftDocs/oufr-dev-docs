### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!ILabelProps:interface'
    name: ILabelProps
    fullName: ILabelProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.LabelHTMLAttributes<HTMLLabelElement> '
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!ILabelProps#as:member'
      - '@fluentui/react-internal!ILabelProps#componentRef:member'
      - '@fluentui/react-internal!ILabelProps#disabled:member'
      - '@fluentui/react-internal!ILabelProps#required:member'
      - '@fluentui/react-internal!ILabelProps#styles:member'
      - '@fluentui/react-internal!ILabelProps#theme:member'
  - uid: '@fluentui/react-internal!ILabelProps#as:member'
    summary: Render the root element as another type.
    name: as
    fullName: as
    langs:
      - typeScript
    type: property
    syntax:
      content: 'as?: IComponentAs<React.AllHTMLAttributes<HTMLElement>>;'
      return:
        type:
          - IComponentAs<React.AllHTMLAttributes<HTMLElement>>
  - uid: '@fluentui/react-internal!ILabelProps#componentRef:member'
    summary: >-
      Optional callback to access the ILabel interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<ILabel>;'
      return:
        type:
          - IRefObject<ILabel>
  - uid: '@fluentui/react-internal!ILabelProps#disabled:member'
    summary: Renders the label as disabled.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!ILabelProps#required:member'
    summary: Whether the associated form field is required or not
    name: required
    fullName: required
    langs:
      - typeScript
    type: property
    syntax:
      content: 'required?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!ILabelProps#styles:member'
    summary: Styles for the label.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>'
  - uid: '@fluentui/react-internal!ILabelProps#theme:member'
    summary: Theme provided by HOC.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
