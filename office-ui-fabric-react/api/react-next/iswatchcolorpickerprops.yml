### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!ISwatchColorPickerProps:interface'
    name: ISwatchColorPickerProps
    fullName: ISwatchColorPickerProps
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!ISwatchColorPickerProps#ariaPosInSet:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#ariaSetSize:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#cellBorderWidth:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#cellHeight:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#cellMargin:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#cellShape:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#cellWidth:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#className:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#colorCells:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#columnCount:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#disabled:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#doNotContainWithinFocusZone:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#focusOnHover:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#getColorGridCellStyles:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#id:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#isControlled:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#mouseLeaveParentSelector:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#onCellFocused:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#onCellHovered:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#onColorChanged:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#positionInSet:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#selectedId:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#setSize:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#shouldFocusCircularNavigate:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#styles:member'
      - '@fluentui/react-next!ISwatchColorPickerProps#theme:member'
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#ariaPosInSet:member'
    summary: 'Position this grid is in the parent set (index in a parent menu, for example)'
    name: ariaPosInSet
    fullName: ariaPosInSet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaPosInSet?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#ariaSetSize:member'
    summary: 'Size of the parent set (size of parent menu, for example)'
    name: ariaSetSize
    fullName: ariaSetSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaSetSize?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#cellBorderWidth:member'
    summary: 'Width of the border indicating a hovered/selected cell, in pixels'
    name: cellBorderWidth
    fullName: cellBorderWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cellBorderWidth?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#cellHeight:member'
    summary: 'Height of an individual cell, in pixels'
    name: cellHeight
    fullName: cellHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cellHeight?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#cellMargin:member'
    summary: 'The distance between cells, in pixels'
    name: cellMargin
    fullName: cellMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cellMargin?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#cellShape:member'
    summary: The shape of the color cells.  'circle'
    name: cellShape
    fullName: cellShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cellShape?: ''circle'' | ''square'';'
      return:
        type:
          - '''circle'' | ''square'''
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#cellWidth:member'
    summary: 'Width of an individual cell, in pixels'
    name: cellWidth
    fullName: cellWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cellWidth?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#className:member'
    summary: Additional class name to provide on the root element
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#colorCells:member'
    summary: >-
      The color cells that will be made available to the user.


      Note: When the reference to this prop changes, regardless of how many color cells change, all of the color cells
      will be re-rendered (potentially bad perf) because we memoize based on this prop's reference.
    name: colorCells
    fullName: colorCells
    langs:
      - typeScript
    type: property
    syntax:
      content: 'colorCells: IColorCellProps[];'
      return:
        type:
          - 'IColorCellProps[]'
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#columnCount:member'
    summary: Number of columns for the swatch color picker
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnCount: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#disabled:member'
    summary: Whether the control is disabled.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#doNotContainWithinFocusZone:member'
    summary: 'If false (the default), the grid is contained inside a FocusZone. If true, a FocusZone is not used.  false'
    name: doNotContainWithinFocusZone
    fullName: doNotContainWithinFocusZone
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doNotContainWithinFocusZone?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#focusOnHover:member'
    summary: Whether to update focus when a cell is hovered.
    name: focusOnHover
    fullName: focusOnHover
    langs:
      - typeScript
    type: property
    syntax:
      content: 'focusOnHover?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#getColorGridCellStyles:member'
    summary: Styles for the grid cells.
    name: getColorGridCellStyles
    fullName: getColorGridCellStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'getColorGridCellStyles?: IStyleFunctionOrObject<IColorPickerGridCellStyleProps, IColorPickerGridCellStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IColorPickerGridCellStyleProps, IColorPickerGridCellStyles>'
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#id:member'
    summary: ID for the swatch color picker's root element. Also used as a prefix for the IDs of color cells.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#isControlled:member'
    summary: >-
      Indicates whether the SwatchColorPicker is fully controlled. When true, the component will not set its internal
      state to track the selected color. Instead, the parent component will be responsible for handling state in the
      callbacks like `onColorChanged`<!-- -->.


      NOTE: This property is a temporary workaround to force the component to be fully controllable without breaking
      existing behavior
    name: isControlled
    fullName: isControlled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isControlled?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#mouseLeaveParentSelector:member'
    summary: Selector to focus on mouse leave. Should only be used in conjunction with `focusOnHover`<!-- -->.
    name: mouseLeaveParentSelector
    fullName: mouseLeaveParentSelector
    langs:
      - typeScript
    type: property
    syntax:
      content: 'mouseLeaveParentSelector?: string | undefined;'
      return:
        type:
          - string | undefined
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#onCellFocused:member'
    summary: >-
      Callback for when the user focuses a color cell. If `id` and `color` are unspecified, cells are no longer being
      focused.
    name: onCellFocused
    fullName: onCellFocused
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onCellFocused?: (id?: string, color?: string) => void;'
      return:
        type:
          - '(id?: string, color?: string) => void'
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#onCellHovered:member'
    summary: >-
      Callback for when the user hovers over a color cell. If `id` and `color` are unspecified, cells are no longer
      being hovered.
    name: onCellHovered
    fullName: onCellHovered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onCellHovered?: (id?: string, color?: string) => void;'
      return:
        type:
          - '(id?: string, color?: string) => void'
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#onColorChanged:member'
    summary: >-
      Callback for when the user changes the color. If `id` and `color` are unspecified, there is no selected cell.
      (e.g. the user executed the currently selected cell to unselect it)
    name: onColorChanged
    fullName: onColorChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onColorChanged?: (id?: string, color?: string) => void;'
      return:
        type:
          - '(id?: string, color?: string) => void'
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#positionInSet:member'
    deprecated:
      content: Use `ariaPosInSet`
    name: positionInSet
    fullName: positionInSet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'positionInSet?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#selectedId:member'
    summary: The ID of color cell that is currently selected
    name: selectedId
    fullName: selectedId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedId?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#setSize:member'
    deprecated:
      content: Use `ariaSetSize`
    name: setSize
    fullName: setSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'setSize?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#shouldFocusCircularNavigate:member'
    summary: >-
      Whether focus should cycle back to the beginning once the user navigates past the end (and vice versa). Only
      relevant if `doNotContainWithinFocusZone` is not true.
    name: shouldFocusCircularNavigate
    fullName: shouldFocusCircularNavigate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shouldFocusCircularNavigate?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#styles:member'
    summary: Styles for the component.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ISwatchColorPickerStyleProps, ISwatchColorPickerStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<ISwatchColorPickerStyleProps, ISwatchColorPickerStyles>'
  - uid: '@fluentui/react-next!ISwatchColorPickerProps#theme:member'
    summary: Theme to apply to the component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@uifabric/styling!ITheme:interface'
