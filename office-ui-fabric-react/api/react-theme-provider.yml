### YamlMime:TSPackage
uid: '@fluentui/react-theme-provider!'
name: '@fluentui/react-theme-provider'
type: package
summary: ''
interfaces:
  - '@fluentui/react-theme-provider!ThemeProviderProps:interface'
  - '@fluentui/react-theme-provider!ThemeProviderState:interface'
  - '@fluentui/react-theme-provider!ThemeProviderValue:interface'
functions:
  - name: renderThemeProvider(state)
    uid: '@fluentui/react-theme-provider!renderThemeProvider:function(1)'
    package: '@fluentui/react-theme-provider!'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function renderThemeProvider(state: ThemeProviderState):
        JSX.Element;
      parameters:
        - id: state
          description: ''
          type: >-
            <xref
            uid="@fluentui/react-theme-provider!ThemeProviderState:interface" />
      return:
        type: JSX.Element
        description: ''
  - name: useTheme()
    uid: '@fluentui/react-theme-provider!useTheme:function(1)'
    package: '@fluentui/react-theme-provider!'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'export declare function useTheme(): ThemeProviderValue;'
      return:
        type: >-
          <xref
          uid="@fluentui/react-theme-provider!ThemeProviderValue:interface" />
        description: ''
  - name: 'useThemeProvider(props, ref)'
    uid: '@fluentui/react-theme-provider!useThemeProvider:function(1)'
    package: '@fluentui/react-theme-provider!'
    summary: >-
      Returns the ThemeProvider render function and calculated state, given user
      input, ref, and a set of default prop values.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function useThemeProvider(props: ThemeProviderProps, ref:
        React.Ref<HTMLElement>): {
            state: ThemeProviderState;
            render: typeof renderThemeProvider;
        };
      parameters:
        - id: props
          description: ''
          type: ThemeProviderProps
        - id: ref
          description: ''
          type: React.Ref&lt;HTMLElement&gt;
      return:
        type: |-
          {
              state: ThemeProviderState;
              render: typeof renderThemeProvider;
          }
        description: ''
  - name: useThemeProviderState(draftState)
    uid: '@fluentui/react-theme-provider!useThemeProviderState:function(1)'
    package: '@fluentui/react-theme-provider!'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function useThemeProviderState(draftState:
        ThemeProviderState): void;
      parameters:
        - id: draftState
          description: ''
          type: >-
            <xref
            uid="@fluentui/react-theme-provider!ThemeProviderState:interface" />
      return:
        type: void
        description: ''
