### YamlMime:UniversalReference
items:
  - uid: '@fluentui/date-time-utilities!IDatepickerOptions:interface'
    name: IDatepickerOptions
    fullName: IDatepickerOptions
    langs:
      - typeScript
    type: interface
    extends:
      - '@fluentui/date-time-utilities!IRestrictedDatesOptions:interface'
    package: '@fluentui/date-time-utilities!'
    children:
      - '@fluentui/date-time-utilities!IDatepickerOptions#dateRangeType:member'
      - '@fluentui/date-time-utilities!IDatepickerOptions#daysToSelectInDayView:member'
      - '@fluentui/date-time-utilities!IDatepickerOptions#firstDayOfWeek:member'
      - '@fluentui/date-time-utilities!IDatepickerOptions#firstWeekOfYear:member'
      - '@fluentui/date-time-utilities!IDatepickerOptions#markedDays:member'
      - '@fluentui/date-time-utilities!IDatepickerOptions#showWeekNumbers:member'
      - '@fluentui/date-time-utilities!IDatepickerOptions#today:member'
      - '@fluentui/date-time-utilities!IDatepickerOptions#workWeekDays:member'
  - uid: '@fluentui/date-time-utilities!IDatepickerOptions#dateRangeType:member'
    summary: The date range type indicating how many days should be selected as the user selects days
    name: dateRangeType
    fullName: dateRangeType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dateRangeType: DateRangeType;'
      return:
        type:
          - '@fluentui/date-time-utilities!DateRangeType:enum'
  - uid: '@fluentui/date-time-utilities!IDatepickerOptions#daysToSelectInDayView:member'
    summary: The number of days to select while dateRangeType === DateRangeType.Day. Used in order to have multi-day views.
    name: daysToSelectInDayView
    fullName: daysToSelectInDayView
    langs:
      - typeScript
    type: property
    syntax:
      content: 'daysToSelectInDayView?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/date-time-utilities!IDatepickerOptions#firstDayOfWeek:member'
    summary: The first day of the week for your locale.
    name: firstDayOfWeek
    fullName: firstDayOfWeek
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstDayOfWeek: DayOfWeek;'
      return:
        type:
          - '@fluentui/date-time-utilities!DayOfWeek:enum'
  - uid: '@fluentui/date-time-utilities!IDatepickerOptions#firstWeekOfYear:member'
    summary: >-
      Defines when the first week of the year should start, FirstWeekOfYear.FirstDay, FirstWeekOfYear.FirstFullWeek or
      FirstWeekOfYear.FirstFourDayWeek are the possible values
    name: firstWeekOfYear
    fullName: firstWeekOfYear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstWeekOfYear: FirstWeekOfYear;'
      return:
        type:
          - '@fluentui/date-time-utilities!FirstWeekOfYear:enum'
  - uid: '@fluentui/date-time-utilities!IDatepickerOptions#markedDays:member'
    summary: Which days in the generated grid should be marked.
    name: markedDays
    fullName: markedDays
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markedDays?: Date[];'
      return:
        type:
          - 'Date[]'
  - uid: '@fluentui/date-time-utilities!IDatepickerOptions#showWeekNumbers:member'
    summary: Whether the calendar should show the week number (weeks 1 to 53) before each week row
    name: showWeekNumbers
    fullName: showWeekNumbers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showWeekNumbers?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/date-time-utilities!IDatepickerOptions#today:member'
    summary: 'Value of today. If null, current time in client machine will be used.'
    name: today
    fullName: today
    langs:
      - typeScript
    type: property
    syntax:
      content: 'today?: Date;'
      return:
        type:
          - Date
  - uid: '@fluentui/date-time-utilities!IDatepickerOptions#workWeekDays:member'
    summary: >-
      The days that are selectable when `dateRangeType` is WorkWeek. If `dateRangeType` is not WorkWeek this property
      does nothing.
    name: workWeekDays
    fullName: workWeekDays
    langs:
      - typeScript
    type: property
    syntax:
      content: 'workWeekDays?: DayOfWeek[];'
      return:
        type:
          - 'DayOfWeek[]'
