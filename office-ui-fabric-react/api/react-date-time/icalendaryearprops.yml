### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-date-time!ICalendarYearProps:interface'
    name: ICalendarYearProps
    fullName: ICalendarYearProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'IBaseProps<ICalendarYear> '
    package: '@fluentui/react-date-time!'
    children:
      - '@fluentui/react-date-time!ICalendarYearProps#animationDirection:member'
      - '@fluentui/react-date-time!ICalendarYearProps#className:member'
      - '@fluentui/react-date-time!ICalendarYearProps#componentRef:member'
      - '@fluentui/react-date-time!ICalendarYearProps#highlightCurrentYear:member'
      - '@fluentui/react-date-time!ICalendarYearProps#highlightSelectedYear:member'
      - '@fluentui/react-date-time!ICalendarYearProps#maxYear:member'
      - '@fluentui/react-date-time!ICalendarYearProps#minYear:member'
      - '@fluentui/react-date-time!ICalendarYearProps#navigatedYear:member'
      - '@fluentui/react-date-time!ICalendarYearProps#navigationIcons:member'
      - '@fluentui/react-date-time!ICalendarYearProps#onHeaderSelect:member'
      - '@fluentui/react-date-time!ICalendarYearProps#onRenderTitle:member'
      - '@fluentui/react-date-time!ICalendarYearProps#onRenderYear:member'
      - '@fluentui/react-date-time!ICalendarYearProps#onSelectYear:member'
      - '@fluentui/react-date-time!ICalendarYearProps#selectedYear:member'
      - '@fluentui/react-date-time!ICalendarYearProps#strings:member'
      - '@fluentui/react-date-time!ICalendarYearProps#styles:member'
      - '@fluentui/react-date-time!ICalendarYearProps#theme:member'
  - uid: '@fluentui/react-date-time!ICalendarYearProps#animationDirection:member'
    summary: 'The cardinal directions for animation to occur during transitions, either horizontal or veritcal'
    name: animationDirection
    fullName: animationDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animationDirection?: AnimationDirection;'
      return:
        type:
          - '@fluentui/react-date-time!AnimationDirection:enum'
  - uid: '@fluentui/react-date-time!ICalendarYearProps#className:member'
    summary: Accept custom classNames
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-date-time!ICalendarYearProps#componentRef:member'
    summary: >-
      Optional callback to access the ICalendarYear interface. Use this instead of ref for accessing the public methods
      and properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<ICalendarYear>;'
      return:
        type:
          - IRefObject<ICalendarYear>
  - uid: '@fluentui/react-date-time!ICalendarYearProps#highlightCurrentYear:member'
    summary: Whether the year picker should highlight the current year
    name: highlightCurrentYear
    fullName: highlightCurrentYear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightCurrentYear?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!ICalendarYearProps#highlightSelectedYear:member'
    summary: Whether the year picker should highlight the selected year
    name: highlightSelectedYear
    fullName: highlightSelectedYear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightSelectedYear?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-date-time!ICalendarYearProps#maxYear:member'
    summary: If set the Calendar will not allow navigation to or selection of a year later than this value.
    name: maxYear
    fullName: maxYear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxYear?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-date-time!ICalendarYearProps#minYear:member'
    summary: If set the Calendar will not allow navigation to or selection of a year earlier than this value.
    name: minYear
    fullName: minYear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minYear?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-date-time!ICalendarYearProps#navigatedYear:member'
    summary: The currently navigated year
    name: navigatedYear
    fullName: navigatedYear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'navigatedYear?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-date-time!ICalendarYearProps#navigationIcons:member'
    summary: Custom navigation icons.
    name: navigationIcons
    fullName: navigationIcons
    langs:
      - typeScript
    type: property
    syntax:
      content: 'navigationIcons?: ICalendarNavigationIcons;'
      return:
        type:
          - '@fluentui/react-date-time!ICalendarNavigationIcons:interface'
  - uid: '@fluentui/react-date-time!ICalendarYearProps#onHeaderSelect:member'
    summary: Callback action when the header is selected
    name: onHeaderSelect
    fullName: onHeaderSelect
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onHeaderSelect?: (focus: boolean) => void;'
      return:
        type:
          - '(focus: boolean) => void'
  - uid: '@fluentui/react-date-time!ICalendarYearProps#onRenderTitle:member'
    summary: Custom renderer for the title
    name: onRenderTitle
    fullName: onRenderTitle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderTitle?: (props: ICalendarYearHeaderProps) => React.ReactNode;'
      return:
        type:
          - '(props: ICalendarYearHeaderProps) => React.ReactNode'
  - uid: '@fluentui/react-date-time!ICalendarYearProps#onRenderYear:member'
    summary: Custom renderer for the year
    name: onRenderYear
    fullName: onRenderYear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderYear?: (year: number) => React.ReactNode;'
      return:
        type:
          - '(year: number) => React.ReactNode'
  - uid: '@fluentui/react-date-time!ICalendarYearProps#onSelectYear:member'
    summary: Callback action when a year is selected
    name: onSelectYear
    fullName: onSelectYear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onSelectYear?: (year: number) => void;'
      return:
        type:
          - '(year: number) => void'
  - uid: '@fluentui/react-date-time!ICalendarYearProps#selectedYear:member'
    summary: The currently selected year
    name: selectedYear
    fullName: selectedYear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedYear?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-date-time!ICalendarYearProps#strings:member'
    summary: Localized strings to use in the Calendar
    name: strings
    fullName: strings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strings?: ICalendarYearStrings;'
      return:
        type:
          - '@fluentui/react-date-time!ICalendarYearStrings:interface'
  - uid: '@fluentui/react-date-time!ICalendarYearProps#styles:member'
    summary: Customized styles for the calendar month component
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ICalendarYearStyleProps, ICalendarYearStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<ICalendarYearStyleProps, ICalendarYearStyles>'
  - uid: '@fluentui/react-date-time!ICalendarYearProps#theme:member'
    summary: Theme (provided through customization).
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
