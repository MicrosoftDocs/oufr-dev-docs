### YamlMime:TSPackage
uid: '@fluentui/theme!'
name: '@fluentui/theme'
type: package
summary: ''
interfaces:
  - '@fluentui/theme!ComponentStyles:interface'
  - '@fluentui/theme!IAnimationStyles:interface'
  - '@fluentui/theme!IAnimationVariables:interface'
  - '@fluentui/theme!IEffects:interface'
  - '@fluentui/theme!IFontStyles:interface'
  - '@fluentui/theme!IPalette:interface'
  - '@fluentui/theme!IPartialTheme:interface'
  - '@fluentui/theme!IScheme:interface'
  - '@fluentui/theme!ISemanticColors:interface'
  - '@fluentui/theme!ISemanticTextColors:interface'
  - '@fluentui/theme!ITheme:interface'
  - '@fluentui/theme!PartialTheme:interface'
  - '@fluentui/theme!Theme:interface'
  - '@fluentui/theme!Tokens:interface'
functions:
  - name: createFontStyles(localeCode)
    uid: '@fluentui/theme!createFontStyles:function(1)'
    package: '@fluentui/theme!'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function createFontStyles(localeCode: string | null):
        IFontStyles;
      parameters:
        - id: localeCode
          description: ''
          type: string | null
      return:
        type: '<xref uid="@fluentui/theme!IFontStyles:interface" />'
        description: ''
  - name: 'createTheme(theme, depComments)'
    uid: '@fluentui/theme!createTheme:function(1)'
    package: '@fluentui/theme!'
    summary: Creates a custom theme definition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function createTheme(theme?: PartialTheme, depComments?:
        boolean): Theme;
      parameters:
        - id: theme
          description: Partial theme object.
          type: '<xref uid="@fluentui/theme!PartialTheme:interface" />'
        - id: depComments
          description: Whether to include deprecated tags as comments for deprecated slots.
          type: boolean
      return:
        type: '<xref uid="@fluentui/theme!Theme:interface" />'
        description: ''
  - name: 'mergeThemes(theme, partialTheme)'
    uid: '@fluentui/theme!mergeThemes:function(1)'
    package: '@fluentui/theme!'
    summary: >-
      Merge a partial/full theme into a full theme and returns a merged full
      theme.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeThemes(theme: Theme, partialTheme?:
        PartialTheme): Theme;
      parameters:
        - id: theme
          description: ''
          type: '<xref uid="@fluentui/theme!Theme:interface" />'
        - id: partialTheme
          description: ''
          type: '<xref uid="@fluentui/theme!PartialTheme:interface" />'
      return:
        type: '<xref uid="@fluentui/theme!Theme:interface" />'
        description: ''
  - name: registerDefaultFontFaces(baseUrl)
    uid: '@fluentui/theme!registerDefaultFontFaces:function(1)'
    package: '@fluentui/theme!'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'export declare function registerDefaultFontFaces(baseUrl: string): void;'
      parameters:
        - id: baseUrl
          description: ''
          type: string
      return:
        type: void
        description: ''
