### YamlMime:TSType
name: BaseButton
uid: '@fluentui/react!BaseButton:class'
package: '@fluentui/react!'
fullName: BaseButton
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: (constructor)(props)
    uid: '@fluentui/react!BaseButton:constructor(1)'
    package: '@fluentui/react!'
    fullName: (constructor)(props)
    summary: Constructs a new instance of the `BaseButton` class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constructor(props: IBaseButtonProps);'
      parameters:
        - id: props
          description: ''
          type: IBaseButtonProps
properties:
  - name: defaultProps
    uid: '@fluentui/react!BaseButton.defaultProps:member'
    package: '@fluentui/react!'
    fullName: defaultProps
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static defaultProps: Partial<IBaseButtonProps>;'
      return:
        type: Partial&lt;IBaseButtonProps&gt;
methods:
  - name: componentDidMount()
    uid: '@fluentui/react!BaseButton#componentDidMount:member(1)'
    package: '@fluentui/react!'
    fullName: componentDidMount()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type: void
        description: ''
  - name: 'componentDidUpdate(prevProps, prevState)'
    uid: '@fluentui/react!BaseButton#componentDidUpdate:member(1)'
    package: '@fluentui/react!'
    fullName: 'componentDidUpdate(prevProps, prevState)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        componentDidUpdate(prevProps: IBaseButtonProps, prevState:
        IBaseButtonState): void;
      parameters:
        - id: prevProps
          description: ''
          type: IBaseButtonProps
        - id: prevState
          description: ''
          type: IBaseButtonState
      return:
        type: void
        description: ''
  - name: componentWillUnmount()
    uid: '@fluentui/react!BaseButton#componentWillUnmount:member(1)'
    package: '@fluentui/react!'
    fullName: componentWillUnmount()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type: void
        description: ''
  - name: dismissMenu()
    uid: '@fluentui/react!BaseButton#dismissMenu:member(1)'
    package: '@fluentui/react!'
    fullName: dismissMenu()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dismissMenu(): void;'
      return:
        type: void
        description: ''
  - name: focus()
    uid: '@fluentui/react!BaseButton#focus:member(1)'
    package: '@fluentui/react!'
    fullName: focus()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'focus(): void;'
      return:
        type: void
        description: ''
  - name: 'openMenu(shouldFocusOnContainer, shouldFocusOnMount)'
    uid: '@fluentui/react!BaseButton#openMenu:member(1)'
    package: '@fluentui/react!'
    fullName: 'openMenu(shouldFocusOnContainer, shouldFocusOnMount)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        openMenu(shouldFocusOnContainer?: boolean, shouldFocusOnMount?:
        boolean): void;
      parameters:
        - id: shouldFocusOnContainer
          description: ''
          type: boolean
        - id: shouldFocusOnMount
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: render()
    uid: '@fluentui/react!BaseButton#render:member(1)'
    package: '@fluentui/react!'
    fullName: render()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type: JSX.Element
        description: ''
extends: 'React.Component&lt;IBaseButtonProps, IBaseButtonState&gt; '
