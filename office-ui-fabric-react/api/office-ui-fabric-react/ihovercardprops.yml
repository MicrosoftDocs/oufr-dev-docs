### YamlMime:TSType
name: IHoverCardProps
uid: 'office-ui-fabric-react!IHoverCardProps:interface'
package: office-ui-fabric-react!
fullName: IHoverCardProps
summary: HoverCard component props.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: cardDismissDelay
    uid: 'office-ui-fabric-react!IHoverCardProps#cardDismissDelay:member'
    package: office-ui-fabric-react!
    fullName: cardDismissDelay
    summary: >-
      Length of card dismiss delay. A min number is necessary for pointer to hop
      between target and card
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cardDismissDelay?: number;'
      return:
        type: number
  - name: cardOpenDelay
    uid: 'office-ui-fabric-react!IHoverCardProps#cardOpenDelay:member'
    package: office-ui-fabric-react!
    fullName: cardOpenDelay
    summary: Length of compact card delay
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cardOpenDelay?: number;'
      return:
        type: number
  - name: className
    uid: 'office-ui-fabric-react!IHoverCardProps#className:member'
    package: office-ui-fabric-react!
    fullName: className
    summary: Additional CSS class(es) to apply to the HoverCard root element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: 'office-ui-fabric-react!IHoverCardProps#componentRef:member'
    package: office-ui-fabric-react!
    fullName: componentRef
    summary: >-
      Optional callback to access the IHoverCardHost interface. Use this instead
      of ref for accessing the public methods and properties of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IHoverCard>;'
      return:
        type: IRefObject&lt;IHoverCard&gt;
  - name: eventListenerTarget
    uid: 'office-ui-fabric-react!IHoverCardProps#eventListenerTarget:member'
    package: office-ui-fabric-react!
    fullName: eventListenerTarget
    summary: >-
      This prop is to separate the target to anchor hover card from the target
      to attach event listener. If set, this prop separates the target to anchor
      the hover card from the target to attach the event listener. When no
      `eventListenerTarget` given, HoverCard will use `target` prop or its root
      to set event listener.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'eventListenerTarget?: HTMLElement | string | null;'
      return:
        type: HTMLElement | string | null
  - name: expandedCardOpenDelay
    uid: 'office-ui-fabric-react!IHoverCardProps#expandedCardOpenDelay:member'
    package: office-ui-fabric-react!
    fullName: expandedCardOpenDelay
    summary: Time in ms when expanded card should open after compact card
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'expandedCardOpenDelay?: number;'
      return:
        type: number
  - name: expandingCardProps
    uid: 'office-ui-fabric-react!IHoverCardProps#expandingCardProps:member'
    package: office-ui-fabric-react!
    fullName: expandingCardProps
    summary: >-
      Additional ExpandingCard props to pass through HoverCard like renderers,
      target. gapSpace etc. Used along with 'type' prop set to
      HoverCardType.expanding. Reference detail properties in ICardProps and
      IExpandingCardProps.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'expandingCardProps?: IExpandingCardProps;'
      return:
        type: IExpandingCardProps
  - name: instantOpenOnClick
    uid: 'office-ui-fabric-react!IHoverCardProps#instantOpenOnClick:member'
    package: office-ui-fabric-react!
    fullName: instantOpenOnClick
    summary: Enables instant open of the full card upon click
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'instantOpenOnClick?: boolean;'
      return:
        type: boolean
  - name: onCardExpand
    uid: 'office-ui-fabric-react!IHoverCardProps#onCardExpand:member'
    package: office-ui-fabric-react!
    fullName: onCardExpand
    summary: Callback when visible card is expanded.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCardExpand?: () => void;'
      return:
        type: () =&gt; void
  - name: onCardHide
    uid: 'office-ui-fabric-react!IHoverCardProps#onCardHide:member'
    package: office-ui-fabric-react!
    fullName: onCardHide
    summary: Callback when card hides
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCardHide?: () => void;'
      return:
        type: () =&gt; void
  - name: onCardVisible
    uid: 'office-ui-fabric-react!IHoverCardProps#onCardVisible:member'
    package: office-ui-fabric-react!
    fullName: onCardVisible
    summary: Callback when card becomes visible
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCardVisible?: () => void;'
      return:
        type: () =&gt; void
  - name: openHotKey
    uid: 'office-ui-fabric-react!IHoverCardProps#openHotKey:member'
    package: office-ui-fabric-react!
    fullName: openHotKey
    summary: HotKey used for opening the HoverCard when tabbed to target.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'openHotKey?: KeyCodes;'
      return:
        type: KeyCodes
  - name: plainCardProps
    uid: 'office-ui-fabric-react!IHoverCardProps#plainCardProps:member'
    package: office-ui-fabric-react!
    fullName: plainCardProps
    summary: >-
      Additional PlainCard props to pass through HoverCard like renderers,
      target, gapSpace etc. Used along with 'type' prop set to
      HoverCardType.plain. See for more details ICardProps and IPlainCardProps
      interfaces.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'plainCardProps?: IPlainCardProps;'
      return:
        type: IPlainCardProps
  - name: setAriaDescribedBy
    uid: 'office-ui-fabric-react!IHoverCardProps#setAriaDescribedBy:member'
    package: office-ui-fabric-react!
    fullName: setAriaDescribedBy
    summary: >-
      Whether or not to mark the container as described by the hover card. If
      not specified, the caller should mark as element as described by the hover
      card id.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setAriaDescribedBy?: boolean;'
      return:
        type: boolean
  - name: setInitialFocus
    uid: 'office-ui-fabric-react!IHoverCardProps#setInitialFocus:member'
    package: office-ui-fabric-react!
    fullName: setInitialFocus
    summary: >-
      Set to true to set focus on the first focusable element in the card. Works
      in pair with the 'trapFocus' prop.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setInitialFocus?: boolean;'
      return:
        type: boolean
  - name: shouldBlockHoverCard
    uid: 'office-ui-fabric-react!IHoverCardProps#shouldBlockHoverCard:member'
    package: office-ui-fabric-react!
    fullName: shouldBlockHoverCard
    summary: Should block hover card or not
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'shouldBlockHoverCard?: () => void;'
      return:
        type: () =&gt; void
  - name: sticky
    uid: 'office-ui-fabric-react!IHoverCardProps#sticky:member'
    package: office-ui-fabric-react!
    fullName: sticky
    summary: >-
      If true disables Card dismiss upon mouse leave, so that card sticks
      around.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sticky?: boolean;'
      return:
        type: boolean
  - name: styles
    uid: 'office-ui-fabric-react!IHoverCardProps#styles:member'
    package: office-ui-fabric-react!
    fullName: styles
    summary: Custom styles for this component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IHoverCardStyleProps, IHoverCardStyles>;'
      return:
        type: 'IStyleFunctionOrObject&lt;IHoverCardStyleProps, IHoverCardStyles&gt;'
  - name: target
    uid: 'office-ui-fabric-react!IHoverCardProps#target:member'
    package: office-ui-fabric-react!
    fullName: target
    summary: >-
      Optional target element to tag hover card on. If not provided and using
      HoverCard as a wrapper, don't set the 'data-is-focusable=true' attribute
      to the root of the wrapped child. If no target is given, HoverCard will
      use its root as a target and become the focusable element with a focus
      listener attached to it.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'target?: HTMLElement | string | null;'
      return:
        type: HTMLElement | string | null
  - name: theme
    uid: 'office-ui-fabric-react!IHoverCardProps#theme:member'
    package: office-ui-fabric-react!
    fullName: theme
    summary: Theme provided by higher order component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
  - name: trapFocus
    uid: 'office-ui-fabric-react!IHoverCardProps#trapFocus:member'
    package: office-ui-fabric-react!
    fullName: trapFocus
    summary: >-
      Set to true if you want to render the content of the HoverCard in a
      FocusTrapZone for accessibility reasons. Optionally 'setInitialFocus' prop
      can be set to true to move focus inside the FocusTrapZone.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'trapFocus?: boolean;'
      return:
        type: boolean
  - name: type
    uid: 'office-ui-fabric-react!IHoverCardProps#type:member'
    package: office-ui-fabric-react!
    fullName: type
    summary: Type of the hover card to render.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type?: HoverCardType;'
      return:
        type: HoverCardType
extends: 'React.HTMLAttributes&lt;HTMLDivElement&gt; '
