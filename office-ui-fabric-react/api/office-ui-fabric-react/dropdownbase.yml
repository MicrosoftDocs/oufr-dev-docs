### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!DropdownBase:class'
    name: DropdownBase
    fullName: DropdownBase
    langs:
      - typeScript
    type: class
    extends:
      - 'React.Component<IDropdownInternalProps, IDropdownState> '
    implements:
      - 'IDropdown '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!DropdownBase:constructor(1)'
      - 'office-ui-fabric-react!DropdownBase#componentDidUpdate:member(1)'
      - 'office-ui-fabric-react!DropdownBase#componentWillUnmount:member(1)'
      - 'office-ui-fabric-react!DropdownBase.defaultProps:member'
      - 'office-ui-fabric-react!DropdownBase#focus:member(1)'
      - 'office-ui-fabric-react!DropdownBase#render:member(1)'
      - 'office-ui-fabric-react!DropdownBase#selectedOptions:member'
      - 'office-ui-fabric-react!DropdownBase#setSelectedIndex:member(1)'
      - 'office-ui-fabric-react!DropdownBase#UNSAFE_componentWillReceiveProps:member(1)'
  - uid: 'office-ui-fabric-react!DropdownBase:constructor(1)'
    summary: Constructs a new instance of the `DropdownBase` class
    name: (constructor)(props)
    fullName: (constructor)(props)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(props: IDropdownProps);'
      parameters:
        - id: props
          description: ''
          type:
            - IDropdownProps
  - uid: 'office-ui-fabric-react!DropdownBase#componentDidUpdate:member(1)'
    name: 'componentDidUpdate(prevProps, prevState)'
    fullName: 'componentDidUpdate(prevProps, prevState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidUpdate(prevProps: IDropdownProps, prevState: IDropdownState): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: prevProps
          description: ''
          type:
            - IDropdownProps
        - id: prevState
          description: ''
          type:
            - 'office-ui-fabric-react!IDropdownState:interface'
  - uid: 'office-ui-fabric-react!DropdownBase#componentWillUnmount:member(1)'
    name: componentWillUnmount()
    fullName: componentWillUnmount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!DropdownBase.defaultProps:member'
    name: defaultProps
    fullName: defaultProps
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        static defaultProps: {
                options: any[];
            };
      return:
        type:
          - |-
            {
                    options: any[];
                }
  - uid: 'office-ui-fabric-react!DropdownBase#focus:member(1)'
    name: focus(shouldOpenOnFocus)
    fullName: focus(shouldOpenOnFocus)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focus(shouldOpenOnFocus?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: shouldOpenOnFocus
          description: ''
          type:
            - boolean
  - uid: 'office-ui-fabric-react!DropdownBase#render:member(1)'
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
  - uid: 'office-ui-fabric-react!DropdownBase#selectedOptions:member'
    summary: All selected options
    name: selectedOptions
    fullName: selectedOptions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly selectedOptions: IDropdownOption[];'
      return:
        type:
          - 'IDropdownOption[]'
  - uid: 'office-ui-fabric-react!DropdownBase#setSelectedIndex:member(1)'
    name: 'setSelectedIndex(event, index)'
    fullName: 'setSelectedIndex(event, index)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedIndex(event: React.FormEvent<HTMLDivElement>, index: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: event
          description: ''
          type:
            - React.FormEvent<HTMLDivElement>
        - id: index
          description: ''
          type:
            - number
  - uid: 'office-ui-fabric-react!DropdownBase#UNSAFE_componentWillReceiveProps:member(1)'
    name: UNSAFE_componentWillReceiveProps(newProps)
    fullName: UNSAFE_componentWillReceiveProps(newProps)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'UNSAFE_componentWillReceiveProps(newProps: IDropdownProps): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newProps
          description: ''
          type:
            - IDropdownProps
