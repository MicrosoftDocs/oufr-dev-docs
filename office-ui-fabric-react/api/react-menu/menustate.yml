### YamlMime:TSType
name: MenuState
uid: '@fluentui/react-menu!MenuState:interface'
package: '@fluentui/react-menu!'
fullName: MenuState
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: menuList
    uid: '@fluentui/react-menu!MenuState#menuList:member'
    package: '@fluentui/react-menu!'
    fullName: menuList
    summary: Internal react node that just simplifies handling children
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'menuList: React.ReactNode;'
      return:
        type: React.ReactNode
  - name: menuPopup
    uid: '@fluentui/react-menu!MenuState#menuPopup:member'
    package: '@fluentui/react-menu!'
    fullName: menuPopup
    summary: Wrapper to style and add events for the popup
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'menuPopup: ObjectShorthandProps<React.HTMLAttributes<HTMLElement>>;'
      return:
        type: ObjectShorthandProps&lt;React.HTMLAttributes&lt;HTMLElement&gt;&gt;
  - name: menuTrigger
    uid: '@fluentui/react-menu!MenuState#menuTrigger:member'
    package: '@fluentui/react-menu!'
    fullName: menuTrigger
    summary: Internal react node that just simplifies handling children
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'menuTrigger: React.ReactNode;'
      return:
        type: React.ReactNode
  - name: open
    uid: '@fluentui/react-menu!MenuState#open:member'
    package: '@fluentui/react-menu!'
    fullName: open
    summary: Whether the popup is open
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'open: boolean;'
      return:
        type: boolean
  - name: ref
    uid: '@fluentui/react-menu!MenuState#ref:member'
    package: '@fluentui/react-menu!'
    fullName: ref
    summary: Ref to the root slot
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ref: React.MutableRefObject<HTMLElement>;'
      return:
        type: React.MutableRefObject&lt;HTMLElement&gt;
  - name: setOpen
    uid: '@fluentui/react-menu!MenuState#setOpen:member'
    package: '@fluentui/react-menu!'
    fullName: setOpen
    summary: Callback to open/close the popup
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setOpen: React.Dispatch<React.SetStateAction<boolean>>;'
      return:
        type: React.Dispatch&lt;React.SetStateAction&lt;boolean&gt;&gt;
extends: '<xref uid="@fluentui/react-menu!MenuProps:interface" />'
