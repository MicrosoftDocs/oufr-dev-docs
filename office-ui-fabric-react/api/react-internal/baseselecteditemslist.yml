### YamlMime:TSType
name: BaseSelectedItemsList
uid: '@fluentui/react-internal!BaseSelectedItemsList:class'
package: '@fluentui/react-internal!'
fullName: BaseSelectedItemsList
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: (constructor)(basePickerProps)
    uid: '@fluentui/react-internal!BaseSelectedItemsList:constructor(1)'
    package: '@fluentui/react-internal!'
    fullName: (constructor)(basePickerProps)
    summary: Constructs a new instance of the `BaseSelectedItemsList` class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constructor(basePickerProps: P);'
      parameters:
        - id: basePickerProps
          description: ''
          type: P
properties:
  - name: addItems
    uid: '@fluentui/react-internal!BaseSelectedItemsList#addItems:member'
    package: '@fluentui/react-internal!'
    fullName: addItems
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'addItems: (items: T[]) => void;'
      return:
        type: '(items: T[]) =&gt; void'
  - name: items
    uid: '@fluentui/react-internal!BaseSelectedItemsList#items:member'
    package: '@fluentui/react-internal!'
    fullName: items
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'get items(): T[];'
      return:
        type: 'T[]'
  - name: onCopy
    uid: '@fluentui/react-internal!BaseSelectedItemsList#onCopy:member'
    package: '@fluentui/react-internal!'
    fullName: onCopy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCopy: (ev: React.ClipboardEvent<HTMLElement>) => void;'
      return:
        type: '(ev: React.ClipboardEvent&lt;HTMLElement&gt;) =&gt; void'
  - name: onItemChange
    uid: '@fluentui/react-internal!BaseSelectedItemsList#onItemChange:member'
    package: '@fluentui/react-internal!'
    fullName: onItemChange
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onItemChange: (changedItem: T, index: number) => void;'
      return:
        type: '(changedItem: T, index: number) =&gt; void'
  - name: onSelectionChanged
    uid: '@fluentui/react-internal!BaseSelectedItemsList#onSelectionChanged:member'
    package: '@fluentui/react-internal!'
    fullName: onSelectionChanged
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onSelectionChanged: () => void;'
      return:
        type: () =&gt; void
  - name: removeItem
    uid: '@fluentui/react-internal!BaseSelectedItemsList#removeItem:member'
    package: '@fluentui/react-internal!'
    fullName: removeItem
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'removeItem: (item: T) => void;'
      return:
        type: '(item: T) =&gt; void'
  - name: removeItemAt
    uid: '@fluentui/react-internal!BaseSelectedItemsList#removeItemAt:member'
    package: '@fluentui/react-internal!'
    fullName: removeItemAt
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'removeItemAt: (index: number) => void;'
      return:
        type: '(index: number) =&gt; void'
  - name: removeItems
    uid: '@fluentui/react-internal!BaseSelectedItemsList#removeItems:member'
    package: '@fluentui/react-internal!'
    fullName: removeItems
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'removeItems: (itemsToRemove: any[]) => void;'
      return:
        type: '(itemsToRemove: any[]) =&gt; void'
  - name: renderItems
    uid: '@fluentui/react-internal!BaseSelectedItemsList#renderItems:member'
    package: '@fluentui/react-internal!'
    fullName: renderItems
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected renderItems: () => JSX.Element[];'
      return:
        type: '() =&gt; JSX.Element[]'
  - name: replaceItem
    uid: '@fluentui/react-internal!BaseSelectedItemsList#replaceItem:member'
    package: '@fluentui/react-internal!'
    fullName: replaceItem
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'replaceItem: (itemToReplace: T, itemsToReplaceWith: T[]) => void;'
      return:
        type: '(itemToReplace: T, itemsToReplaceWith: T[]) =&gt; void'
  - name: root
    uid: '@fluentui/react-internal!BaseSelectedItemsList#root:member'
    package: '@fluentui/react-internal!'
    fullName: root
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected root: HTMLElement;'
      return:
        type: HTMLElement
  - name: selection
    uid: '@fluentui/react-internal!BaseSelectedItemsList#selection:member'
    package: '@fluentui/react-internal!'
    fullName: selection
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected get selection(): Selection;'
      return:
        type: '<xref uid="@fluentui/utilities!Selection:class" />'
methods:
  - name: componentDidMount()
    uid: '@fluentui/react-internal!BaseSelectedItemsList#componentDidMount:member(1)'
    package: '@fluentui/react-internal!'
    fullName: componentDidMount()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type: void
        description: ''
  - name: 'componentDidUpdate(oldProps, oldState)'
    uid: >-
      @fluentui/react-internal!BaseSelectedItemsList#componentDidUpdate:member(1)
    package: '@fluentui/react-internal!'
    fullName: 'componentDidUpdate(oldProps, oldState)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        componentDidUpdate(oldProps: P, oldState:
        IBaseSelectedItemsListState<IObjectWithKey>): void;
      parameters:
        - id: oldProps
          description: ''
          type: P
        - id: oldState
          description: ''
          type: IBaseSelectedItemsListState&lt;IObjectWithKey&gt;
      return:
        type: void
        description: ''
  - name: copyItems(items)
    uid: '@fluentui/react-internal!BaseSelectedItemsList#copyItems:member(1)'
    package: '@fluentui/react-internal!'
    fullName: copyItems(items)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected copyItems(items: T[]): void;'
      parameters:
        - id: items
          description: ''
          type: 'T[]'
      return:
        type: void
        description: ''
  - name: getDerivedStateFromProps(newProps)
    uid: >-
      @fluentui/react-internal!BaseSelectedItemsList.getDerivedStateFromProps:member(1)
    package: '@fluentui/react-internal!'
    fullName: getDerivedStateFromProps(newProps)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static getDerivedStateFromProps(newProps:
        IBaseSelectedItemsListProps<any>): {
                items: any[];
            } | null;
      parameters:
        - id: newProps
          description: ''
          type: IBaseSelectedItemsListProps&lt;any&gt;
      return:
        type: |-
          {
                  items: any[];
              } | null
        description: ''
  - name: hasSelectedItems()
    uid: '@fluentui/react-internal!BaseSelectedItemsList#hasSelectedItems:member(1)'
    package: '@fluentui/react-internal!'
    fullName: hasSelectedItems()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hasSelectedItems(): boolean;'
      return:
        type: boolean
        description: ''
  - name: highlightedItems()
    uid: '@fluentui/react-internal!BaseSelectedItemsList#highlightedItems:member(1)'
    package: '@fluentui/react-internal!'
    fullName: highlightedItems()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'highlightedItems(): T[];'
      return:
        type: 'T[]'
        description: ''
  - name: onChange(items)
    uid: '@fluentui/react-internal!BaseSelectedItemsList#onChange:member(1)'
    package: '@fluentui/react-internal!'
    fullName: onChange(items)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onChange(items?: T[]): void;'
      parameters:
        - id: items
          description: ''
          type: 'T[]'
      return:
        type: void
        description: ''
  - name: removeSelectedItems()
    uid: >-
      @fluentui/react-internal!BaseSelectedItemsList#removeSelectedItems:member(1)
    package: '@fluentui/react-internal!'
    fullName: removeSelectedItems()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'removeSelectedItems(): void;'
      return:
        type: void
        description: ''
  - name: render()
    uid: '@fluentui/react-internal!BaseSelectedItemsList#render:member(1)'
    package: '@fluentui/react-internal!'
    fullName: render()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'render(): any;'
      return:
        type: any
        description: ''
  - name: unselectAll()
    uid: '@fluentui/react-internal!BaseSelectedItemsList#unselectAll:member(1)'
    package: '@fluentui/react-internal!'
    fullName: unselectAll()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'unselectAll(): void;'
      return:
        type: void
        description: ''
  - name: 'updateItems(items, focusIndex)'
    uid: '@fluentui/react-internal!BaseSelectedItemsList#updateItems:member(1)'
    package: '@fluentui/react-internal!'
    fullName: 'updateItems(items, focusIndex)'
    summary: >-
      Controls what happens whenever there is an action that impacts the
      selected items. If selectedItems is provided, this will act as a
      controlled component and will not update its own state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'updateItems(items: T[], focusIndex?: number): void;'
      parameters:
        - id: items
          description: ''
          type: 'T[]'
        - id: focusIndex
          description: ''
          type: number
      return:
        type: void
        description: ''
extends: 'React.Component&lt;P, IBaseSelectedItemsListState&lt;T&gt;&gt; '
