### YamlMime:TSType
name: IDetailsListProps
uid: 'office-ui-fabric-react!IDetailsListProps:interface'
package: office-ui-fabric-react!
fullName: IDetailsListProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: ariaLabel
    uid: 'office-ui-fabric-react!IDetailsListProps#ariaLabel:member'
    package: office-ui-fabric-react!
    fullName: ariaLabel
    summary: Accessible label describing or summarizing the list.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type: string
  - name: ariaLabelForGrid
    uid: 'office-ui-fabric-react!IDetailsListProps#ariaLabelForGrid:member'
    package: office-ui-fabric-react!
    fullName: ariaLabelForGrid
    summary: Accessible label for the grid within the list.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabelForGrid?: string;'
      return:
        type: string
  - name: ariaLabelForListHeader
    uid: 'office-ui-fabric-react!IDetailsListProps#ariaLabelForListHeader:member'
    package: office-ui-fabric-react!
    fullName: ariaLabelForListHeader
    summary: Accessible label for the list header.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabelForListHeader?: string;'
      return:
        type: string
  - name: ariaLabelForSelectAllCheckbox
    uid: >-
      office-ui-fabric-react!IDetailsListProps#ariaLabelForSelectAllCheckbox:member
    package: office-ui-fabric-react!
    fullName: ariaLabelForSelectAllCheckbox
    summary: Accessible label for the select all checkbox.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabelForSelectAllCheckbox?: string;'
      return:
        type: string
  - name: ariaLabelForSelectionColumn
    uid: >-
      office-ui-fabric-react!IDetailsListProps#ariaLabelForSelectionColumn:member
    package: office-ui-fabric-react!
    fullName: ariaLabelForSelectionColumn
    summary: Accessible label for the name of the selection column.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabelForSelectionColumn?: string;'
      return:
        type: string
  - name: cellStyleProps
    uid: 'office-ui-fabric-react!IDetailsListProps#cellStyleProps:member'
    package: office-ui-fabric-react!
    fullName: cellStyleProps
    summary: >-
      Props impacting the render style of cells. Since these have an impact on
      calculated column widths, they are handled separately from normal theme
      styling, but they are passed to the styling system.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellStyleProps?: ICellStyleProps;'
      return:
        type: ICellStyleProps
  - name: checkboxCellClassName
    uid: 'office-ui-fabric-react!IDetailsListProps#checkboxCellClassName:member'
    package: office-ui-fabric-react!
    fullName: checkboxCellClassName
    summary: Class name to add to the cell of a checkbox.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checkboxCellClassName?: string;'
      return:
        type: string
  - name: checkboxVisibility
    uid: 'office-ui-fabric-react!IDetailsListProps#checkboxVisibility:member'
    package: office-ui-fabric-react!
    fullName: checkboxVisibility
    summary: Controls the visibility of selection check box.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checkboxVisibility?: CheckboxVisibility;'
      return:
        type: CheckboxVisibility
  - name: checkButtonAriaLabel
    uid: 'office-ui-fabric-react!IDetailsListProps#checkButtonAriaLabel:member'
    package: office-ui-fabric-react!
    fullName: checkButtonAriaLabel
    summary: Accessible label for the check button.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checkButtonAriaLabel?: string;'
      return:
        type: string
  - name: className
    uid: 'office-ui-fabric-react!IDetailsListProps#className:member'
    package: office-ui-fabric-react!
    fullName: className
    summary: Class name to add to the root element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: columnReorderOptions
    uid: 'office-ui-fabric-react!IDetailsListProps#columnReorderOptions:member'
    package: office-ui-fabric-react!
    fullName: columnReorderOptions
    summary: Options for column reordering using drag and drop.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'columnReorderOptions?: IColumnReorderOptions;'
      return:
        type: IColumnReorderOptions
  - name: columns
    uid: 'office-ui-fabric-react!IDetailsListProps#columns:member'
    package: office-ui-fabric-react!
    fullName: columns
    summary: >-
      column defitions. If none are provided, default columns will be created
      based on the items' properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'columns?: IColumn[];'
      return:
        type: 'IColumn[]'
  - name: compact
    uid: 'office-ui-fabric-react!IDetailsListProps#compact:member'
    package: office-ui-fabric-react!
    fullName: compact
    summary: Whether to render in compact mode.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'compact?: boolean;'
      return:
        type: boolean
  - name: componentRef
    uid: 'office-ui-fabric-react!IDetailsListProps#componentRef:member'
    package: office-ui-fabric-react!
    fullName: componentRef
    summary: >-
      Callback to access the IDetailsList interface. Use this instead of ref for
      accessing the public methods and properties of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IDetailsList>;'
      return:
        type: IRefObject&lt;IDetailsList&gt;
  - name: constrainMode
    uid: 'office-ui-fabric-react!IDetailsListProps#constrainMode:member'
    package: office-ui-fabric-react!
    fullName: constrainMode
    summary: Controls how the list contrains overflow.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constrainMode?: ConstrainMode;'
      return:
        type: ConstrainMode
  - name: disableSelectionZone
    uid: 'office-ui-fabric-react!IDetailsListProps#disableSelectionZone:member'
    package: office-ui-fabric-react!
    fullName: disableSelectionZone
    summary: >-
      Whether to disable the built-in SelectionZone, so the host component can
      provide its own.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disableSelectionZone?: boolean;'
      return:
        type: boolean
  - name: dragDropEvents
    uid: 'office-ui-fabric-react!IDetailsListProps#dragDropEvents:member'
    package: office-ui-fabric-react!
    fullName: dragDropEvents
    summary: Map of callback functions related to row drag and drop functionality.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dragDropEvents?: IDragDropEvents;'
      return:
        type: IDragDropEvents
  - name: enableUpdateAnimations
    uid: 'office-ui-fabric-react!IDetailsListProps#enableUpdateAnimations:member'
    package: office-ui-fabric-react!
    fullName: enableUpdateAnimations
    summary: Whether to animate updates
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableUpdateAnimations?: boolean;'
      return:
        type: boolean
  - name: enterModalSelectionOnTouch
    uid: 'office-ui-fabric-react!IDetailsListProps#enterModalSelectionOnTouch:member'
    package: office-ui-fabric-react!
    fullName: enterModalSelectionOnTouch
    summary: Whether the selection zone should enter modal state on touch.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterModalSelectionOnTouch?: boolean;'
      return:
        type: boolean
  - name: getCellValueKey
    uid: 'office-ui-fabric-react!IDetailsListProps#getCellValueKey:member'
    package: office-ui-fabric-react!
    fullName: getCellValueKey
    summary: >-
      If provided, will be the "default" item column cell value return. A
      column's `getValueKey` can override `getCellValueKey`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getCellValueKey?: (item?: any, index?: number, column?: IColumn) =>
        string;
      return:
        type: '(item?: any, index?: number, column?: IColumn) =&gt; string'
  - name: getGroupHeight
    uid: 'office-ui-fabric-react!IDetailsListProps#getGroupHeight:member'
    package: office-ui-fabric-react!
    fullName: getGroupHeight
    summary: >-
      Callback to override default group height calculation used by list
      virtualization.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGroupHeight?: IGroupedListProps[''getGroupHeight''];'
      return:
        type: 'IGroupedListProps[''getGroupHeight'']'
  - name: getKey
    uid: 'office-ui-fabric-react!IDetailsListProps#getKey:member'
    package: office-ui-fabric-react!
    fullName: getKey
    summary: >-
      Callback to get the item key, to be used in the selection and on render.
      Must be provided if sorting or filtering is enabled.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getKey?: (item: any, index?: number) => string;'
      return:
        type: '(item: any, index?: number) =&gt; string'
  - name: getRowAriaDescribedBy
    uid: 'office-ui-fabric-react!IDetailsListProps#getRowAriaDescribedBy:member'
    package: office-ui-fabric-react!
    fullName: getRowAriaDescribedBy
    summary: >-
      Callback to get the aria-describedby IDs (space-separated strings) of
      elements that describe the item.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRowAriaDescribedBy?: (item: any) => string;'
      return:
        type: '(item: any) =&gt; string'
  - name: getRowAriaLabel
    uid: 'office-ui-fabric-react!IDetailsListProps#getRowAriaLabel:member'
    package: office-ui-fabric-react!
    fullName: getRowAriaLabel
    summary: Callback to get the aria-label string for a given item.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRowAriaLabel?: (item: any) => string;'
      return:
        type: '(item: any) =&gt; string'
  - name: groupProps
    uid: 'office-ui-fabric-react!IDetailsListProps#groupProps:member'
    package: office-ui-fabric-react!
    fullName: groupProps
    summary: Override properties to render groups.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'groupProps?: IDetailsGroupRenderProps;'
      return:
        type: IDetailsGroupRenderProps
  - name: groups
    uid: 'office-ui-fabric-react!IDetailsListProps#groups:member'
    package: office-ui-fabric-react!
    fullName: groups
    summary: Grouping instructions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'groups?: IGroup[];'
      return:
        type: 'IGroup[]'
  - name: indentWidth
    uid: 'office-ui-fabric-react!IDetailsListProps#indentWidth:member'
    package: office-ui-fabric-react!
    fullName: indentWidth
    summary: Override for the indent width used for group nesting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'indentWidth?: number;'
      return:
        type: number
  - name: initialFocusedIndex
    uid: 'office-ui-fabric-react!IDetailsListProps#initialFocusedIndex:member'
    package: office-ui-fabric-react!
    fullName: initialFocusedIndex
    summary: >-
      Default index to set focus to once the items have rendered and the index
      exists.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'initialFocusedIndex?: number;'
      return:
        type: number
  - name: isHeaderVisible
    uid: 'office-ui-fabric-react!IDetailsListProps#isHeaderVisible:member'
    package: office-ui-fabric-react!
    fullName: isHeaderVisible
    summary: Controls the visibility of the header.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isHeaderVisible?: boolean;'
      return:
        type: boolean
  - name: isPlaceholderData
    uid: 'office-ui-fabric-react!IDetailsListProps#isPlaceholderData:member'
    package: office-ui-fabric-react!
    fullName: isPlaceholderData
    summary: >-
      Set this to true to indicate that the items being displayed are
      placeholder data.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isPlaceholderData?: boolean;'
      return:
        type: boolean
  - name: items
    uid: 'office-ui-fabric-react!IDetailsListProps#items:member'
    package: office-ui-fabric-react!
    fullName: items
    summary: The items to render.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'items: any[];'
      return:
        type: 'any[]'
  - name: layoutMode
    uid: 'office-ui-fabric-react!IDetailsListProps#layoutMode:member'
    package: office-ui-fabric-react!
    fullName: layoutMode
    summary: Controls how the columns are adjusted.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'layoutMode?: DetailsListLayoutMode;'
      return:
        type: DetailsListLayoutMode
  - name: listProps
    uid: 'office-ui-fabric-react!IDetailsListProps#listProps:member'
    package: office-ui-fabric-react!
    fullName: listProps
    summary: Properties to pass through to the List components being rendered.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'listProps?: IListProps;'
      return:
        type: IListProps
  - name: minimumPixelsForDrag
    uid: 'office-ui-fabric-react!IDetailsListProps#minimumPixelsForDrag:member'
    package: office-ui-fabric-react!
    fullName: minimumPixelsForDrag
    summary: The minimum mouse move distance to interpret the action as drag event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minimumPixelsForDrag?: number;'
      return:
        type: number
  - name: onActiveItemChanged
    uid: 'office-ui-fabric-react!IDetailsListProps#onActiveItemChanged:member'
    package: office-ui-fabric-react!
    fullName: onActiveItemChanged
    summary: >-
      Callback for when an item in the list becomes active by clicking anywhere
      inside the row or navigating to it with the keyboard.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onActiveItemChanged?: (item?: any, index?: number, ev?:
        React.FocusEvent<HTMLElement>) => void;
      return:
        type: >-
          (item?: any, index?: number, ev?: React.FocusEvent&lt;HTMLElement&gt;)
          =&gt; void
  - name: onColumnHeaderClick
    uid: 'office-ui-fabric-react!IDetailsListProps#onColumnHeaderClick:member'
    package: office-ui-fabric-react!
    fullName: onColumnHeaderClick
    summary: Callback for when the user clicks on the column header.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onColumnHeaderClick?: (ev?: React.MouseEvent<HTMLElement>, column?:
        IColumn) => void;
      return:
        type: >-
          (ev?: React.MouseEvent&lt;HTMLElement&gt;, column?: IColumn) =&gt;
          void
  - name: onColumnHeaderContextMenu
    uid: 'office-ui-fabric-react!IDetailsListProps#onColumnHeaderContextMenu:member'
    package: office-ui-fabric-react!
    fullName: onColumnHeaderContextMenu
    summary: >-
      Callback for when the user asks for a contextual menu (usually via right
      click) from a column header.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onColumnHeaderContextMenu?: (column?: IColumn, ev?:
        React.MouseEvent<HTMLElement>) => void;
      return:
        type: >-
          (column?: IColumn, ev?: React.MouseEvent&lt;HTMLElement&gt;) =&gt;
          void
  - name: onColumnResize
    uid: 'office-ui-fabric-react!IDetailsListProps#onColumnResize:member'
    package: office-ui-fabric-react!
    fullName: onColumnResize
    summary: Callback fired on column resize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onColumnResize?: (column?: IColumn, newWidth?: number, columnIndex?:
        number) => void;
      return:
        type: '(column?: IColumn, newWidth?: number, columnIndex?: number) =&gt; void'
  - name: onDidUpdate
    uid: 'office-ui-fabric-react!IDetailsListProps#onDidUpdate:member'
    package: office-ui-fabric-react!
    fullName: onDidUpdate
    summary: >-
      Callback for when the list has been updated. Useful for telemetry tracking
      externally.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDidUpdate?: (detailsList?: DetailsListBase) => void;'
      return:
        type: '(detailsList?: DetailsListBase) =&gt; void'
  - name: onItemContextMenu
    uid: 'office-ui-fabric-react!IDetailsListProps#onItemContextMenu:member'
    package: office-ui-fabric-react!
    fullName: onItemContextMenu
    summary: >-
      Callback for when the context menu of an item has been accessed. If
      undefined or false is returned, `ev.preventDefault()` will be called.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onItemContextMenu?: (item?: any, index?: number, ev?: Event) => void |
        boolean;
      return:
        type: '(item?: any, index?: number, ev?: Event) =&gt; void | boolean'
  - name: onItemInvoked
    uid: 'office-ui-fabric-react!IDetailsListProps#onItemInvoked:member'
    package: office-ui-fabric-react!
    fullName: onItemInvoked
    summary: >-
      Callback for when a given row has been invoked (by pressing enter while it
      is selected.)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onItemInvoked?: (item?: any, index?: number, ev?: Event) => void;'
      return:
        type: '(item?: any, index?: number, ev?: Event) =&gt; void'
  - name: onRenderCheckbox
    uid: 'office-ui-fabric-react!IDetailsListProps#onRenderCheckbox:member'
    package: office-ui-fabric-react!
    fullName: onRenderCheckbox
    summary: 'If provided, can be used to render a custom checkbox.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderCheckbox?: IRenderFunction<IDetailsListCheckboxProps>;'
      return:
        type: IRenderFunction&lt;IDetailsListCheckboxProps&gt;
  - name: onRenderDetailsFooter
    uid: 'office-ui-fabric-react!IDetailsListProps#onRenderDetailsFooter:member'
    package: office-ui-fabric-react!
    fullName: onRenderDetailsFooter
    summary: An override to render the details footer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderDetailsFooter?: IRenderFunction<IDetailsFooterProps>;'
      return:
        type: IRenderFunction&lt;IDetailsFooterProps&gt;
  - name: onRenderDetailsHeader
    uid: 'office-ui-fabric-react!IDetailsListProps#onRenderDetailsHeader:member'
    package: office-ui-fabric-react!
    fullName: onRenderDetailsHeader
    summary: An override to render the details header.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderDetailsHeader?: IRenderFunction<IDetailsHeaderProps>;'
      return:
        type: IRenderFunction&lt;IDetailsHeaderProps&gt;
  - name: onRenderItemColumn
    uid: 'office-ui-fabric-react!IDetailsListProps#onRenderItemColumn:member'
    package: office-ui-fabric-react!
    fullName: onRenderItemColumn
    summary: >-
      If provided, will be the "default" item column renderer method. This
      affects cells within the rows, not the rows themselves. If a column
      definition provides its own `onRender` method, that will be used instead
      of this.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRenderItemColumn?: (item?: any, index?: number, column?: IColumn) =>
        React.ReactNode;
      return:
        type: '(item?: any, index?: number, column?: IColumn) =&gt; React.ReactNode'
  - name: onRenderMissingItem
    uid: 'office-ui-fabric-react!IDetailsListProps#onRenderMissingItem:member'
    package: office-ui-fabric-react!
    fullName: onRenderMissingItem
    summary: Callback for what to render when the item is missing.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRenderMissingItem?: (index?: number, rowProps?: IDetailsRowProps) =>
        React.ReactNode;
      return:
        type: '(index?: number, rowProps?: IDetailsRowProps) =&gt; React.ReactNode'
  - name: onRenderRow
    uid: 'office-ui-fabric-react!IDetailsListProps#onRenderRow:member'
    package: office-ui-fabric-react!
    fullName: onRenderRow
    summary: Callback to override the default row rendering.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderRow?: IRenderFunction<IDetailsRowProps>;'
      return:
        type: IRenderFunction&lt;IDetailsRowProps&gt;
  - name: onRowDidMount
    uid: 'office-ui-fabric-react!IDetailsListProps#onRowDidMount:member'
    package: office-ui-fabric-react!
    fullName: onRowDidMount
    summary: >-
      Callback for when a given row has been mounted. Useful for identifying
      when a row has been rendered on the page.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRowDidMount?: (item?: any, index?: number) => void;'
      return:
        type: '(item?: any, index?: number) =&gt; void'
  - name: onRowWillUnmount
    uid: 'office-ui-fabric-react!IDetailsListProps#onRowWillUnmount:member'
    package: office-ui-fabric-react!
    fullName: onRowWillUnmount
    summary: >-
      Callback for when a given row has been unmounted. Useful for identifying
      when a row has been removed from the page.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRowWillUnmount?: (item?: any, index?: number) => void;'
      return:
        type: '(item?: any, index?: number) =&gt; void'
  - name: onShouldVirtualize
    uid: 'office-ui-fabric-react!IDetailsListProps#onShouldVirtualize:member'
    package: office-ui-fabric-react!
    fullName: onShouldVirtualize
    summary: >-
      Callback to determine whether the list should be rendered in full, or
      virtualized.


      Virtualization will add and remove pages of items as the user scrolls them
      into the visible range. This benefits larger list scenarios by reducing
      the DOM on the screen, but can negatively affect performance for smaller
      lists.


      The default implementation will virtualize when this callback is not
      provided.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onShouldVirtualize?: (props: IListProps) => boolean;'
      return:
        type: '(props: IListProps) =&gt; boolean'
  - name: rowElementEventMap
    uid: 'office-ui-fabric-react!IDetailsListProps#rowElementEventMap:member'
    package: office-ui-fabric-react!
    fullName: rowElementEventMap
    summary: >-
      Event names and corresponding callbacks that will be registered to
      rendered row elements.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        rowElementEventMap?: {
                eventName: string;
                callback: (context: IDragDropContext, event?: any) => void;
            }[];
      return:
        type: |-
          {
                  eventName: string;
                  callback: (context: IDragDropContext, event?: any) =&gt; void;
              }[]
  - name: selection
    uid: 'office-ui-fabric-react!IDetailsListProps#selection:member'
    package: office-ui-fabric-react!
    fullName: selection
    summary: Selection model to track selection state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selection?: ISelection;'
      return:
        type: '<xref uid="@fluentui/utilities!ISelection:interface" />'
  - name: selectionMode
    uid: 'office-ui-fabric-react!IDetailsListProps#selectionMode:member'
    package: office-ui-fabric-react!
    fullName: selectionMode
    summary: >-
      Controls how/if the details list manages selection. Options include none,
      single, multiple
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectionMode?: SelectionMode;'
      return:
        type: '<xref uid="@fluentui/utilities!SelectionMode:enum" />'
  - name: selectionPreservedOnEmptyClick
    uid: >-
      office-ui-fabric-react!IDetailsListProps#selectionPreservedOnEmptyClick:member
    package: office-ui-fabric-react!
    fullName: selectionPreservedOnEmptyClick
    summary: >-
      By default, selection is cleared when clicking on an empty (non-focusable)
      section of the screen. Setting this value to true overrides that behavior
      and maintains selection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectionPreservedOnEmptyClick?: boolean;'
      return:
        type: boolean
  - name: selectionZoneProps
    uid: 'office-ui-fabric-react!IDetailsListProps#selectionZoneProps:member'
    package: office-ui-fabric-react!
    fullName: selectionZoneProps
    summary: Additional props to pass through to the SelectionZone created by default.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectionZoneProps?: ISelectionZoneProps;'
      return:
        type: ISelectionZoneProps
  - name: setKey
    uid: 'office-ui-fabric-react!IDetailsListProps#setKey:member'
    package: office-ui-fabric-react!
    fullName: setKey
    summary: >-
      A key that uniquely identifies the given items. If provided, the selection
      will be reset when the key changes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setKey?: string;'
      return:
        type: string
  - name: shouldApplyApplicationRole
    uid: 'office-ui-fabric-react!IDetailsListProps#shouldApplyApplicationRole:member'
    package: office-ui-fabric-react!
    fullName: shouldApplyApplicationRole
    summary: Whether the role `application` should be applied to the list.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'shouldApplyApplicationRole?: boolean;'
      return:
        type: boolean
  - name: styles
    uid: 'office-ui-fabric-react!IDetailsListProps#styles:member'
    package: office-ui-fabric-react!
    fullName: styles
    summary: Custom overrides to the themed or default styles.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IDetailsListStyleProps,
        IDetailsListStyles>;
      return:
        type: >-
          IStyleFunctionOrObject&lt;IDetailsListStyleProps,
          IDetailsListStyles&gt;
  - name: theme
    uid: 'office-ui-fabric-react!IDetailsListProps#theme:member'
    package: office-ui-fabric-react!
    fullName: theme
    summary: Theme provided by a higher-order component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
  - name: useFastIcons
    uid: 'office-ui-fabric-react!IDetailsListProps#useFastIcons:member'
    package: office-ui-fabric-react!
    fullName: useFastIcons
    summary: >-
      Whether to use fast icon and check components. The icons can't be targeted
      by customization but are still customizable via class names.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useFastIcons?: boolean;'
      return:
        type: boolean
  - name: usePageCache
    uid: 'office-ui-fabric-react!IDetailsListProps#usePageCache:member'
    package: office-ui-fabric-react!
    fullName: usePageCache
    summary: >-
      Whether to enable render page caching. This is an experimental performance
      optimization that is off by default.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'usePageCache?: boolean;'
      return:
        type: boolean
  - name: useReducedRowRenderer
    uid: 'office-ui-fabric-react!IDetailsListProps#useReducedRowRenderer:member'
    package: office-ui-fabric-react!
    fullName: useReducedRowRenderer
    summary: >-
      Whether to re-render a row only when props changed. Might cause regression
      when depending on external updates.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useReducedRowRenderer?: boolean;'
      return:
        type: boolean
  - name: viewport
    uid: 'office-ui-fabric-react!IDetailsListProps#viewport:member'
    package: office-ui-fabric-react!
    fullName: viewport
    summary: 'Viewport info, provided by the `withViewport` decorator.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'viewport?: IViewport;'
      return:
        type: '<xref uid="office-ui-fabric-react!IViewport:interface" />'
extends: IBaseProps&lt;IDetailsList&gt;
