### YamlMime:TSType
name: IAccessiblePopupProps
uid: '@fluentui/react!IAccessiblePopupProps:interface'
package: '@fluentui/react!'
fullName: IAccessiblePopupProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: closeButtonAriaLabel
    uid: '@fluentui/react!IAccessiblePopupProps#closeButtonAriaLabel:member'
    package: '@fluentui/react!'
    fullName: closeButtonAriaLabel
    summary: Aria label on close button.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'closeButtonAriaLabel?: string;'
      return:
        type: string
  - name: elementToFocusOnDismiss
    uid: '@fluentui/react!IAccessiblePopupProps#elementToFocusOnDismiss:member'
    package: '@fluentui/react!'
    fullName: elementToFocusOnDismiss
    summary: Sets the element to focus on when exiting the control's FocusTrapZone.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'elementToFocusOnDismiss?: HTMLElement;'
      return:
        type: HTMLElement
  - name: firstFocusableSelector
    uid: '@fluentui/react!IAccessiblePopupProps#firstFocusableSelector:member'
    package: '@fluentui/react!'
    fullName: firstFocusableSelector
    summary: >-
      Class name (not actual selector) for first focusable item. Do not append a
      dot.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'firstFocusableSelector?: string | (() => string);'
      return:
        type: string | (() =&gt; string)
  - name: forceFocusInsideTrap
    uid: '@fluentui/react!IAccessiblePopupProps#forceFocusInsideTrap:member'
    package: '@fluentui/react!'
    fullName: forceFocusInsideTrap
    summary: Whether control should force focus inside its focus trap zone.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'forceFocusInsideTrap?: boolean;'
      return:
        type: boolean
  - name: ignoreExternalFocusing
    uid: '@fluentui/react!IAccessiblePopupProps#ignoreExternalFocusing:member'
    package: '@fluentui/react!'
    fullName: ignoreExternalFocusing
    summary: >-
      If false (the default), the control's FocusTrapZone will restore focus to
      the element which activated it once the trap zone is unmounted or
      disabled. Set to true to disable this behavior.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ignoreExternalFocusing?: boolean;'
      return:
        type: boolean
  - name: isClickableOutsideFocusTrap
    uid: '@fluentui/react!IAccessiblePopupProps#isClickableOutsideFocusTrap:member'
    package: '@fluentui/react!'
    fullName: isClickableOutsideFocusTrap
    summary: Whether this control will allow clicks outside its FocusTrapZone.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isClickableOutsideFocusTrap?: boolean;'
      return:
        type: boolean
