### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps:interface'
    name: IBaseExtendedPickerProps
    fullName: IBaseExtendedPickerProps
    langs:
      - typeScript
    type: interface
    syntax:
      typeParameters:
        - id: T
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#className:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#componentRef:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#currentRenderedQueryString:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#defaultSelectedItems:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#disabled:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#floatingPickerProps:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#focusZoneProps:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#headerComponent:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#inputProps:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#itemLimit:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#onBlur:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#onChange:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#onFocus:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#onItemAdded:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#onItemSelected:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#onItemsRemoved:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#onPaste:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#onRenderFloatingPicker:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#onRenderSelectedItems:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#selectedItems:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#selectedItemsListProps:member'
      - 'office-ui-fabric-react!IBaseExtendedPickerProps#suggestionItems:member'
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#className:member'
    summary: ClassName for the picker.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#componentRef:member'
    summary: Ref of the component
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IBaseExtendedPicker<T>>;'
      return:
        type:
          - IRefObject<IBaseExtendedPicker<T>>
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#currentRenderedQueryString:member'
    summary: Current rendered query string that's corealte to current rendered result
    name: currentRenderedQueryString
    fullName: currentRenderedQueryString
    langs:
      - typeScript
    type: property
    syntax:
      content: 'currentRenderedQueryString?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#defaultSelectedItems:member'
    summary: Initial items that have already been selected and should appear in the people picker.
    name: defaultSelectedItems
    fullName: defaultSelectedItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultSelectedItems?: T[];'
      return:
        type:
          - 'T[]'
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#disabled:member'
    summary: Flag for disabling the picker.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#floatingPickerProps:member'
    summary: Floating picker properties
    name: floatingPickerProps
    fullName: floatingPickerProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'floatingPickerProps: IBaseFloatingPickerProps<T>;'
      return:
        type:
          - IBaseFloatingPickerProps<T>
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#focusZoneProps:member'
    summary: Focus zone props
    name: focusZoneProps
    fullName: focusZoneProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'focusZoneProps?: IFocusZoneProps;'
      return:
        type:
          - '@fluentui/react-focus!IFocusZoneProps:interface'
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#headerComponent:member'
    summary: Header/title element for the picker
    name: headerComponent
    fullName: headerComponent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headerComponent?: JSX.Element;'
      return:
        type:
          - JSX.Element
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#inputProps:member'
    summary: Autofill input native props
    name: inputProps
    fullName: inputProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'inputProps?: IInputProps;'
      return:
        type:
          - IInputProps
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#itemLimit:member'
    summary: Restrict the amount of selectable items.
    name: itemLimit
    fullName: itemLimit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemLimit?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#onBlur:member'
    summary: A callback for when the user moves the focus away from the picker
    name: onBlur
    fullName: onBlur
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onBlur?: React.FocusEventHandler<HTMLInputElement | Autofill>;'
      return:
        type:
          - React.FocusEventHandler<HTMLInputElement | Autofill>
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#onChange:member'
    summary: A callback for when the selected list of items changes.
    name: onChange
    fullName: onChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChange?: (items?: T[]) => void;'
      return:
        type:
          - '(items?: T[]) => void'
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#onFocus:member'
    summary: A callback for when the user put focus on the picker
    name: onFocus
    fullName: onFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onFocus?: React.FocusEventHandler<HTMLInputElement | Autofill>;'
      return:
        type:
          - React.FocusEventHandler<HTMLInputElement | Autofill>
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#onItemAdded:member'
    summary: A callback on when an item was added to the selected item list
    name: onItemAdded
    fullName: onItemAdded
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onItemAdded?: (addedItem: T) => void;'
      return:
        type:
          - '(addedItem: T) => void'
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#onItemSelected:member'
    summary: >-
      A callback to process a selection after the user selects a suggestion from the picker. The returned item will be
      added to the selected items list
    name: onItemSelected
    fullName: onItemSelected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onItemSelected?: (selectedItem?: T) => T | PromiseLike<T>;'
      return:
        type:
          - '(selectedItem?: T) => T | PromiseLike<T>'
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#onItemsRemoved:member'
    summary: A callback on when an item or items were removed from the selected item list
    name: onItemsRemoved
    fullName: onItemsRemoved
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onItemsRemoved?: (removedItems: T[]) => void;'
      return:
        type:
          - '(removedItems: T[]) => void'
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#onPaste:member'
    summary: A callback for when text is pasted into the input
    name: onPaste
    fullName: onPaste
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onPaste?: (pastedText: string) => T[];'
      return:
        type:
          - '(pastedText: string) => T[]'
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#onRenderFloatingPicker:member'
    summary: Function that specifies how the floating picker will appear.
    name: onRenderFloatingPicker
    fullName: onRenderFloatingPicker
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderFloatingPicker: React.ComponentType<IBaseFloatingPickerProps<T>>;'
      return:
        type:
          - React.ComponentType<IBaseFloatingPickerProps<T>>
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#onRenderSelectedItems:member'
    summary: Function that specifies how the floating picker will appear.
    name: onRenderSelectedItems
    fullName: onRenderSelectedItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderSelectedItems: React.ComponentType<IBaseSelectedItemsListProps<T>>;'
      return:
        type:
          - React.ComponentType<IBaseSelectedItemsListProps<T>>
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#selectedItems:member'
    summary: If using as a controlled component use selectedItems here instead of the SelectedItemsList
    name: selectedItems
    fullName: selectedItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedItems?: T[];'
      return:
        type:
          - 'T[]'
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#selectedItemsListProps:member'
    summary: Selected items list properties
    name: selectedItemsListProps
    fullName: selectedItemsListProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedItemsListProps: IBaseSelectedItemsListProps<T>;'
      return:
        type:
          - IBaseSelectedItemsListProps<T>
  - uid: 'office-ui-fabric-react!IBaseExtendedPickerProps#suggestionItems:member'
    summary: If using as a controlled component use suggestionItems here instead of FloatingPicker
    name: suggestionItems
    fullName: suggestionItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'suggestionItems?: T[];'
      return:
        type:
          - 'T[]'
