### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IOverlayStyleProps:interface'
    name: IOverlayStyleProps
    fullName: IOverlayStyleProps
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IOverlayStyleProps#className:member'
      - '@fluentui/react-internal!IOverlayStyleProps#isDark:member'
      - '@fluentui/react-internal!IOverlayStyleProps#isNone:member'
      - '@fluentui/react-internal!IOverlayStyleProps#theme:member'
  - uid: '@fluentui/react-internal!IOverlayStyleProps#className:member'
    summary: Accept custom classNames
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IOverlayStyleProps#isDark:member'
    summary: Is overlay dark themed
    name: isDark
    fullName: isDark
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isDark?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IOverlayStyleProps#isNone:member'
    summary: Is overlay visible
    name: isNone
    fullName: isNone
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isNone?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IOverlayStyleProps#theme:member'
    summary: Accept theme prop.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
