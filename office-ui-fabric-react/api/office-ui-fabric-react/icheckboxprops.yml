### YamlMime:TSType
name: ICheckboxProps
uid: 'office-ui-fabric-react!ICheckboxProps:interface'
package: office-ui-fabric-react!
fullName: ICheckboxProps
summary: Checkbox properties.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: ariaDescribedBy
    uid: 'office-ui-fabric-react!ICheckboxProps#ariaDescribedBy:member'
    package: office-ui-fabric-react!
    fullName: ariaDescribedBy
    summary: ID for element that provides extended information for the checkbox.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaDescribedBy?: string;'
      return:
        type: string
  - name: ariaLabel
    uid: 'office-ui-fabric-react!ICheckboxProps#ariaLabel:member'
    package: office-ui-fabric-react!
    fullName: ariaLabel
    summary: Accessible label for the checkbox.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type: string
  - name: ariaLabelledBy
    uid: 'office-ui-fabric-react!ICheckboxProps#ariaLabelledBy:member'
    package: office-ui-fabric-react!
    fullName: ariaLabelledBy
    summary: ID for element that contains label information for the checkbox.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabelledBy?: string;'
      return:
        type: string
  - name: ariaPositionInSet
    uid: 'office-ui-fabric-react!ICheckboxProps#ariaPositionInSet:member'
    package: office-ui-fabric-react!
    fullName: ariaPositionInSet
    summary: The position in the parent set (if in a set) for aria-posinset.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaPositionInSet?: number;'
      return:
        type: number
  - name: ariaSetSize
    uid: 'office-ui-fabric-react!ICheckboxProps#ariaSetSize:member'
    package: office-ui-fabric-react!
    fullName: ariaSetSize
    summary: The total size of the parent set (if in a set) for aria-setsize.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaSetSize?: number;'
      return:
        type: number
  - name: boxSide
    uid: 'office-ui-fabric-react!ICheckboxProps#boxSide:member'
    package: office-ui-fabric-react!
    fullName: boxSide
    summary: >-
      Allows you to set the checkbox to be at the before (start) or after (end)
      the label.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'boxSide?: ''start'' | ''end'';'
      return:
        type: '''start'' | ''end'''
  - name: checked
    uid: 'office-ui-fabric-react!ICheckboxProps#checked:member'
    package: office-ui-fabric-react!
    fullName: checked
    summary: >-
      Checked state. Mutually exclusive to "defaultChecked". Use this if you
      control the checked state at a higher level and plan to pass in the
      correct value based on handling onChange events and re-rendering.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checked?: boolean;'
      return:
        type: boolean
  - name: checkmarkIconProps
    uid: 'office-ui-fabric-react!ICheckboxProps#checkmarkIconProps:member'
    package: office-ui-fabric-react!
    fullName: checkmarkIconProps
    summary: Custom icon props for the check mark rendered by the checkbox
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checkmarkIconProps?: IIconProps;'
      return:
        type: IIconProps
  - name: className
    uid: 'office-ui-fabric-react!ICheckboxProps#className:member'
    package: office-ui-fabric-react!
    fullName: className
    summary: >-
      Additional class name to provide on the root element, in addition to the
      ms-Checkbox class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: 'office-ui-fabric-react!ICheckboxProps#componentRef:member'
    package: office-ui-fabric-react!
    fullName: componentRef
    summary: >-
      Optional callback to access the ICheckbox interface. Use this instead of
      ref for accessing the public methods and properties of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<ICheckbox>;'
      return:
        type: IRefObject&lt;ICheckbox&gt;
  - name: defaultChecked
    uid: 'office-ui-fabric-react!ICheckboxProps#defaultChecked:member'
    package: office-ui-fabric-react!
    fullName: defaultChecked
    summary: >-
      Default checked state. Mutually exclusive to "checked". Use this if you
      want an uncontrolled component, and want the Checkbox instance to maintain
      its own state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultChecked?: boolean;'
      return:
        type: boolean
  - name: defaultIndeterminate
    uid: 'office-ui-fabric-react!ICheckboxProps#defaultIndeterminate:member'
    package: office-ui-fabric-react!
    fullName: defaultIndeterminate
    summary: >-
      Optional uncontrolled indeterminate visual state for checkbox. Setting
      indeterminate state takes visual precedence over checked or defaultChecked
      props given but does not affect checked state. This is not a toggleable
      state. On load the checkbox will receive indeterminate visual state and
      after the user's first click it will be removed exposing the true state of
      the checkbox.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultIndeterminate?: boolean;'
      return:
        type: boolean
  - name: disabled
    uid: 'office-ui-fabric-react!ICheckboxProps#disabled:member'
    package: office-ui-fabric-react!
    fullName: disabled
    summary: Disabled state of the checkbox.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: boolean;'
      return:
        type: boolean
  - name: indeterminate
    uid: 'office-ui-fabric-react!ICheckboxProps#indeterminate:member'
    package: office-ui-fabric-react!
    fullName: indeterminate
    summary: >-
      Optional controlled indeterminate visual state for checkbox. Setting
      indeterminate state takes visual precedence over checked or defaultChecked
      props given but does not affect checked state. This should not be a
      toggleable state. On load the checkbox will receive indeterminate visual
      state and after the first user click it should be removed by your supplied
      onChange callback function exposing the true state of the checkbox.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'indeterminate?: boolean;'
      return:
        type: boolean
  - name: inputProps
    uid: 'office-ui-fabric-react!ICheckboxProps#inputProps:member'
    package: office-ui-fabric-react!
    fullName: inputProps
    summary: >-
      Optional input props that will be mixed into the input element, \*before\*
      other props are applied. This allows you to extend the input element with
      additional attributes, such as data-automation-id needed for automation.
      Note that if you provide, for example, "disabled" as well as
      "inputProps.disabled", the former will take precedence over the later.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        inputProps?: React.ButtonHTMLAttributes<HTMLElement |
        HTMLButtonElement>;
      return:
        type: React.ButtonHTMLAttributes&lt;HTMLElement | HTMLButtonElement&gt;
  - name: keytipProps
    uid: 'office-ui-fabric-react!ICheckboxProps#keytipProps:member'
    package: office-ui-fabric-react!
    fullName: keytipProps
    summary: Optional keytip for this checkbox
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'keytipProps?: IKeytipProps;'
      return:
        type: IKeytipProps
  - name: label
    uid: 'office-ui-fabric-react!ICheckboxProps#label:member'
    package: office-ui-fabric-react!
    fullName: label
    summary: Label to display next to the checkbox.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'label?: string;'
      return:
        type: string
  - name: onChange
    uid: 'office-ui-fabric-react!ICheckboxProps#onChange:member'
    package: office-ui-fabric-react!
    fullName: onChange
    summary: Callback that is called when the checked value has changed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onChange?: (ev?: React.FormEvent<HTMLElement | HTMLInputElement>,
        checked?: boolean) => void;
      return:
        type: >-
          (ev?: React.FormEvent&lt;HTMLElement | HTMLInputElement&gt;, checked?:
          boolean) =&gt; void
  - name: onRenderLabel
    uid: 'office-ui-fabric-react!ICheckboxProps#onRenderLabel:member'
    package: office-ui-fabric-react!
    fullName: onRenderLabel
    summary: Custom render function for the label.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderLabel?: IRenderFunction<ICheckboxProps>;'
      return:
        type: IRenderFunction&lt;ICheckboxProps&gt;
  - name: styles
    uid: 'office-ui-fabric-react!ICheckboxProps#styles:member'
    package: office-ui-fabric-react!
    fullName: styles
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ICheckboxStyleProps, ICheckboxStyles>;'
      return:
        type: 'IStyleFunctionOrObject&lt;ICheckboxStyleProps, ICheckboxStyles&gt;'
  - name: theme
    uid: 'office-ui-fabric-react!ICheckboxProps#theme:member'
    package: office-ui-fabric-react!
    fullName: theme
    summary: Theme provided by HOC.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
extends: 'React.ButtonHTMLAttributes&lt;HTMLElement | HTMLInputElement&gt; '
