### YamlMime:TSType
name: IFocusTrapZoneProps
uid: '@fluentui/react!IFocusTrapZoneProps:interface'
package: '@fluentui/react!'
fullName: IFocusTrapZoneProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: ariaLabelledBy
    uid: '@fluentui/react!IFocusTrapZoneProps#ariaLabelledBy:member'
    package: '@fluentui/react!'
    fullName: ariaLabelledBy
    summary: Sets the aria-labelledby attribute.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabelledBy?: string;'
      return:
        type: string
  - name: componentRef
    uid: '@fluentui/react!IFocusTrapZoneProps#componentRef:member'
    package: '@fluentui/react!'
    fullName: componentRef
    summary: >-
      Optional callback to access the IFocusTrapZone interface. Use this instead
      of ref for accessing the public methods and properties of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IFocusTrapZone>;'
      return:
        type: IRefObject&lt;IFocusTrapZone&gt;
  - name: disabled
    uid: '@fluentui/react!IFocusTrapZoneProps#disabled:member'
    package: '@fluentui/react!'
    fullName: disabled
    summary: Whether to disable the FocusTrapZone's focus trapping behavior.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: boolean;'
      return:
        type: boolean
  - name: disableFirstFocus
    uid: '@fluentui/react!IFocusTrapZoneProps#disableFirstFocus:member'
    package: '@fluentui/react!'
    fullName: disableFirstFocus
    summary: Do not put focus onto the first element inside the focus trap zone.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disableFirstFocus?: boolean;'
      return:
        type: boolean
  - name: elementToFocusOnDismiss
    uid: '@fluentui/react!IFocusTrapZoneProps#elementToFocusOnDismiss:member'
    package: '@fluentui/react!'
    fullName: elementToFocusOnDismiss
    summary: Sets the element to focus on when exiting the FocusTrapZone.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'elementToFocusOnDismiss?: HTMLElement;'
      return:
        type: HTMLElement
  - name: enableAriaHiddenSiblings
    uid: '@fluentui/react!IFocusTrapZoneProps#enableAriaHiddenSiblings:member'
    package: '@fluentui/react!'
    fullName: enableAriaHiddenSiblings
    summary: >-
      Puts aria-hidden=true on all non-ancestors of the current element, for
      screen readers. This is an experimental feature that will be graduated to
      default behavior after testing. This flag will be removed with the next
      major release.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableAriaHiddenSiblings?: boolean;'
      return:
        type: boolean
  - name: firstFocusableSelector
    uid: '@fluentui/react!IFocusTrapZoneProps#firstFocusableSelector:member'
    package: '@fluentui/react!'
    fullName: firstFocusableSelector
    summary: >-
      Class name (not actual selector) for first focusable item. Do not append a
      dot. Only applies if `focusPreviouslyFocusedInnerElement` is false.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'firstFocusableSelector?: string | (() => string);'
      return:
        type: string | (() =&gt; string)
  - name: focusPreviouslyFocusedInnerElement
    uid: >-
      @fluentui/react!IFocusTrapZoneProps#focusPreviouslyFocusedInnerElement:member
    package: '@fluentui/react!'
    fullName: focusPreviouslyFocusedInnerElement
    summary: >-
      Specifies which descendant element to focus when `focus()` is called. If
      false, use the first focusable descendant, filtered by the
      `firstFocusableSelector` property if present. If true, use the element
      that was focused when the trap zone last had a focused descendant (or fall
      back to the first focusable descendant if the trap zone has never been
      focused).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'focusPreviouslyFocusedInnerElement?: boolean;'
      return:
        type: boolean
  - name: forceFocusInsideTrap
    uid: '@fluentui/react!IFocusTrapZoneProps#forceFocusInsideTrap:member'
    package: '@fluentui/react!'
    fullName: forceFocusInsideTrap
    summary: Whether the focus trap zone should force focus to stay inside of it.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'forceFocusInsideTrap?: boolean;'
      return:
        type: boolean
  - name: ignoreExternalFocusing
    uid: '@fluentui/react!IFocusTrapZoneProps#ignoreExternalFocusing:member'
    package: '@fluentui/react!'
    fullName: ignoreExternalFocusing
    summary: >-
      If false (the default), the trap zone will restore focus to the element
      which activated it once the trap zone is unmounted or disabled. Set to
      true to disable this behavior.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ignoreExternalFocusing?: boolean;'
      return:
        type: boolean
  - name: isClickableOutsideFocusTrap
    uid: '@fluentui/react!IFocusTrapZoneProps#isClickableOutsideFocusTrap:member'
    package: '@fluentui/react!'
    fullName: isClickableOutsideFocusTrap
    summary: Whether clicks are allowed outside this FocusTrapZone.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isClickableOutsideFocusTrap?: boolean;'
      return:
        type: boolean
extends: React.HTMLAttributes&lt;HTMLDivElement&gt;
