### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-theme-provider!ThemeProviderProps:interface'
    summary: Props for the ThemeProvider component.
    name: ThemeProviderProps
    fullName: ThemeProviderProps
    langs:
      - typeScript
    type: interface
    extends:
      - '@fluentui/react-compose!ComponentProps:interface'
      - 'React.HTMLAttributes<HTMLDivElement> '
    package: '@fluentui/react-theme-provider!'
    children:
      - '@fluentui/react-theme-provider!ThemeProviderProps#applyTo:member'
      - '@fluentui/react-theme-provider!ThemeProviderProps#ref:member'
      - '@fluentui/react-theme-provider!ThemeProviderProps#renderer:member'
      - '@fluentui/react-theme-provider!ThemeProviderProps#theme:member'
  - uid: '@fluentui/react-theme-provider!ThemeProviderProps#applyTo:member'
    summary: >-
      Defines where body-related theme is applied to. Setting to 'element' will apply body styles to the root element of
      ThemeProvider. Setting to 'body' will apply body styles to document body. Setting to 'none' will not apply body
      styles to either element or body.

       'element';
    name: applyTo
    fullName: applyTo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'applyTo?: ''element'' | ''body'' | ''none'';'
      return:
        type:
          - '''element'' | ''body'' | ''none'''
  - uid: '@fluentui/react-theme-provider!ThemeProviderProps#ref:member'
    summary: Optional ref to the root element.
    name: ref
    fullName: ref
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ref?: React.Ref<HTMLElement>;'
      return:
        type:
          - React.Ref<HTMLElement>
  - uid: '@fluentui/react-theme-provider!ThemeProviderProps#renderer:member'
    summary: >-
      Optional interface for registering dynamic styles. Defaults to using `merge-styles`<!-- -->. Use this to opt into
      a particular rendering implementation, such as `emotion`<!-- -->, `styled-components`<!-- -->, or `jss`<!-- -->.
      Note: performance will differ between all renders. Please measure your scenarios before using an alternative
      implementation.
    name: renderer
    fullName: renderer
    langs:
      - typeScript
    type: property
    syntax:
      content: 'renderer?: StyleRenderer;'
      return:
        type:
          - '@fluentui/react-theme-provider!StyleRenderer:interface'
  - uid: '@fluentui/react-theme-provider!ThemeProviderProps#theme:member'
    summary: Defines the theme provided by the user.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: PartialTheme | Theme;'
      return:
        type:
          - PartialTheme | Theme
