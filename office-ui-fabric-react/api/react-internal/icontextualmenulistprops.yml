### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IContextualMenuListProps:interface'
    name: IContextualMenuListProps
    fullName: IContextualMenuListProps
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IContextualMenuListProps#defaultMenuItemRenderer:member'
      - '@fluentui/react-internal!IContextualMenuListProps#hasCheckmarks:member'
      - '@fluentui/react-internal!IContextualMenuListProps#hasIcons:member'
      - '@fluentui/react-internal!IContextualMenuListProps#items:member'
      - '@fluentui/react-internal!IContextualMenuListProps#role:member'
      - '@fluentui/react-internal!IContextualMenuListProps#totalItemCount:member'
  - uid: '@fluentui/react-internal!IContextualMenuListProps#defaultMenuItemRenderer:member'
    name: defaultMenuItemRenderer
    fullName: defaultMenuItemRenderer
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultMenuItemRenderer: (item: IContextualMenuItemRenderProps) => React.ReactNode;'
      return:
        type:
          - '(item: IContextualMenuItemRenderProps) => React.ReactNode'
  - uid: '@fluentui/react-internal!IContextualMenuListProps#hasCheckmarks:member'
    name: hasCheckmarks
    fullName: hasCheckmarks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasCheckmarks: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IContextualMenuListProps#hasIcons:member'
    name: hasIcons
    fullName: hasIcons
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasIcons: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IContextualMenuListProps#items:member'
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'items: IContextualMenuItem[];'
      return:
        type:
          - 'IContextualMenuItem[]'
  - uid: '@fluentui/react-internal!IContextualMenuListProps#role:member'
    name: role
    fullName: role
    langs:
      - typeScript
    type: property
    syntax:
      content: 'role?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IContextualMenuListProps#totalItemCount:member'
    name: totalItemCount
    fullName: totalItemCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'totalItemCount: number;'
      return:
        type:
          - number
