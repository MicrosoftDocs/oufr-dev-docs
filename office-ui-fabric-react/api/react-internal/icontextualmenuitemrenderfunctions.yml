### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IContextualMenuItemRenderFunctions:interface'
    name: IContextualMenuItemRenderFunctions
    fullName: IContextualMenuItemRenderFunctions
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IContextualMenuItemRenderFunctions#renderCheckMarkIcon:member'
      - '@fluentui/react-internal!IContextualMenuItemRenderFunctions#renderItemIcon:member'
      - '@fluentui/react-internal!IContextualMenuItemRenderFunctions#renderItemName:member'
      - '@fluentui/react-internal!IContextualMenuItemRenderFunctions#renderSecondaryText:member'
      - '@fluentui/react-internal!IContextualMenuItemRenderFunctions#renderSubMenuIcon:member'
  - uid: '@fluentui/react-internal!IContextualMenuItemRenderFunctions#renderCheckMarkIcon:member'
    summary: Rendering function for check mark icon
    name: renderCheckMarkIcon
    fullName: renderCheckMarkIcon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'renderCheckMarkIcon: (props: IContextualMenuItemProps, customClassNames?: string[]) => React.ReactNode;'
      return:
        type:
          - '(props: IContextualMenuItemProps, customClassNames?: string[]) => React.ReactNode'
  - uid: '@fluentui/react-internal!IContextualMenuItemRenderFunctions#renderItemIcon:member'
    summary: Rendering function for item icon
    name: renderItemIcon
    fullName: renderItemIcon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'renderItemIcon: (props: IContextualMenuItemProps, customClassNames?: string[]) => React.ReactNode;'
      return:
        type:
          - '(props: IContextualMenuItemProps, customClassNames?: string[]) => React.ReactNode'
  - uid: '@fluentui/react-internal!IContextualMenuItemRenderFunctions#renderItemName:member'
    summary: Rendering function for item label
    name: renderItemName
    fullName: renderItemName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'renderItemName: (props: IContextualMenuItemProps, customClassNames?: string[]) => React.ReactNode;'
      return:
        type:
          - '(props: IContextualMenuItemProps, customClassNames?: string[]) => React.ReactNode'
  - uid: '@fluentui/react-internal!IContextualMenuItemRenderFunctions#renderSecondaryText:member'
    summary: Rendering function for secondary text label
    name: renderSecondaryText
    fullName: renderSecondaryText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'renderSecondaryText: (props: IContextualMenuItemProps, customClassNames?: string[]) => React.ReactNode;'
      return:
        type:
          - '(props: IContextualMenuItemProps, customClassNames?: string[]) => React.ReactNode'
  - uid: '@fluentui/react-internal!IContextualMenuItemRenderFunctions#renderSubMenuIcon:member'
    summary: Rendering function for submenu icon
    name: renderSubMenuIcon
    fullName: renderSubMenuIcon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'renderSubMenuIcon: (props: IContextualMenuItemProps, customClassNames?: string[]) => React.ReactNode;'
      return:
        type:
          - '(props: IContextualMenuItemProps, customClassNames?: string[]) => React.ReactNode'
