### YamlMime:TSType
name: KeytipManager
uid: '@fluentui/react-internal!KeytipManager:class'
package: '@fluentui/react-internal!'
fullName: KeytipManager
summary: >-
  This class is responsible for handling registering, updating, and
  unregistering of keytips
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: delayUpdatingKeytipChange
    uid: '@fluentui/react-internal!KeytipManager#delayUpdatingKeytipChange:member'
    package: '@fluentui/react-internal!'
    fullName: delayUpdatingKeytipChange
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delayUpdatingKeytipChange: boolean;'
      return:
        type: boolean
  - name: inKeytipMode
    uid: '@fluentui/react-internal!KeytipManager#inKeytipMode:member'
    package: '@fluentui/react-internal!'
    fullName: inKeytipMode
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'inKeytipMode: boolean;'
      return:
        type: boolean
  - name: keytips
    uid: '@fluentui/react-internal!KeytipManager#keytips:member'
    package: '@fluentui/react-internal!'
    fullName: keytips
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        keytips: {
                [key: string]: IUniqueKeytip;
            };
      return:
        type: |-
          {
                  [key: string]: IUniqueKeytip;
              }
  - name: persistedKeytips
    uid: '@fluentui/react-internal!KeytipManager#persistedKeytips:member'
    package: '@fluentui/react-internal!'
    fullName: persistedKeytips
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        persistedKeytips: {
                [key: string]: IUniqueKeytip;
            };
      return:
        type: |-
          {
                  [key: string]: IUniqueKeytip;
              }
  - name: sequenceMapping
    uid: '@fluentui/react-internal!KeytipManager#sequenceMapping:member'
    package: '@fluentui/react-internal!'
    fullName: sequenceMapping
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        sequenceMapping: {
                [key: string]: IKeytipProps;
            };
      return:
        type: |-
          {
                  [key: string]: IKeytipProps;
              }
  - name: shouldEnterKeytipMode
    uid: '@fluentui/react-internal!KeytipManager#shouldEnterKeytipMode:member'
    package: '@fluentui/react-internal!'
    fullName: shouldEnterKeytipMode
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'shouldEnterKeytipMode: boolean;'
      return:
        type: boolean
methods:
  - name: addParentOverflow(keytipProps)
    uid: '@fluentui/react-internal!KeytipManager#addParentOverflow:member(1)'
    package: '@fluentui/react-internal!'
    fullName: addParentOverflow(keytipProps)
    summary: >-
      Adds the overflowSetSequence to the keytipProps if its parent keytip also
      has it
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'addParentOverflow(keytipProps: IKeytipProps): IKeytipProps;'
      parameters:
        - id: keytipProps
          description: Keytip props to add overflowSetSequence to if necessary
          type: IKeytipProps
      return:
        type: IKeytipProps
        description: 'Modified keytip props, if needed to be modified'
  - name: enterKeytipMode()
    uid: '@fluentui/react-internal!KeytipManager#enterKeytipMode:member(1)'
    package: '@fluentui/react-internal!'
    fullName: enterKeytipMode()
    summary: Manual call to enter keytip mode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterKeytipMode(): void;'
      return:
        type: void
        description: ''
  - name: exitKeytipMode()
    uid: '@fluentui/react-internal!KeytipManager#exitKeytipMode:member(1)'
    package: '@fluentui/react-internal!'
    fullName: exitKeytipMode()
    summary: Manual call to exit keytip mode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'exitKeytipMode(): void;'
      return:
        type: void
        description: ''
  - name: getInstance()
    uid: '@fluentui/react-internal!KeytipManager.getInstance:member(1)'
    package: '@fluentui/react-internal!'
    fullName: getInstance()
    summary: Static function to get singleton KeytipManager instance
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static getInstance(): KeytipManager;'
      return:
        type: KeytipManager
        description: Singleton KeytipManager instance
  - name: getKeytips()
    uid: '@fluentui/react-internal!KeytipManager#getKeytips:member(1)'
    package: '@fluentui/react-internal!'
    fullName: getKeytips()
    summary: Gets all IKeytipProps from this.keytips
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getKeytips(): IKeytipProps[];'
      return:
        type: 'IKeytipProps[]'
        description: All keytips stored in the manager
  - name: init(delayUpdatingKeytipChange)
    uid: '@fluentui/react-internal!KeytipManager#init:member(1)'
    package: '@fluentui/react-internal!'
    fullName: init(delayUpdatingKeytipChange)
    summary: >-
      Initialization code to set set parameters to define how the KeytipManager
      handles keytip data.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'init(delayUpdatingKeytipChange: boolean): void;'
      parameters:
        - id: delayUpdatingKeytipChange
          description: >-
            T/F if we should delay notifiying keytip subscribers of keytip
            changes
          type: boolean
      return:
        type: void
        description: ''
  - name: 'menuExecute(overflowButtonSequences, keytipSequences)'
    uid: '@fluentui/react-internal!KeytipManager#menuExecute:member(1)'
    package: '@fluentui/react-internal!'
    fullName: 'menuExecute(overflowButtonSequences, keytipSequences)'
    summary: Public function to bind for overflow items that have a submenu
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        menuExecute(overflowButtonSequences: string[], keytipSequences:
        string[]): void;
      parameters:
        - id: overflowButtonSequences
          description: ''
          type: 'string[]'
        - id: keytipSequences
          description: ''
          type: 'string[]'
      return:
        type: void
        description: ''
  - name: 'register(keytipProps, persisted)'
    uid: '@fluentui/react-internal!KeytipManager#register:member(1)'
    package: '@fluentui/react-internal!'
    fullName: 'register(keytipProps, persisted)'
    summary: Registers a keytip
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'register(keytipProps: IKeytipProps, persisted?: boolean): string;'
      parameters:
        - id: keytipProps
          description: Keytip to register
          type: IKeytipProps
        - id: persisted
          description: 'T/F if this keytip should be persisted, default is false'
          type: boolean
      return:
        type: string
        description: Unique ID for this keytip
  - name: 'unregister(keytipToRemove, uniqueID, persisted)'
    uid: '@fluentui/react-internal!KeytipManager#unregister:member(1)'
    package: '@fluentui/react-internal!'
    fullName: 'unregister(keytipToRemove, uniqueID, persisted)'
    summary: Unregisters a keytip
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        unregister(keytipToRemove: IKeytipProps, uniqueID: string, persisted?:
        boolean): void;
      parameters:
        - id: keytipToRemove
          description: IKeytipProps of the keytip to remove
          type: IKeytipProps
        - id: uniqueID
          description: Unique ID of this keytip
          type: string
        - id: persisted
          description: 'T/F if this keytip should be persisted, default is false'
          type: boolean
      return:
        type: void
        description: ''
  - name: 'update(keytipProps, uniqueID)'
    uid: '@fluentui/react-internal!KeytipManager#update:member(1)'
    package: '@fluentui/react-internal!'
    fullName: 'update(keytipProps, uniqueID)'
    summary: Update a keytip
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'update(keytipProps: IKeytipProps, uniqueID: string): void;'
      parameters:
        - id: keytipProps
          description: Keytip to update
          type: IKeytipProps
        - id: uniqueID
          description: Unique ID of this keytip
          type: string
      return:
        type: void
        description: ''
