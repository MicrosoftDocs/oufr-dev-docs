### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IDialogContentProps:interface'
    name: IDialogContentProps
    fullName: IDialogContentProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.ClassAttributes<DialogContentBase> '
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IDialogContentProps#className:member'
      - '@fluentui/react-internal!IDialogContentProps#closeButtonAriaLabel:member'
      - '@fluentui/react-internal!IDialogContentProps#componentRef:member'
      - '@fluentui/react-internal!IDialogContentProps#draggableHeaderClassName:member'
      - '@fluentui/react-internal!IDialogContentProps#isMultiline:member'
      - '@fluentui/react-internal!IDialogContentProps#onDismiss:member'
      - '@fluentui/react-internal!IDialogContentProps#responsiveMode:member'
      - '@fluentui/react-internal!IDialogContentProps#showCloseButton:member'
      - '@fluentui/react-internal!IDialogContentProps#styles:member'
      - '@fluentui/react-internal!IDialogContentProps#subText:member'
      - '@fluentui/react-internal!IDialogContentProps#subTextId:member'
      - '@fluentui/react-internal!IDialogContentProps#theme:member'
      - '@fluentui/react-internal!IDialogContentProps#title:member'
      - '@fluentui/react-internal!IDialogContentProps#titleId:member'
      - '@fluentui/react-internal!IDialogContentProps#titleProps:member'
      - '@fluentui/react-internal!IDialogContentProps#topButtonsProps:member'
      - '@fluentui/react-internal!IDialogContentProps#type:member'
  - uid: '@fluentui/react-internal!IDialogContentProps#className:member'
    summary: Optional override class name
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IDialogContentProps#closeButtonAriaLabel:member'
    summary: Label to be passed to to aria-label of close button
    name: closeButtonAriaLabel
    fullName: closeButtonAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'closeButtonAriaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IDialogContentProps#componentRef:member'
    summary: >-
      Optional callback to access the IDialogContent interface. Use this instead of ref for accessing the public methods
      and properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IDialogContent>;'
      return:
        type:
          - IRefObject<IDialogContent>
  - uid: '@fluentui/react-internal!IDialogContentProps#draggableHeaderClassName:member'
    summary: The classname for when the header is draggable
    name: draggableHeaderClassName
    fullName: draggableHeaderClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'draggableHeaderClassName?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IDialogContentProps#isMultiline:member'
    summary: Is inside a multiline wrapper
    name: isMultiline
    fullName: isMultiline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isMultiline?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IDialogContentProps#onDismiss:member'
    summary: 'Callback for when the Dialog is dismissed from the close button or light dismiss, before the animation completes.'
    name: onDismiss
    fullName: onDismiss
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onDismiss?: (ev?: React.MouseEvent<HTMLButtonElement>) => any;'
      return:
        type:
          - '(ev?: React.MouseEvent<HTMLButtonElement>) => any'
  - uid: '@fluentui/react-internal!IDialogContentProps#responsiveMode:member'
    summary: Responsive mode passed in from decorator.
    name: responsiveMode
    fullName: responsiveMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'responsiveMode?: ResponsiveMode;'
      return:
        type:
          - ResponsiveMode
  - uid: '@fluentui/react-internal!IDialogContentProps#showCloseButton:member'
    summary: Show an 'x' close button in the upper-right corner
    name: showCloseButton
    fullName: showCloseButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showCloseButton?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IDialogContentProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IDialogContentStyleProps, IDialogContentStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IDialogContentStyleProps, IDialogContentStyles>'
  - uid: '@fluentui/react-internal!IDialogContentProps#subText:member'
    summary: The subtext to display in the dialog
    name: subText
    fullName: subText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subText?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IDialogContentProps#subTextId:member'
    summary: The Id for subText container
    name: subTextId
    fullName: subTextId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subTextId?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IDialogContentProps#theme:member'
    summary: Theme provided by HOC.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
  - uid: '@fluentui/react-internal!IDialogContentProps#title:member'
    summary: The title text to display at the top of the dialog.
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'title?: string | JSX.Element;'
      return:
        type:
          - string | JSX.Element
  - uid: '@fluentui/react-internal!IDialogContentProps#titleId:member'
    summary: The Id for title container
    deprecated:
      content: use the `id` attribute in `titleProps` instead.
    name: titleId
    fullName: titleId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'titleId?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IDialogContentProps#titleProps:member'
    summary: The props for title container.
    name: titleProps
    fullName: titleProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'titleProps?: React.HTMLAttributes<HTMLDivElement>;'
      return:
        type:
          - React.HTMLAttributes<HTMLDivElement>
  - uid: '@fluentui/react-internal!IDialogContentProps#topButtonsProps:member'
    summary: Other top buttons that will show up next to the close button
    name: topButtonsProps
    fullName: topButtonsProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'topButtonsProps?: IButtonProps[];'
      return:
        type:
          - 'IButtonProps[]'
  - uid: '@fluentui/react-internal!IDialogContentProps#type:member'
    summary: The type of Dialog to display.
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type?: DialogType;'
      return:
        type:
          - DialogType
