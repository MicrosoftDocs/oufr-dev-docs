### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!ITooltipHostProps:interface'
    summary: >-
      TooltipHost props. Note that native props (such as `id`<!-- -->, `className`<!-- -->, and `aria-` props) are
      passed through to the Tooltip itself, rather than being used on the host element.
    name: ITooltipHostProps
    fullName: ITooltipHostProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.HTMLAttributes<HTMLDivElement | TooltipHostBase> '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!ITooltipHostProps#calloutProps:member'
      - 'office-ui-fabric-react!ITooltipHostProps#className:member'
      - 'office-ui-fabric-react!ITooltipHostProps#closeDelay:member'
      - 'office-ui-fabric-react!ITooltipHostProps#componentRef:member'
      - 'office-ui-fabric-react!ITooltipHostProps#content:member'
      - 'office-ui-fabric-react!ITooltipHostProps#delay:member'
      - 'office-ui-fabric-react!ITooltipHostProps#directionalHint:member'
      - 'office-ui-fabric-react!ITooltipHostProps#directionalHintForRTL:member'
      - 'office-ui-fabric-react!ITooltipHostProps#hostClassName:member'
      - 'office-ui-fabric-react!ITooltipHostProps#id:member'
      - 'office-ui-fabric-react!ITooltipHostProps#onTooltipToggle:member(1)'
      - 'office-ui-fabric-react!ITooltipHostProps#overflowMode:member'
      - 'office-ui-fabric-react!ITooltipHostProps#setAriaDescribedBy:member'
      - 'office-ui-fabric-react!ITooltipHostProps#styles:member'
      - 'office-ui-fabric-react!ITooltipHostProps#theme:member'
      - 'office-ui-fabric-react!ITooltipHostProps#tooltipProps:member'
  - uid: 'office-ui-fabric-react!ITooltipHostProps#calloutProps:member'
    summary: Additional properties to pass through for Callout.
    name: calloutProps
    fullName: calloutProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calloutProps?: ICalloutProps;'
      return:
        type:
          - ICalloutProps
  - uid: 'office-ui-fabric-react!ITooltipHostProps#className:member'
    summary: >-
      Class name to apply to the \*tooltip itself\*, not the host. To apply a class to the host, use `hostClassName` or
      `styles.root`<!-- -->.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!ITooltipHostProps#closeDelay:member'
    summary: >-
      Number of milliseconds to delay closing the tooltip, so that the user has time to hover over the tooltip and
      interact with it. Hovering over the tooltip will count as hovering over the host, so that the tooltip will stay
      open if the user is actively interacting with it.
    name: closeDelay
    fullName: closeDelay
    langs:
      - typeScript
    type: property
    syntax:
      content: 'closeDelay?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!ITooltipHostProps#componentRef:member'
    summary: >-
      Optional callback to access the ITooltipHost interface. Use this instead of ref for accessing the public methods
      and properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<ITooltipHost>;'
      return:
        type:
          - IRefObject<ITooltipHost>
  - uid: 'office-ui-fabric-react!ITooltipHostProps#content:member'
    summary: Content to display in the Tooltip.
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content?: string | JSX.Element | JSX.Element[];'
      return:
        type:
          - 'string | JSX.Element | JSX.Element[]'
  - uid: 'office-ui-fabric-react!ITooltipHostProps#delay:member'
    summary: Length of delay before showing the tooltip on hover.
    name: delay
    fullName: delay
    langs:
      - typeScript
    type: property
    syntax:
      content: 'delay?: TooltipDelay;'
      return:
        type:
          - 'office-ui-fabric-react!TooltipDelay:enum'
  - uid: 'office-ui-fabric-react!ITooltipHostProps#directionalHint:member'
    summary: How the tooltip should be anchored to its `targetElement`<!-- -->.
    name: directionalHint
    fullName: directionalHint
    langs:
      - typeScript
    type: property
    syntax:
      content: 'directionalHint?: DirectionalHint;'
      return:
        type:
          - DirectionalHint
  - uid: 'office-ui-fabric-react!ITooltipHostProps#directionalHintForRTL:member'
    summary: 'How the element should be positioned in RTL layouts. If not specified, a mirror of `directionalHint` will be used.'
    name: directionalHintForRTL
    fullName: directionalHintForRTL
    langs:
      - typeScript
    type: property
    syntax:
      content: 'directionalHintForRTL?: DirectionalHint;'
      return:
        type:
          - DirectionalHint
  - uid: 'office-ui-fabric-react!ITooltipHostProps#hostClassName:member'
    summary: Class name to apply to tooltip host.
    name: hostClassName
    fullName: hostClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hostClassName?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!ITooltipHostProps#id:member'
    summary: Optional ID to pass through to the tooltip (not used on the host itself). Auto-generated if not provided.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!ITooltipHostProps#onTooltipToggle:member(1)'
    summary: 'Notifies when tooltip becomes visible or hidden, whatever the trigger was.'
    name: onTooltipToggle(isTooltipVisible)
    fullName: onTooltipToggle(isTooltipVisible)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'onTooltipToggle?(isTooltipVisible: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: isTooltipVisible
          description: ''
          type:
            - boolean
  - uid: 'office-ui-fabric-react!ITooltipHostProps#overflowMode:member'
    summary: >-
      If this is unset (the default), the tooltip is always shown even if there's no overflow.


      If set, only show the tooltip if the specified element (`Self` or `Parent`<!-- -->) has overflow. When set to
      `Parent`<!-- -->, the parent element is also used as the tooltip's target element.


      Note that even with `Self` mode, the TooltipHost \*does not\* check whether any children have overflow.
    name: overflowMode
    fullName: overflowMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowMode?: TooltipOverflowMode;'
      return:
        type:
          - 'office-ui-fabric-react!TooltipOverflowMode:enum'
  - uid: 'office-ui-fabric-react!ITooltipHostProps#setAriaDescribedBy:member'
    summary: >-
      Whether or not to mark the TooltipHost root element as described by the tooltip. If not specified, the caller
      should pass an `id` to the TooltipHost (to be passed through to the Tooltip) and mark the appropriate element as
      `aria-describedby` the `id`<!-- -->.
    name: setAriaDescribedBy
    fullName: setAriaDescribedBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'setAriaDescribedBy?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!ITooltipHostProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ITooltipHostStyleProps, ITooltipHostStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<ITooltipHostStyleProps, ITooltipHostStyles>'
  - uid: 'office-ui-fabric-react!ITooltipHostProps#theme:member'
    summary: Theme provided by higher-order component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@uifabric/styling!ITheme:interface'
  - uid: 'office-ui-fabric-react!ITooltipHostProps#tooltipProps:member'
    summary: Additional properties to pass through for Tooltip.
    name: tooltipProps
    fullName: tooltipProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tooltipProps?: ITooltipProps;'
      return:
        type:
          - 'office-ui-fabric-react!ITooltipProps:interface'
