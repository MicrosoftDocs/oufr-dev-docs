### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IActivityItemProps:interface'
    name: IActivityItemProps
    fullName: IActivityItemProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.AllHTMLAttributes<HTMLElement> '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IActivityItemProps#activityDescription:member'
      - 'office-ui-fabric-react!IActivityItemProps#activityDescriptionText:member'
      - 'office-ui-fabric-react!IActivityItemProps#activityIcon:member'
      - 'office-ui-fabric-react!IActivityItemProps#activityPersonas:member'
      - 'office-ui-fabric-react!IActivityItemProps#animateBeaconSignal:member'
      - 'office-ui-fabric-react!IActivityItemProps#beaconColorOne:member'
      - 'office-ui-fabric-react!IActivityItemProps#beaconColorTwo:member'
      - 'office-ui-fabric-react!IActivityItemProps#comments:member'
      - 'office-ui-fabric-react!IActivityItemProps#commentText:member'
      - 'office-ui-fabric-react!IActivityItemProps#isCompact:member'
      - 'office-ui-fabric-react!IActivityItemProps#onRenderActivityDescription:member'
      - 'office-ui-fabric-react!IActivityItemProps#onRenderComments:member'
      - 'office-ui-fabric-react!IActivityItemProps#onRenderIcon:member'
      - 'office-ui-fabric-react!IActivityItemProps#onRenderTimeStamp:member'
      - 'office-ui-fabric-react!IActivityItemProps#styles:member'
      - 'office-ui-fabric-react!IActivityItemProps#timeStamp:member'
  - uid: 'office-ui-fabric-react!IActivityItemProps#activityDescription:member'
    summary: >-
      An element describing the activity that took place. If no activityDescription, activityDescriptionText, or
      onRenderActivityDescription are included, no description of the activity is shown.
    name: activityDescription
    fullName: activityDescription
    langs:
      - typeScript
    type: property
    syntax:
      content: 'activityDescription?: React.ReactNode[] | React.ReactNode;'
      return:
        type:
          - 'React.ReactNode[] | React.ReactNode'
  - uid: 'office-ui-fabric-react!IActivityItemProps#activityDescriptionText:member'
    summary: >-
      Text describing the activity that occurred and naming the people involved in it. Deprecated, use
      `activityDescription` instead.
    deprecated:
      content: Use `activityDescription` instead.
    name: activityDescriptionText
    fullName: activityDescriptionText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'activityDescriptionText?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IActivityItemProps#activityIcon:member'
    summary: An element containing an icon shown next to the activity item.
    name: activityIcon
    fullName: activityIcon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'activityIcon?: React.ReactNode;'
      return:
        type:
          - React.ReactNode
  - uid: 'office-ui-fabric-react!IActivityItemProps#activityPersonas:member'
    summary: 'If activityIcon is not set, then the persona props in this array will be used as the icon for this activity item.'
    name: activityPersonas
    fullName: activityPersonas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'activityPersonas?: Array<IPersonaSharedProps>;'
      return:
        type:
          - Array<IPersonaSharedProps>
  - uid: 'office-ui-fabric-react!IActivityItemProps#animateBeaconSignal:member'
    summary: >-
      Enables/Disables the beacon that radiates from the center of the center of the activity icon. Signals an activity
      has started.
    name: animateBeaconSignal
    fullName: animateBeaconSignal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'animateBeaconSignal?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IActivityItemProps#beaconColorOne:member'
    summary: Beacon color one
    name: beaconColorOne
    fullName: beaconColorOne
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beaconColorOne?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IActivityItemProps#beaconColorTwo:member'
    summary: Beacon color two
    name: beaconColorTwo
    fullName: beaconColorTwo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beaconColorTwo?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IActivityItemProps#comments:member'
    summary: >-
      An element containing the text of comments or @<!-- -->mention messages. If no comments, commentText, or
      onRenderComments are included, no comments are shown.
    name: comments
    fullName: comments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'comments?: React.ReactNode[] | React.ReactNode;'
      return:
        type:
          - 'React.ReactNode[] | React.ReactNode'
  - uid: 'office-ui-fabric-react!IActivityItemProps#commentText:member'
    summary: 'Text of comments or @<!-- -->mention messages. Deprecated, use `comments` instead.'
    deprecated:
      content: Use `comments` instead.
    name: commentText
    fullName: commentText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'commentText?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IActivityItemProps#isCompact:member'
    summary: Indicated if the compact styling should be used.
    name: isCompact
    fullName: isCompact
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCompact?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IActivityItemProps#onRenderActivityDescription:member'
    summary: A renderer for the description of the current activity.
    name: onRenderActivityDescription
    fullName: onRenderActivityDescription
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderActivityDescription?: IRenderFunction<IActivityItemProps>;'
      return:
        type:
          - IRenderFunction<IActivityItemProps>
  - uid: 'office-ui-fabric-react!IActivityItemProps#onRenderComments:member'
    summary: A renderer that adds the text of a comment below the activity description.
    name: onRenderComments
    fullName: onRenderComments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderComments?: IRenderFunction<IActivityItemProps>;'
      return:
        type:
          - IRenderFunction<IActivityItemProps>
  - uid: 'office-ui-fabric-react!IActivityItemProps#onRenderIcon:member'
    summary: A renderer to create the icon next to the activity item.
    name: onRenderIcon
    fullName: onRenderIcon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderIcon?: IRenderFunction<IActivityItemProps>;'
      return:
        type:
          - IRenderFunction<IActivityItemProps>
  - uid: 'office-ui-fabric-react!IActivityItemProps#onRenderTimeStamp:member'
    summary: 'A renderer adds a time stamp. If not included, timeStamp is shown as plain text below the activity.'
    name: onRenderTimeStamp
    fullName: onRenderTimeStamp
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderTimeStamp?: IRenderFunction<IActivityItemProps>;'
      return:
        type:
          - IRenderFunction<IActivityItemProps>
  - uid: 'office-ui-fabric-react!IActivityItemProps#styles:member'
    summary: Optional styling for the elements within the Activity Item.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IActivityItemStyles;'
      return:
        type:
          - 'office-ui-fabric-react!IActivityItemStyles:interface'
  - uid: 'office-ui-fabric-react!IActivityItemProps#timeStamp:member'
    summary: 'Element shown as a timestamp on this activity. If not included, no timestamp is shown.'
    name: timeStamp
    fullName: timeStamp
    langs:
      - typeScript
    type: property
    syntax:
      content: 'timeStamp?: string | React.ReactNode[] | React.ReactNode;'
      return:
        type:
          - 'string | React.ReactNode[] | React.ReactNode'
