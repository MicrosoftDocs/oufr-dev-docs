### YamlMime:TSType
name: IBasePickerProps
uid: '@fluentui/react-internal!IBasePickerProps:interface'
package: '@fluentui/react-internal!'
fullName: IBasePickerProps
summary: >-
  Type T is the type of the item that is displayed and searched for by the
  picker. For example, if the picker is displaying persona's then type T could
  either be of Persona or IPersona props
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: '"aria-label"'
    uid: '@fluentui/react-internal!IBasePickerProps#"aria-label":member'
    package: '@fluentui/react-internal!'
    fullName: '"aria-label"'
    summary: >-
      Optional aria-label that will be placed on the element that has the role
      "combobox" attached. Additionally aria-labelled by will get added to the
      supporting input element contained with in the combobox container
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: '[''aria-label'']?: string;'
      return:
        type: string
  - name: className
    uid: '@fluentui/react-internal!IBasePickerProps#className:member'
    package: '@fluentui/react-internal!'
    fullName: className
    summary: ClassName for the picker.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: '@fluentui/react-internal!IBasePickerProps#componentRef:member'
    package: '@fluentui/react-internal!'
    fullName: componentRef
    summary: >-
      Optional callback to access the IBasePicker interface. Use this instead of
      ref for accessing the public methods and properties of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IBasePicker<T>>;'
      return:
        type: IRefObject&lt;IBasePicker&lt;T&gt;&gt;
  - name: createGenericItem
    uid: '@fluentui/react-internal!IBasePickerProps#createGenericItem:member'
    package: '@fluentui/react-internal!'
    fullName: createGenericItem
    summary: >-
      Function that specifies how arbitrary text entered into the well is
      handled.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        createGenericItem?: (input: string, ValidationState: ValidationState) =>
        ISuggestionModel<T> | T;
      return:
        type: >-
          (input: string, ValidationState: ValidationState) =&gt;
          ISuggestionModel&lt;T&gt; | T
  - name: defaultSelectedItems
    uid: '@fluentui/react-internal!IBasePickerProps#defaultSelectedItems:member'
    package: '@fluentui/react-internal!'
    fullName: defaultSelectedItems
    summary: >-
      Initial items that have already been selected and should appear in the
      people picker.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultSelectedItems?: T[];'
      return:
        type: 'T[]'
  - name: disabled
    uid: '@fluentui/react-internal!IBasePickerProps#disabled:member'
    package: '@fluentui/react-internal!'
    fullName: disabled
    summary: Flag for disabling the picker.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: boolean;'
      return:
        type: boolean
  - name: enableSelectedSuggestionAlert
    uid: >-
      @fluentui/react-internal!IBasePickerProps#enableSelectedSuggestionAlert:member
    package: '@fluentui/react-internal!'
    fullName: enableSelectedSuggestionAlert
    summary: >-
      Adds an additional alert for the currently selected suggestion. This prop
      should be set to true for IE11 and below, as it enables proper screen
      reader behavior for each suggestion (since aria-activedescendant does not
      work with IE11). It should not be set for modern browsers (Edge, Chrome).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableSelectedSuggestionAlert?: boolean;'
      return:
        type: boolean
  - name: getTextFromItem
    uid: '@fluentui/react-internal!IBasePickerProps#getTextFromItem:member'
    package: '@fluentui/react-internal!'
    fullName: getTextFromItem
    summary: A callback to get text from an item. Used to autofill text in the pickers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getTextFromItem?: (item: T, currentValue?: string) => string;'
      return:
        type: '(item: T, currentValue?: string) =&gt; string'
  - name: inputProps
    uid: '@fluentui/react-internal!IBasePickerProps#inputProps:member'
    package: '@fluentui/react-internal!'
    fullName: inputProps
    summary: AutoFill input native props
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'inputProps?: IInputProps;'
      return:
        type: IInputProps
  - name: itemLimit
    uid: '@fluentui/react-internal!IBasePickerProps#itemLimit:member'
    package: '@fluentui/react-internal!'
    fullName: itemLimit
    summary: Restrict the amount of selectable items.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemLimit?: number;'
      return:
        type: number
  - name: onBlur
    uid: '@fluentui/react-internal!IBasePickerProps#onBlur:member'
    package: '@fluentui/react-internal!'
    fullName: onBlur
    summary: A callback for when the user moves the focus away from the picker
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onBlur?: React.FocusEventHandler<HTMLInputElement | Autofill>;'
      return:
        type: React.FocusEventHandler&lt;HTMLInputElement | Autofill&gt;
  - name: onChange
    uid: '@fluentui/react-internal!IBasePickerProps#onChange:member'
    package: '@fluentui/react-internal!'
    fullName: onChange
    summary: A callback for when the selected list of items changes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onChange?: (items?: T[]) => void;'
      return:
        type: '(items?: T[]) =&gt; void'
  - name: onDismiss
    uid: '@fluentui/react-internal!IBasePickerProps#onDismiss:member'
    package: '@fluentui/react-internal!'
    fullName: onDismiss
    summary: >-
      A callback to override the default behavior of adding the selected
      suggestion on dismiss. If it returns true or nothing, the selected item
      will be added on dismiss. If false, the selected item will not be added on
      dismiss.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDismiss?: (ev?: any, selectedItem?: T) => boolean | void;'
      return:
        type: '(ev?: any, selectedItem?: T) =&gt; boolean | void'
  - name: onEmptyInputFocus
    uid: '@fluentui/react-internal!IBasePickerProps#onEmptyInputFocus:member'
    package: '@fluentui/react-internal!'
    fullName: onEmptyInputFocus
    summary: >-
      A callback for what should happen when a user clicks within the input
      area.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Please use onEmptyResolveSuggestions instead, as the suggestions aren't
      about setting focus as they are about resolving suggestions when there is
      no input.
    syntax:
      content: 'onEmptyInputFocus?: (selectedItems?: T[]) => T[] | PromiseLike<T[]>;'
      return:
        type: '(selectedItems?: T[]) =&gt; T[] | PromiseLike&lt;T[]&gt;'
  - name: onEmptyResolveSuggestions
    uid: '@fluentui/react-internal!IBasePickerProps#onEmptyResolveSuggestions:member'
    package: '@fluentui/react-internal!'
    fullName: onEmptyResolveSuggestions
    summary: >-
      A callback for what should happen when suggestions are shown without input
      provided. Returns the already selected items so the resolver can filter
      them out. If used in conjunction with resolveDelay this will only kick off
      after the delay throttle.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onEmptyResolveSuggestions?: (selectedItems?: T[]) => T[] |
        PromiseLike<T[]>;
      return:
        type: '(selectedItems?: T[]) =&gt; T[] | PromiseLike&lt;T[]&gt;'
  - name: onFocus
    uid: '@fluentui/react-internal!IBasePickerProps#onFocus:member'
    package: '@fluentui/react-internal!'
    fullName: onFocus
    summary: A callback for when the user put focus on the picker
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `inputProps.onFocus` instead
    syntax:
      content: 'onFocus?: React.FocusEventHandler<HTMLInputElement | Autofill>;'
      return:
        type: React.FocusEventHandler&lt;HTMLInputElement | Autofill&gt;
  - name: onGetMoreResults
    uid: '@fluentui/react-internal!IBasePickerProps#onGetMoreResults:member'
    package: '@fluentui/react-internal!'
    fullName: onGetMoreResults
    summary: >-
      A callback that gets the rest of the results when a user clicks get more
      results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onGetMoreResults?: (filter: string, selectedItems?: T[]) => T[] |
        PromiseLike<T[]>;
      return:
        type: >-
          (filter: string, selectedItems?: T[]) =&gt; T[] |
          PromiseLike&lt;T[]&gt;
  - name: onInputChange
    uid: '@fluentui/react-internal!IBasePickerProps#onInputChange:member'
    package: '@fluentui/react-internal!'
    fullName: onInputChange
    summary: A callback used to modify the input string.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onInputChange?: (input: string) => string;'
      return:
        type: '(input: string) =&gt; string'
  - name: onItemSelected
    uid: '@fluentui/react-internal!IBasePickerProps#onItemSelected:member'
    package: '@fluentui/react-internal!'
    fullName: onItemSelected
    summary: >-
      A callback to process a selection after the user selects something from
      the picker. If the callback returns null, the item will not be added to
      the picker.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onItemSelected?: (selectedItem?: T) => T | PromiseLike<T> | null;'
      return:
        type: '(selectedItem?: T) =&gt; T | PromiseLike&lt;T&gt; | null'
  - name: onRemoveSuggestion
    uid: '@fluentui/react-internal!IBasePickerProps#onRemoveSuggestion:member'
    package: '@fluentui/react-internal!'
    fullName: onRemoveSuggestion
    summary: A callback for when an item is removed from the suggestion list
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRemoveSuggestion?: (item: T) => void;'
      return:
        type: '(item: T) =&gt; void'
  - name: onRenderItem
    uid: '@fluentui/react-internal!IBasePickerProps#onRenderItem:member'
    package: '@fluentui/react-internal!'
    fullName: onRenderItem
    summary: Function that specifies how the selected item will appear.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderItem?: (props: IPickerItemProps<T>) => JSX.Element;'
      return:
        type: '(props: IPickerItemProps&lt;T&gt;) =&gt; JSX.Element'
  - name: onRenderSuggestionsItem
    uid: '@fluentui/react-internal!IBasePickerProps#onRenderSuggestionsItem:member'
    package: '@fluentui/react-internal!'
    fullName: onRenderSuggestionsItem
    summary: Function that specifies how an individual suggestion item will appear.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRenderSuggestionsItem?: (props: T, itemProps: ISuggestionItemProps<T>)
        => JSX.Element;
      return:
        type: '(props: T, itemProps: ISuggestionItemProps&lt;T&gt;) =&gt; JSX.Element'
  - name: onResolveSuggestions
    uid: '@fluentui/react-internal!IBasePickerProps#onResolveSuggestions:member'
    package: '@fluentui/react-internal!'
    fullName: onResolveSuggestions
    summary: >-
      A callback for what should happen when a person types text into the input.
      Returns the already selected items so the resolver can filter them out. If
      used in conjunction with resolveDelay this will only kick off after the
      delay throttle.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onResolveSuggestions: (filter: string, selectedItems?: T[]) => T[] |
        PromiseLike<T[]>;
      return:
        type: >-
          (filter: string, selectedItems?: T[]) =&gt; T[] |
          PromiseLike&lt;T[]&gt;
  - name: onValidateInput
    uid: '@fluentui/react-internal!IBasePickerProps#onValidateInput:member'
    package: '@fluentui/react-internal!'
    fullName: onValidateInput
    summary: >-
      A function used to validate if raw text entered into the well can be added
      into the selected items list
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onValidateInput?: (input: string) => ValidationState;'
      return:
        type: '(input: string) =&gt; ValidationState'
  - name: pickerCalloutProps
    uid: '@fluentui/react-internal!IBasePickerProps#pickerCalloutProps:member'
    package: '@fluentui/react-internal!'
    fullName: pickerCalloutProps
    summary: The properties that will get passed to the Callout component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'pickerCalloutProps?: ICalloutProps;'
      return:
        type: ICalloutProps
  - name: pickerSuggestionsProps
    uid: '@fluentui/react-internal!IBasePickerProps#pickerSuggestionsProps:member'
    package: '@fluentui/react-internal!'
    fullName: pickerSuggestionsProps
    summary: The properties that will get passed to the Suggestions component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'pickerSuggestionsProps?: IBasePickerSuggestionsProps;'
      return:
        type: IBasePickerSuggestionsProps
  - name: removeButtonAriaLabel
    uid: '@fluentui/react-internal!IBasePickerProps#removeButtonAriaLabel:member'
    package: '@fluentui/react-internal!'
    fullName: removeButtonAriaLabel
    summary: Aria label for the "X" button in the selected item component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'removeButtonAriaLabel?: string;'
      return:
        type: string
  - name: resolveDelay
    uid: '@fluentui/react-internal!IBasePickerProps#resolveDelay:member'
    package: '@fluentui/react-internal!'
    fullName: resolveDelay
    summary: >-
      The delay time in ms before resolving suggestions, which is kicked off
      when input has been changed. e.g. If a second input change happens within
      the resolveDelay time, the timer will start over. Only until after the
      timer completes will onResolveSuggestions be called.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resolveDelay?: number;'
      return:
        type: number
  - name: searchingText
    uid: '@fluentui/react-internal!IBasePickerProps#searchingText:member'
    package: '@fluentui/react-internal!'
    fullName: searchingText
    summary: >-
      The text to display while searching for more results in a limited
      suggestions list
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        searchingText?: ((props: {
                input: string;
            }) => string) | string;
      return:
        type: |-
          ((props: {
                  input: string;
              }) =&gt; string) | string
  - name: selectedItems
    uid: '@fluentui/react-internal!IBasePickerProps#selectedItems:member'
    package: '@fluentui/react-internal!'
    fullName: selectedItems
    summary: >-
      The items that the base picker should currently display as selected. If
      this is provided then the picker will act as a controlled component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectedItems?: T[];'
      return:
        type: 'T[]'
  - name: styles
    uid: '@fluentui/react-internal!IBasePickerProps#styles:member'
    package: '@fluentui/react-internal!'
    fullName: styles
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IBasePickerStyleProps,
        IBasePickerStyles>;
      return:
        type: 'IStyleFunctionOrObject&lt;IBasePickerStyleProps, IBasePickerStyles&gt;'
  - name: theme
    uid: '@fluentui/react-internal!IBasePickerProps#theme:member'
    package: '@fluentui/react-internal!'
    fullName: theme
    summary: Theme provided by styled() function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
extends: 'React.Props&lt;any&gt; '
