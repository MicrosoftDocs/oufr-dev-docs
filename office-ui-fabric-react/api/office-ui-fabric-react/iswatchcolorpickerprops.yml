### YamlMime:TSType
name: ISwatchColorPickerProps
uid: 'office-ui-fabric-react!ISwatchColorPickerProps:interface'
package: office-ui-fabric-react!
fullName: ISwatchColorPickerProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: ariaPosInSet
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#ariaPosInSet:member'
    package: office-ui-fabric-react!
    fullName: ariaPosInSet
    summary: >-
      Position this grid is in the parent set (index in a parent menu, for
      example)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaPosInSet?: number;'
      return:
        type: number
  - name: ariaSetSize
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#ariaSetSize:member'
    package: office-ui-fabric-react!
    fullName: ariaSetSize
    summary: 'Size of the parent set (size of parent menu, for example)'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaSetSize?: number;'
      return:
        type: number
  - name: cellBorderWidth
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#cellBorderWidth:member'
    package: office-ui-fabric-react!
    fullName: cellBorderWidth
    summary: 'Width of the border indicating a hovered/selected cell, in pixels'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellBorderWidth?: number;'
      return:
        type: number
  - name: cellHeight
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#cellHeight:member'
    package: office-ui-fabric-react!
    fullName: cellHeight
    summary: 'Height of an individual cell, in pixels'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellHeight?: number;'
      return:
        type: number
  - name: cellMargin
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#cellMargin:member'
    package: office-ui-fabric-react!
    fullName: cellMargin
    summary: 'The distance between cells, in pixels'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellMargin?: number;'
      return:
        type: number
  - name: cellShape
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#cellShape:member'
    package: office-ui-fabric-react!
    fullName: cellShape
    summary: The shape of the color cells.  'circle'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellShape?: ''circle'' | ''square'';'
      return:
        type: '''circle'' | ''square'''
  - name: cellWidth
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#cellWidth:member'
    package: office-ui-fabric-react!
    fullName: cellWidth
    summary: 'Width of an individual cell, in pixels'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellWidth?: number;'
      return:
        type: number
  - name: className
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#className:member'
    package: office-ui-fabric-react!
    fullName: className
    summary: Additional class name to provide on the root element
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: colorCells
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#colorCells:member'
    package: office-ui-fabric-react!
    fullName: colorCells
    summary: >-
      The color cells that will be made available to the user.


      Note: When the reference to this prop changes, regardless of how many
      color cells change, all of the color cells will be re-rendered
      (potentially bad perf) because we memoize based on this prop's reference.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'colorCells: IColorCellProps[];'
      return:
        type: 'IColorCellProps[]'
  - name: columnCount
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#columnCount:member'
    package: office-ui-fabric-react!
    fullName: columnCount
    summary: Number of columns for the swatch color picker
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'columnCount: number;'
      return:
        type: number
  - name: disabled
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#disabled:member'
    package: office-ui-fabric-react!
    fullName: disabled
    summary: Whether the control is disabled.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: boolean;'
      return:
        type: boolean
  - name: doNotContainWithinFocusZone
    uid: >-
      office-ui-fabric-react!ISwatchColorPickerProps#doNotContainWithinFocusZone:member
    package: office-ui-fabric-react!
    fullName: doNotContainWithinFocusZone
    summary: >-
      If false (the default), the grid is contained inside a FocusZone. If true,
      a FocusZone is not used.  false
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'doNotContainWithinFocusZone?: boolean;'
      return:
        type: boolean
  - name: focusOnHover
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#focusOnHover:member'
    package: office-ui-fabric-react!
    fullName: focusOnHover
    summary: Whether to update focus when a cell is hovered.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'focusOnHover?: boolean;'
      return:
        type: boolean
  - name: getColorGridCellStyles
    uid: >-
      office-ui-fabric-react!ISwatchColorPickerProps#getColorGridCellStyles:member
    package: office-ui-fabric-react!
    fullName: getColorGridCellStyles
    summary: Styles for the grid cells.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getColorGridCellStyles?:
        IStyleFunctionOrObject<IColorPickerGridCellStyleProps,
        IColorPickerGridCellStyles>;
      return:
        type: >-
          IStyleFunctionOrObject&lt;IColorPickerGridCellStyleProps,
          IColorPickerGridCellStyles&gt;
  - name: id
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#id:member'
    package: office-ui-fabric-react!
    fullName: id
    summary: >-
      ID for the swatch color picker's root element. Also used as a prefix for
      the IDs of color cells.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id?: string;'
      return:
        type: string
  - name: isControlled
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#isControlled:member'
    package: office-ui-fabric-react!
    fullName: isControlled
    summary: >-
      Indicates whether the SwatchColorPicker is fully controlled. When true,
      the component will not set its internal state to track the selected color.
      Instead, the parent component will be responsible for handling state in
      the callbacks like `onColorChanged`<!-- -->.


      NOTE: This property is a temporary workaround to force the component to be
      fully controllable without breaking existing behavior
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isControlled?: boolean;'
      return:
        type: boolean
  - name: mouseLeaveParentSelector
    uid: >-
      office-ui-fabric-react!ISwatchColorPickerProps#mouseLeaveParentSelector:member
    package: office-ui-fabric-react!
    fullName: mouseLeaveParentSelector
    summary: >-
      Selector to focus on mouse leave. Should only be used in conjunction with
      `focusOnHover`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'mouseLeaveParentSelector?: string | undefined;'
      return:
        type: string | undefined
  - name: onCellFocused
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#onCellFocused:member'
    package: office-ui-fabric-react!
    fullName: onCellFocused
    summary: >-
      Callback for when the user focuses a color cell. If `id` and `color` are
      unspecified, cells are no longer being focused.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCellFocused?: (id?: string, color?: string) => void;'
      return:
        type: '(id?: string, color?: string) =&gt; void'
  - name: onCellHovered
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#onCellHovered:member'
    package: office-ui-fabric-react!
    fullName: onCellHovered
    summary: >-
      Callback for when the user hovers over a color cell. If `id` and `color`
      are unspecified, cells are no longer being hovered.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCellHovered?: (id?: string, color?: string) => void;'
      return:
        type: '(id?: string, color?: string) =&gt; void'
  - name: onColorChanged
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#onColorChanged:member'
    package: office-ui-fabric-react!
    fullName: onColorChanged
    summary: >-
      Callback for when the user changes the color. If `id` and `color` are
      unspecified, there is no selected cell. (e.g. the user executed the
      currently selected cell to unselect it)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onColorChanged?: (id?: string, color?: string) => void;'
      return:
        type: '(id?: string, color?: string) =&gt; void'
  - name: onRenderColorCell
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#onRenderColorCell:member'
    package: office-ui-fabric-react!
    fullName: onRenderColorCell
    summary: Custom render function for the color cell
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderColorCell?: IRenderFunction<IColorCellProps>;'
      return:
        type: IRenderFunction&lt;IColorCellProps&gt;
  - name: positionInSet
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#positionInSet:member'
    package: office-ui-fabric-react!
    fullName: positionInSet
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `ariaPosInSet`
    syntax:
      content: 'positionInSet?: number;'
      return:
        type: number
  - name: selectedId
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#selectedId:member'
    package: office-ui-fabric-react!
    fullName: selectedId
    summary: The ID of color cell that is currently selected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectedId?: string;'
      return:
        type: string
  - name: setSize
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#setSize:member'
    package: office-ui-fabric-react!
    fullName: setSize
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `ariaSetSize`
    syntax:
      content: 'setSize?: number;'
      return:
        type: number
  - name: shouldFocusCircularNavigate
    uid: >-
      office-ui-fabric-react!ISwatchColorPickerProps#shouldFocusCircularNavigate:member
    package: office-ui-fabric-react!
    fullName: shouldFocusCircularNavigate
    summary: >-
      Whether focus should cycle back to the beginning once the user navigates
      past the end (and vice versa). Only relevant if
      `doNotContainWithinFocusZone` is not true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'shouldFocusCircularNavigate?: boolean;'
      return:
        type: boolean
  - name: styles
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#styles:member'
    package: office-ui-fabric-react!
    fullName: styles
    summary: Styles for the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<ISwatchColorPickerStyleProps,
        ISwatchColorPickerStyles>;
      return:
        type: >-
          IStyleFunctionOrObject&lt;ISwatchColorPickerStyleProps,
          ISwatchColorPickerStyles&gt;
  - name: theme
    uid: 'office-ui-fabric-react!ISwatchColorPickerProps#theme:member'
    package: office-ui-fabric-react!
    fullName: theme
    summary: Theme to apply to the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
