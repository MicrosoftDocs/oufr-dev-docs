### YamlMime:TSType
name: IKeytipProps
uid: 'office-ui-fabric-react!IKeytipProps:interface'
package: office-ui-fabric-react!
fullName: IKeytipProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: calloutProps
    uid: 'office-ui-fabric-react!IKeytipProps#calloutProps:member'
    package: office-ui-fabric-react!
    fullName: calloutProps
    summary: ICalloutProps to pass to the callout element
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'calloutProps?: ICalloutProps;'
      return:
        type: ICalloutProps
  - name: content
    uid: 'office-ui-fabric-react!IKeytipProps#content:member'
    package: office-ui-fabric-react!
    fullName: content
    summary: Content to put inside the keytip
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'content: string;'
      return:
        type: string
  - name: disabled
    uid: 'office-ui-fabric-react!IKeytipProps#disabled:member'
    package: office-ui-fabric-react!
    fullName: disabled
    summary: T/F if the corresponding control for this keytip is disabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: boolean;'
      return:
        type: boolean
  - name: hasDynamicChildren
    uid: 'office-ui-fabric-react!IKeytipProps#hasDynamicChildren:member'
    package: office-ui-fabric-react!
    fullName: hasDynamicChildren
    summary: >-
      Whether or not this keytip will have children keytips that are dynamically
      created (DOM is generated on keytip activation). Common cases are a Pivot
      or Modal.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hasDynamicChildren?: boolean;'
      return:
        type: boolean
  - name: hasMenu
    uid: 'office-ui-fabric-react!IKeytipProps#hasMenu:member'
    package: office-ui-fabric-react!
    fullName: hasMenu
    summary: >-
      Whether or not this keytip belongs to a component that has a menu Keytip
      mode will stay on when a menu is opened, even if the items in that menu
      have no keytips
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hasMenu?: boolean;'
      return:
        type: boolean
  - name: keySequences
    uid: 'office-ui-fabric-react!IKeytipProps#keySequences:member'
    package: office-ui-fabric-react!
    fullName: keySequences
    summary: >-
      Array of KeySequences which is the full key sequence to trigger this
      keytip Should not include initial 'start' key sequence
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'keySequences: string[];'
      return:
        type: 'string[]'
  - name: offset
    uid: 'office-ui-fabric-react!IKeytipProps#offset:member'
    package: office-ui-fabric-react!
    fullName: offset
    summary: >-
      Offset x and y for the keytip, added from the top-left corner By default
      the keytip will be anchored to the bottom-center of the element
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'offset?: Point;'
      return:
        type: '<xref uid="@fluentui/utilities!Point:interface" />'
  - name: onExecute
    uid: 'office-ui-fabric-react!IKeytipProps#onExecute:member'
    package: office-ui-fabric-react!
    fullName: onExecute
    summary: >-
      Function to call when this keytip is activated. 'executeTarget' is the DOM
      element marked with 'data-ktp-execute-target'. 'target' is the DOM element
      marked with 'data-ktp-target'.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onExecute?: (executeTarget: HTMLElement | null, target: HTMLElement |
        null) => void;
      return:
        type: >-
          (executeTarget: HTMLElement | null, target: HTMLElement | null) =&gt;
          void
  - name: onReturn
    uid: 'office-ui-fabric-react!IKeytipProps#onReturn:member'
    package: office-ui-fabric-react!
    fullName: onReturn
    summary: >-
      Function to call when the keytip is the currentKeytip and a return
      sequence is pressed. 'executeTarget' is the DOM element marked with
      'data-ktp-execute-target'. 'target' is the DOM element marked with
      'data-ktp-target'.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onReturn?: (executeTarget: HTMLElement | null, target: HTMLElement |
        null) => void;
      return:
        type: >-
          (executeTarget: HTMLElement | null, target: HTMLElement | null) =&gt;
          void
  - name: overflowSetSequence
    uid: 'office-ui-fabric-react!IKeytipProps#overflowSetSequence:member'
    package: office-ui-fabric-react!
    fullName: overflowSetSequence
    summary: >-
      Full KeySequence of the overflow set button, will be set automatically if
      this keytip is inside an overflow
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'overflowSetSequence?: string[];'
      return:
        type: 'string[]'
  - name: styles
    uid: 'office-ui-fabric-react!IKeytipProps#styles:member'
    package: office-ui-fabric-react!
    fullName: styles
    summary: Optional styles for the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IKeytipStyleProps, IKeytipStyles>;'
      return:
        type: 'IStyleFunctionOrObject&lt;IKeytipStyleProps, IKeytipStyles&gt;'
  - name: theme
    uid: 'office-ui-fabric-react!IKeytipProps#theme:member'
    package: office-ui-fabric-react!
    fullName: theme
    summary: Theme for the component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
  - name: visible
    uid: 'office-ui-fabric-react!IKeytipProps#visible:member'
    package: office-ui-fabric-react!
    fullName: visible
    summary: T/F if the keytip is visible
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'visible?: boolean;'
      return:
        type: boolean
