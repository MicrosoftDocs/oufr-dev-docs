### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!ICheckProps:interface'
    name: ICheckProps
    fullName: ICheckProps
    langs:
      - typeScript
    type: interface
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!ICheckProps#alwaysShowCheck:member'
      - 'office-ui-fabric-react!ICheckProps#checked:member'
      - 'office-ui-fabric-react!ICheckProps#className:member'
      - 'office-ui-fabric-react!ICheckProps#componentRef:member'
      - 'office-ui-fabric-react!ICheckProps#styles:member'
      - 'office-ui-fabric-react!ICheckProps#theme:member'
      - 'office-ui-fabric-react!ICheckProps#useFastIcons:member'
  - uid: 'office-ui-fabric-react!ICheckProps#alwaysShowCheck:member'
    deprecated:
      content: Not used
    name: alwaysShowCheck
    fullName: alwaysShowCheck
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alwaysShowCheck?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!ICheckProps#checked:member'
    summary: Whether or not this menu item is currently checked.
    name: checked
    fullName: checked
    langs:
      - typeScript
    type: property
    syntax:
      content: 'checked?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!ICheckProps#className:member'
    summary: Additional css class to apply to the Check
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!ICheckProps#componentRef:member'
    summary: Gets the component ref.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<ICheckProps>;'
      return:
        type:
          - IRefObject<ICheckProps>
  - uid: 'office-ui-fabric-react!ICheckProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ICheckStyleProps, ICheckStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<ICheckStyleProps, ICheckStyles>'
  - uid: 'office-ui-fabric-react!ICheckProps#theme:member'
    summary: Theme provided by HOC.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - ITheme
  - uid: 'office-ui-fabric-react!ICheckProps#useFastIcons:member'
    summary: >-
      Whether to use fast icon components. The icons can't be targeted by customization but are still customizable via
      class names.
    name: useFastIcons
    fullName: useFastIcons
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useFastIcons?: boolean;'
      return:
        type:
          - boolean
