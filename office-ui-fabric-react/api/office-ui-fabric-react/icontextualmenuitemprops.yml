### YamlMime:TSType
name: IContextualMenuItemProps
uid: 'office-ui-fabric-react!IContextualMenuItemProps:interface'
package: office-ui-fabric-react!
fullName: IContextualMenuItemProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: className
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#className:member'
    package: office-ui-fabric-react!
    fullName: className
    summary: Additional css class to apply to the ContextualMenuItem
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: classNames
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#classNames:member'
    package: office-ui-fabric-react!
    fullName: classNames
    summary: Classnames for different aspects of a menu item
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'classNames: IMenuItemClassNames;'
      return:
        type: '<xref uid="@fluentui/react-internal!IMenuItemClassNames:interface" />'
  - name: componentRef
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#componentRef:member'
    package: office-ui-fabric-react!
    fullName: componentRef
    summary: >-
      Optional callback to access the IContextualMenuRenderItem interface. Use
      this instead of ref for accessing the public methods and properties of the
      component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IContextualMenuRenderItem>;'
      return:
        type: IRefObject&lt;IContextualMenuRenderItem&gt;
  - name: dismissMenu
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#dismissMenu:member'
    package: office-ui-fabric-react!
    fullName: dismissMenu
    summary: >-
      This prop will get set by ContextualMenu and can be called to close the
      menu this item belongs to. If dismissAll is true, all menus will be
      closed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dismissMenu?: (ev?: any, dismissAll?: boolean) => void;'
      return:
        type: '(ev?: any, dismissAll?: boolean) =&gt; void'
  - name: dismissSubMenu
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#dismissSubMenu:member'
    package: office-ui-fabric-react!
    fullName: dismissSubMenu
    summary: >-
      This prop will get set by ContextualMenu and can be called to close this
      item's subMenu, if present.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dismissSubMenu?: () => void;'
      return:
        type: () =&gt; void
  - name: getSubmenuTarget
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#getSubmenuTarget:member'
    package: office-ui-fabric-react!
    fullName: getSubmenuTarget
    summary: >-
      This prop will get set by the wrapping component and will return the
      element that wraps this ContextualMenuItem. Used for openSubMenu.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSubmenuTarget?: () => HTMLElement | undefined;'
      return:
        type: () =&gt; HTMLElement | undefined
  - name: hasIcons
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#hasIcons:member'
    package: office-ui-fabric-react!
    fullName: hasIcons
    summary: If this item has icons
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hasIcons: boolean | undefined;'
      return:
        type: boolean | undefined
  - name: index
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#index:member'
    package: office-ui-fabric-react!
    fullName: index
    summary: Index of the item
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'index: number;'
      return:
        type: number
  - name: item
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#item:member'
    package: office-ui-fabric-react!
    fullName: item
    summary: The item to display
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'item: IContextualMenuItem;'
      return:
        type: IContextualMenuItem
  - name: onCheckmarkClick
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#onCheckmarkClick:member'
    package: office-ui-fabric-react!
    fullName: onCheckmarkClick
    summary: Click handler for the checkmark
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCheckmarkClick?: (item: IContextualMenuItem, ev:
        React.MouseEvent<HTMLElement>) => void;
      return:
        type: >-
          (item: IContextualMenuItem, ev: React.MouseEvent&lt;HTMLElement&gt;)
          =&gt; void
  - name: openSubMenu
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#openSubMenu:member'
    package: office-ui-fabric-react!
    fullName: openSubMenu
    summary: >-
      This prop will get set by ContextualMenu and can be called to open this
      item's subMenu, if present.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'openSubMenu?: (item: any, target: HTMLElement) => void;'
      return:
        type: '(item: any, target: HTMLElement) =&gt; void'
  - name: styles
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#styles:member'
    package: office-ui-fabric-react!
    fullName: styles
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IContextualMenuItemStyleProps,
        IContextualMenuItemStyles>;
      return:
        type: >-
          IStyleFunctionOrObject&lt;IContextualMenuItemStyleProps,
          IContextualMenuItemStyles&gt;
  - name: theme
    uid: 'office-ui-fabric-react!IContextualMenuItemProps#theme:member'
    package: office-ui-fabric-react!
    fullName: theme
    summary: Theme provided by High-Order Component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
extends: 'React.HTMLAttributes&lt;IContextualMenuItemProps&gt; '
