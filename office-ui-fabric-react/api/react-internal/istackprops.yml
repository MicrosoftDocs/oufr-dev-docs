### YamlMime:TSType
name: IStackProps
uid: '@fluentui/react-internal!IStackProps:interface'
package: '@fluentui/react-internal!'
fullName: IStackProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: as
    uid: '@fluentui/react-internal!IStackProps#as:member'
    package: '@fluentui/react-internal!'
    fullName: as
    summary: Defines how to render the Stack.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'as?: React.ElementType<React.HTMLAttributes<HTMLElement>>;'
      return:
        type: React.ElementType&lt;React.HTMLAttributes&lt;HTMLElement&gt;&gt;
  - name: disableShrink
    uid: '@fluentui/react-internal!IStackProps#disableShrink:member'
    package: '@fluentui/react-internal!'
    fullName: disableShrink
    summary: >-
      Defines whether Stack children should not shrink to fit the available
      space.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disableShrink?: boolean;'
      return:
        type: boolean
  - name: gap
    uid: '@fluentui/react-internal!IStackProps#gap:member'
    package: '@fluentui/react-internal!'
    fullName: gap
    summary: >-
      Defines the spacing between Stack children. The property is specified as a
      value for 'row gap', followed optionally by a value for 'column gap'. If
      'column gap' is omitted, it's set to the same value as 'row gap'.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `childrenGap` token in `IStackTokens` instead.
    syntax:
      content: 'gap?: number | string;'
      return:
        type: number | string
  - name: grow
    uid: '@fluentui/react-internal!IStackProps#grow:member'
    package: '@fluentui/react-internal!'
    fullName: grow
    summary: Defines how much to grow the Stack in proportion to its siblings.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'grow?: boolean | number | ''inherit'' | ''initial'' | ''unset'';'
      return:
        type: boolean | number | 'inherit' | 'initial' | 'unset'
  - name: horizontal
    uid: '@fluentui/react-internal!IStackProps#horizontal:member'
    package: '@fluentui/react-internal!'
    fullName: horizontal
    summary: Defines whether to render Stack children horizontally.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'horizontal?: boolean;'
      return:
        type: boolean
  - name: horizontalAlign
    uid: '@fluentui/react-internal!IStackProps#horizontalAlign:member'
    package: '@fluentui/react-internal!'
    fullName: horizontalAlign
    summary: Defines how to align Stack children horizontally (along the x-axis).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'horizontalAlign?: Alignment;'
      return:
        type: Alignment
  - name: maxHeight
    uid: '@fluentui/react-internal!IStackProps#maxHeight:member'
    package: '@fluentui/react-internal!'
    fullName: maxHeight
    summary: Defines the maximum height that the Stack can take.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `maxHeight` token in `IStackTokens` instead.
    syntax:
      content: 'maxHeight?: number | string;'
      return:
        type: number | string
  - name: maxWidth
    uid: '@fluentui/react-internal!IStackProps#maxWidth:member'
    package: '@fluentui/react-internal!'
    fullName: maxWidth
    summary: Defines the maximum width that the Stack can take.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `maxWidth` token in `IStackTokens` instead.
    syntax:
      content: 'maxWidth?: number | string;'
      return:
        type: number | string
  - name: padding
    uid: '@fluentui/react-internal!IStackProps#padding:member'
    package: '@fluentui/react-internal!'
    fullName: padding
    summary: Defines the inner padding of the Stack.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `padding` token in `IStackTokens` instead.
    syntax:
      content: 'padding?: number | string;'
      return:
        type: number | string
  - name: reversed
    uid: '@fluentui/react-internal!IStackProps#reversed:member'
    package: '@fluentui/react-internal!'
    fullName: reversed
    summary: >-
      Defines whether to render Stack children in the opposite direction
      (bottom-to-top if it's a vertical Stack and right-to-left if it's a
      horizontal Stack).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'reversed?: boolean;'
      return:
        type: boolean
  - name: verticalAlign
    uid: '@fluentui/react-internal!IStackProps#verticalAlign:member'
    package: '@fluentui/react-internal!'
    fullName: verticalAlign
    summary: Defines how to align Stack children vertically (along the y-axis).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'verticalAlign?: Alignment;'
      return:
        type: Alignment
  - name: verticalFill
    uid: '@fluentui/react-internal!IStackProps#verticalFill:member'
    package: '@fluentui/react-internal!'
    fullName: verticalFill
    summary: >-
      Defines whether the Stack should take up 100% of the height of its parent.
      This property is required to be set to true when using the `grow` flag on
      children in vertical oriented Stacks. Stacks are rendered as block
      elements and grow horizontally to the container already.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'verticalFill?: boolean;'
      return:
        type: boolean
  - name: wrap
    uid: '@fluentui/react-internal!IStackProps#wrap:member'
    package: '@fluentui/react-internal!'
    fullName: wrap
    summary: >-
      Defines whether Stack children should wrap onto multiple rows or columns
      when they are about to overflow the size of the Stack.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'wrap?: boolean;'
      return:
        type: boolean
extends: ISlottableProps&lt;IStackSlots&gt;
