### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IResizeGroupState:interface'
    name: IResizeGroupState
    fullName: IResizeGroupState
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IResizeGroupState#dataToMeasure:member'
      - '@fluentui/react-internal!IResizeGroupState#measureContainer:member'
      - '@fluentui/react-internal!IResizeGroupState#renderedData:member'
      - '@fluentui/react-internal!IResizeGroupState#resizeDirection:member'
  - uid: '@fluentui/react-internal!IResizeGroupState#dataToMeasure:member'
    summary: Data to render in a hidden div for measurement
    name: dataToMeasure
    fullName: dataToMeasure
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dataToMeasure?: any;'
      return:
        type:
          - any
  - uid: '@fluentui/react-internal!IResizeGroupState#measureContainer:member'
    summary: Set to true when the content container might have new dimensions and should be remeasured.
    name: measureContainer
    fullName: measureContainer
    langs:
      - typeScript
    type: property
    syntax:
      content: 'measureContainer?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IResizeGroupState#renderedData:member'
    summary: Final data used to render proper sized component
    name: renderedData
    fullName: renderedData
    langs:
      - typeScript
    type: property
    syntax:
      content: 'renderedData?: any;'
      return:
        type:
          - any
  - uid: '@fluentui/react-internal!IResizeGroupState#resizeDirection:member'
    summary: >-
      Are we resizing to accommodate having more or less available space? The 'grow' direction is when the container may
      have more room than the last render, such as when a window resize occurs. This means we will try to fit more
      content in the window. The 'shrink' direction is when the contents don't fit in the container and we need to find
      a transformation of the data that makes everything fit.
    name: resizeDirection
    fullName: resizeDirection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'resizeDirection?: ''grow'' | ''shrink'';'
      return:
        type:
          - '''grow'' | ''shrink'''
