### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IDropdownProps:interface'
    name: IDropdownProps
    fullName: IDropdownProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'ISelectableDroppableTextProps<IDropdown, HTMLDivElement> '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IDropdownProps#defaultSelectedKeys:member'
      - 'office-ui-fabric-react!IDropdownProps#dropdownWidth:member'
      - 'office-ui-fabric-react!IDropdownProps#isDisabled:member'
      - 'office-ui-fabric-react!IDropdownProps#keytipProps:member'
      - 'office-ui-fabric-react!IDropdownProps#multiSelectDelimiter:member'
      - 'office-ui-fabric-react!IDropdownProps#notifyOnReselect:member'
      - 'office-ui-fabric-react!IDropdownProps#onChange:member'
      - 'office-ui-fabric-react!IDropdownProps#onChanged:member'
      - 'office-ui-fabric-react!IDropdownProps#onRenderCaretDown:member'
      - 'office-ui-fabric-react!IDropdownProps#onRenderLabel:member'
      - 'office-ui-fabric-react!IDropdownProps#onRenderPlaceholder:member'
      - 'office-ui-fabric-react!IDropdownProps#onRenderPlaceHolder:member'
      - 'office-ui-fabric-react!IDropdownProps#onRenderTitle:member'
      - 'office-ui-fabric-react!IDropdownProps#options:member'
      - 'office-ui-fabric-react!IDropdownProps#placeHolder:member'
      - 'office-ui-fabric-react!IDropdownProps#responsiveMode:member'
      - 'office-ui-fabric-react!IDropdownProps#selectedKeys:member'
      - 'office-ui-fabric-react!IDropdownProps#styles:member'
      - 'office-ui-fabric-react!IDropdownProps#theme:member'
  - uid: 'office-ui-fabric-react!IDropdownProps#defaultSelectedKeys:member'
    summary: >-
      Keys that will be initially used to set selected items. This prop is only used when `multiSelect` is true (use
      `defaultSelectedKey` for single select). Mutually exclusive with `selectedKeys`<!-- -->.
    name: defaultSelectedKeys
    fullName: defaultSelectedKeys
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultSelectedKeys?: string[] | number[];'
      return:
        type:
          - 'string[] | number[]'
  - uid: 'office-ui-fabric-react!IDropdownProps#dropdownWidth:member'
    summary: 'Custom width for dropdown. If value is 0, width of the input field is used.'
    name: dropdownWidth
    fullName: dropdownWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dropdownWidth?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IDropdownProps#isDisabled:member'
    summary: 'Deprecated at v0.52.0, use `disabled` instead.'
    deprecated:
      content: Use `disabled` instead.
    name: isDisabled
    fullName: isDisabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isDisabled?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IDropdownProps#keytipProps:member'
    summary: Optional keytip for this dropdown
    name: keytipProps
    fullName: keytipProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'keytipProps?: IKeytipProps;'
      return:
        type:
          - IKeytipProps
  - uid: 'office-ui-fabric-react!IDropdownProps#multiSelectDelimiter:member'
    summary: 'When multiple items are selected, this will be used to separate values in the dropdown input.'
    name: multiSelectDelimiter
    fullName: multiSelectDelimiter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'multiSelectDelimiter?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IDropdownProps#notifyOnReselect:member'
    summary: >-
      If true, `onChange` will still be called when an already-selected item is clicked again in single select mode.
      (Normally it would not be called in this case.)
    name: notifyOnReselect
    fullName: notifyOnReselect
    langs:
      - typeScript
    type: property
    syntax:
      content: 'notifyOnReselect?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IDropdownProps#onChange:member'
    summary: Callback for when the selected option changes.
    name: onChange
    fullName: onChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChange?: (event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption, index?: number) => void;'
      return:
        type:
          - '(event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption, index?: number) => void'
  - uid: 'office-ui-fabric-react!IDropdownProps#onChanged:member'
    deprecated:
      content: Use `onChange` instead.
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChanged?: (option: IDropdownOption, index?: number) => void;'
      return:
        type:
          - '(option: IDropdownOption, index?: number) => void'
  - uid: 'office-ui-fabric-react!IDropdownProps#onRenderCaretDown:member'
    summary: Custom renderer for chevron icon
    name: onRenderCaretDown
    fullName: onRenderCaretDown
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderCaretDown?: IRenderFunction<IDropdownProps>;'
      return:
        type:
          - IRenderFunction<IDropdownProps>
  - uid: 'office-ui-fabric-react!IDropdownProps#onRenderLabel:member'
    summary: Custom renderer for the label.
    name: onRenderLabel
    fullName: onRenderLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderLabel?: IRenderFunction<IDropdownProps>;'
      return:
        type:
          - IRenderFunction<IDropdownProps>
  - uid: 'office-ui-fabric-react!IDropdownProps#onRenderPlaceholder:member'
    summary: Custom renderer for placeholder text
    name: onRenderPlaceholder
    fullName: onRenderPlaceholder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderPlaceholder?: IRenderFunction<IDropdownProps>;'
      return:
        type:
          - IRenderFunction<IDropdownProps>
  - uid: 'office-ui-fabric-react!IDropdownProps#onRenderPlaceHolder:member'
    summary: Custom renderer for placeholder text
    deprecated:
      content: Use `onRenderPlaceholder`
    name: onRenderPlaceHolder
    fullName: onRenderPlaceHolder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderPlaceHolder?: IRenderFunction<IDropdownProps>;'
      return:
        type:
          - IRenderFunction<IDropdownProps>
  - uid: 'office-ui-fabric-react!IDropdownProps#onRenderTitle:member'
    summary: Custom renderer for selected option displayed in input
    name: onRenderTitle
    fullName: onRenderTitle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderTitle?: IRenderFunction<IDropdownOption[]>;'
      return:
        type:
          - 'IRenderFunction<IDropdownOption[]>'
  - uid: 'office-ui-fabric-react!IDropdownProps#options:member'
    summary: >-
      Options for the dropdown. If using `defaultSelectedKey` or `defaultSelectedKeys`<!-- -->, options must be pure for
      correct behavior.
    name: options
    fullName: options
    langs:
      - typeScript
    type: property
    syntax:
      content: 'options: IDropdownOption[];'
      return:
        type:
          - 'IDropdownOption[]'
  - uid: 'office-ui-fabric-react!IDropdownProps#placeHolder:member'
    summary: Input placeholder text. Displayed until an option is selected.
    deprecated:
      content: Use `placeholder`
    name: placeHolder
    fullName: placeHolder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'placeHolder?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IDropdownProps#responsiveMode:member'
    summary: >-
      By default, the dropdown will render the standard way for screen sizes `large` and above, or in a panel on `small`
      and `medium` screens. Manually set this prop to override this behavior.
    name: responsiveMode
    fullName: responsiveMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'responsiveMode?: ResponsiveMode;'
      return:
        type:
          - ResponsiveMode
  - uid: 'office-ui-fabric-react!IDropdownProps#selectedKeys:member'
    summary: >-
      Keys of the selected items, only used when `multiSelect` is true (use `selectedKey` for single select). If you
      provide this, you must maintain selection state by observing onChange events and passing a new prop value in when
      changed. Passing null will clear the selection. Mutually exclusive with `defaultSelectedKeys`<!-- -->.
    name: selectedKeys
    fullName: selectedKeys
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedKeys?: string[] | number[] | null;'
      return:
        type:
          - 'string[] | number[] | null'
  - uid: 'office-ui-fabric-react!IDropdownProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IDropdownStyleProps, IDropdownStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IDropdownStyleProps, IDropdownStyles>'
  - uid: 'office-ui-fabric-react!IDropdownProps#theme:member'
    summary: Theme provided by higher order component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
