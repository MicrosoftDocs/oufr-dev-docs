### YamlMime:TSType
name: IStickyProps
uid: '@fluentui/react!IStickyProps:interface'
package: '@fluentui/react!'
fullName: IStickyProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: componentRef
    uid: '@fluentui/react!IStickyProps#componentRef:member'
    package: '@fluentui/react!'
    fullName: componentRef
    summary: Gets ref to component interface.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IStickyProps>;'
      return:
        type: IRefObject&lt;IStickyProps&gt;
  - name: isScrollSynced
    uid: '@fluentui/react!IStickyProps#isScrollSynced:member'
    package: '@fluentui/react!'
    fullName: isScrollSynced
    summary: 'If true, then match scrolling position of placeholder element in Sticky.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isScrollSynced?: boolean;'
      return:
        type: boolean
  - name: stickyBackgroundColor
    uid: '@fluentui/react!IStickyProps#stickyBackgroundColor:member'
    package: '@fluentui/react!'
    fullName: stickyBackgroundColor
    summary: color to apply as 'background-color' style for sticky element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'stickyBackgroundColor?: string;'
      return:
        type: string
  - name: stickyClassName
    uid: '@fluentui/react!IStickyProps#stickyClassName:member'
    package: '@fluentui/react!'
    fullName: stickyClassName
    summary: Class name to apply to the sticky element if component is sticky.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'stickyClassName?: string;'
      return:
        type: string
  - name: stickyPosition
    uid: '@fluentui/react!IStickyProps#stickyPosition:member'
    package: '@fluentui/react!'
    fullName: stickyPosition
    summary: Region to render sticky component in.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'stickyPosition?: StickyPositionType;'
      return:
        type: StickyPositionType
extends: 'React.Props&lt;Sticky&gt; '
