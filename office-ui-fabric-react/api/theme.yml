### YamlMime:UniversalReference
items:
  - uid: '@fluentui/theme!'
    name: '@fluentui/theme'
    fullName: '@fluentui/theme'
    langs:
      - typeScript
    type: package
    children:
      - '@fluentui/theme!ComponentStyles:interface'
      - '@fluentui/theme!createFontStyles:function(1)'
      - '@fluentui/theme!IEffects:interface'
      - '@fluentui/theme!IFontStyles:interface'
      - '@fluentui/theme!IPalette:interface'
      - '@fluentui/theme!IScheme:interface'
      - '@fluentui/theme!ISemanticColors:interface'
      - '@fluentui/theme!ISemanticTextColors:interface'
      - '@fluentui/theme!ITheme:interface'
      - '@fluentui/theme!mergeThemes:function(1)'
      - '@fluentui/theme!PartialTheme:interface'
      - '@fluentui/theme!registerDefaultFontFaces:function(1)'
      - '@fluentui/theme!Theme:interface'
      - '@fluentui/theme!Tokens:interface'
  - uid: '@fluentui/theme!createFontStyles:function(1)'
    name: createFontStyles(localeCode)
    fullName: createFontStyles(localeCode)
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export declare function createFontStyles(localeCode: string | null): IFontStyles;'
      return:
        type:
          - '@fluentui/theme!IFontStyles:interface'
        description: ''
      parameters:
        - id: localeCode
          description: ''
          type:
            - string | null
  - uid: '@fluentui/theme!mergeThemes:function(1)'
    summary: Merges multiple themes.
    name: mergeThemes(themes)
    fullName: mergeThemes(themes)
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export declare function mergeThemes<TResult = PartialTheme>(...themes: (undefined | PartialTheme | Theme)[]):
        TResult;
      return:
        type:
          - TResult
        description: ''
      parameters:
        - id: themes
          description: ''
          type:
            - '(undefined | PartialTheme | Theme)[]'
      typeParameters:
        - id: TResult
  - uid: '@fluentui/theme!registerDefaultFontFaces:function(1)'
    name: registerDefaultFontFaces(baseUrl)
    fullName: registerDefaultFontFaces(baseUrl)
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export declare function registerDefaultFontFaces(baseUrl: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: baseUrl
          description: ''
          type:
            - string
references:
  - uid: '@fluentui/theme!ComponentStyles:interface'
    name: ComponentStyles
  - uid: '@fluentui/theme!IEffects:interface'
    name: IEffects
  - uid: '@fluentui/theme!IFontStyles:interface'
    name: IFontStyles
  - uid: '@fluentui/theme!IPalette:interface'
    name: IPalette
  - uid: '@fluentui/theme!IScheme:interface'
    name: IScheme
  - uid: '@fluentui/theme!ISemanticColors:interface'
    name: ISemanticColors
  - uid: '@fluentui/theme!ISemanticTextColors:interface'
    name: ISemanticTextColors
  - uid: '@fluentui/theme!ITheme:interface'
    name: ITheme
  - uid: '@fluentui/theme!PartialTheme:interface'
    name: PartialTheme
  - uid: '@fluentui/theme!Theme:interface'
    name: Theme
  - uid: '@fluentui/theme!Tokens:interface'
    name: Tokens
