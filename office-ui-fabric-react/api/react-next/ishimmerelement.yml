### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!IShimmerElement:interface'
    summary: 'Shimmer Elements Interface representing all common properties between Gap, Circle and Line.'
    name: IShimmerElement
    fullName: IShimmerElement
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!IShimmerElement#height:member'
      - '@fluentui/react-next!IShimmerElement#type:member'
      - '@fluentui/react-next!IShimmerElement#verticalAlign:member'
      - '@fluentui/react-next!IShimmerElement#width:member'
  - uid: '@fluentui/react-next!IShimmerElement#height:member'
    summary: 'Sets the height of the element (ICircle, ILine, IGap) in pixels. Read more details for each specific element.'
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!IShimmerElement#type:member'
    summary: >-
      Represents the possible type of the shimmer elements: Gap, Circle, Line. Required for every element you intend to
      use.
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type: ShimmerElementType;'
      return:
        type:
          - ShimmerElementType
  - uid: '@fluentui/react-next!IShimmerElement#verticalAlign:member'
    summary: 'Sets vertical alignment of the element (ICircle, ILine).'
    name: verticalAlign
    fullName: verticalAlign
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalAlign?: ''top'' | ''center'' | ''bottom'';'
      return:
        type:
          - '''top'' | ''center'' | ''bottom'''
  - uid: '@fluentui/react-next!IShimmerElement#width:member'
    summary: 'Sets the width value of the element (ILine, IGap) in pixels. Read more details for each specific element.'
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width?: number | string;'
      return:
        type:
          - number | string
