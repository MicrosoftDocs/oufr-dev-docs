### YamlMime:TSType
name: IDetailsRowBaseProps
uid: '@fluentui/react!IDetailsRowBaseProps:interface'
package: '@fluentui/react!'
fullName: IDetailsRowBaseProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: cellsByColumn
    uid: '@fluentui/react!IDetailsRowBaseProps#cellsByColumn:member'
    package: '@fluentui/react!'
    fullName: cellsByColumn
    summary: >-
      Optional pre-rendered content per column. Preferred over onRender or
      onRenderItemColumn if provided.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        cellsByColumn?: {
                [columnKey: string]: React.ReactNode;
            };
      return:
        type: |-
          {
                  [columnKey: string]: React.ReactNode;
              }
  - name: checkboxCellClassName
    uid: '@fluentui/react!IDetailsRowBaseProps#checkboxCellClassName:member'
    package: '@fluentui/react!'
    fullName: checkboxCellClassName
    summary: Class name for the checkbox cell
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checkboxCellClassName?: string;'
      return:
        type: string
  - name: checkButtonAriaLabel
    uid: '@fluentui/react!IDetailsRowBaseProps#checkButtonAriaLabel:member'
    package: '@fluentui/react!'
    fullName: checkButtonAriaLabel
    summary: Check button's aria label
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checkButtonAriaLabel?: string;'
      return:
        type: string
  - name: className
    uid: '@fluentui/react!IDetailsRowBaseProps#className:member'
    package: '@fluentui/react!'
    fullName: className
    summary: Overriding class name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: collapseAllVisibility
    uid: '@fluentui/react!IDetailsRowBaseProps#collapseAllVisibility:member'
    package: '@fluentui/react!'
    fullName: collapseAllVisibility
    summary: Collapse all visibility
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'collapseAllVisibility?: CollapseAllVisibility;'
      return:
        type: CollapseAllVisibility
  - name: compact
    uid: '@fluentui/react!IDetailsRowBaseProps#compact:member'
    package: '@fluentui/react!'
    fullName: compact
    summary: Whether to render in compact mode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'compact?: boolean;'
      return:
        type: boolean
  - name: componentRef
    uid: '@fluentui/react!IDetailsRowBaseProps#componentRef:member'
    package: '@fluentui/react!'
    fullName: componentRef
    summary: Ref of the component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IDetailsRow>;'
      return:
        type: IRefObject&lt;IDetailsRow&gt;
  - name: dragDropEvents
    uid: '@fluentui/react!IDetailsRowBaseProps#dragDropEvents:member'
    package: '@fluentui/react!'
    fullName: dragDropEvents
    summary: Handling drag and drop events
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dragDropEvents?: IDragDropEvents;'
      return:
        type: IDragDropEvents
  - name: dragDropHelper
    uid: '@fluentui/react!IDetailsRowBaseProps#dragDropHelper:member'
    package: '@fluentui/react!'
    fullName: dragDropHelper
    summary: Helper for the drag and drop
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dragDropHelper?: IDragDropHelper;'
      return:
        type: IDragDropHelper
  - name: enableUpdateAnimations
    uid: '@fluentui/react!IDetailsRowBaseProps#enableUpdateAnimations:member'
    package: '@fluentui/react!'
    fullName: enableUpdateAnimations
    summary: Whether to animate updates
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableUpdateAnimations?: boolean;'
      return:
        type: boolean
  - name: eventsToRegister
    uid: '@fluentui/react!IDetailsRowBaseProps#eventsToRegister:member'
    package: '@fluentui/react!'
    fullName: eventsToRegister
    summary: A list of events to register
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        eventsToRegister?: {
                eventName: string;
                callback: (item?: any, index?: number, event?: any) => void;
            }[];
      return:
        type: |-
          {
                  eventName: string;
                  callback: (item?: any, index?: number, event?: any) =&gt; void;
              }[]
  - name: getRowAriaDescribedBy
    uid: '@fluentui/react!IDetailsRowBaseProps#getRowAriaDescribedBy:member'
    package: '@fluentui/react!'
    fullName: getRowAriaDescribedBy
    summary: Callback for getting the row aria-describedby
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRowAriaDescribedBy?: (item: any) => string;'
      return:
        type: '(item: any) =&gt; string'
  - name: getRowAriaLabel
    uid: '@fluentui/react!IDetailsRowBaseProps#getRowAriaLabel:member'
    package: '@fluentui/react!'
    fullName: getRowAriaLabel
    summary: Callback for getting the row aria label
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRowAriaLabel?: (item: any) => string;'
      return:
        type: '(item: any) =&gt; string'
  - name: item
    uid: '@fluentui/react!IDetailsRowBaseProps#item:member'
    package: '@fluentui/react!'
    fullName: item
    summary: Data source for this component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'item: any;'
      return:
        type: any
  - name: itemIndex
    uid: '@fluentui/react!IDetailsRowBaseProps#itemIndex:member'
    package: '@fluentui/react!'
    fullName: itemIndex
    summary: Index of the collection of items of the DetailsList
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemIndex: number;'
      return:
        type: number
  - name: onDidMount
    uid: '@fluentui/react!IDetailsRowBaseProps#onDidMount:member'
    package: '@fluentui/react!'
    fullName: onDidMount
    summary: Callback for did mount for parent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDidMount?: (row?: DetailsRowBase) => void;'
      return:
        type: '(row?: DetailsRowBase) =&gt; void'
  - name: onRenderCheck
    uid: '@fluentui/react!IDetailsRowBaseProps#onRenderCheck:member'
    package: '@fluentui/react!'
    fullName: onRenderCheck
    summary: Callback for rendering a checkbox
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderCheck?: (props: IDetailsRowCheckProps) => JSX.Element;'
      return:
        type: '(props: IDetailsRowCheckProps) =&gt; JSX.Element'
  - name: onRenderDetailsCheckbox
    uid: '@fluentui/react!IDetailsRowBaseProps#onRenderDetailsCheckbox:member'
    package: '@fluentui/react!'
    fullName: onRenderDetailsCheckbox
    summary: 'If provided, can be used to render a custom checkbox'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderDetailsCheckbox?: IRenderFunction<IDetailsCheckboxProps>;'
      return:
        type: IRenderFunction&lt;IDetailsCheckboxProps&gt;
  - name: onWillUnmount
    uid: '@fluentui/react!IDetailsRowBaseProps#onWillUnmount:member'
    package: '@fluentui/react!'
    fullName: onWillUnmount
    summary: Callback for will mount for parent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onWillUnmount?: (row?: DetailsRowBase) => void;'
      return:
        type: '(row?: DetailsRowBase) =&gt; void'
  - name: rowFieldsAs
    uid: '@fluentui/react!IDetailsRowBaseProps#rowFieldsAs:member'
    package: '@fluentui/react!'
    fullName: rowFieldsAs
    summary: DOM element into which to render row field
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rowFieldsAs?: React.ComponentType<IDetailsRowFieldsProps>;'
      return:
        type: React.ComponentType&lt;IDetailsRowFieldsProps&gt;
  - name: styles
    uid: '@fluentui/react!IDetailsRowBaseProps#styles:member'
    package: '@fluentui/react!'
    fullName: styles
    summary: Overriding styles to this row
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IDetailsRowStyleProps,
        IDetailsRowStyles>;
      return:
        type: 'IStyleFunctionOrObject&lt;IDetailsRowStyleProps, IDetailsRowStyles&gt;'
  - name: theme
    uid: '@fluentui/react!IDetailsRowBaseProps#theme:member'
    package: '@fluentui/react!'
    fullName: theme
    summary: Theme provided by styled() function
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
  - name: useFastIcons
    uid: '@fluentui/react!IDetailsRowBaseProps#useFastIcons:member'
    package: '@fluentui/react!'
    fullName: useFastIcons
    summary: >-
      Whether to use fast icon and check components. The icons can't be targeted
      by customization but are still customizable via class names.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useFastIcons?: boolean;'
      return:
        type: boolean
  - name: useReducedRowRenderer
    uid: '@fluentui/react!IDetailsRowBaseProps#useReducedRowRenderer:member'
    package: '@fluentui/react!'
    fullName: useReducedRowRenderer
    summary: >-
      Rerender DetailsRow only when props changed. Might cause regression when
      depending on external updates.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useReducedRowRenderer?: boolean;'
      return:
        type: boolean
extends: 'Pick&lt;IDetailsListProps, ''onRenderItemColumn'' | ''getCellValueKey''&gt;'
