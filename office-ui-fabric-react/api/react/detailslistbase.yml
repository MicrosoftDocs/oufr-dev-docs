### YamlMime:TSType
name: DetailsListBase
uid: '@fluentui/react!DetailsListBase:class'
package: '@fluentui/react!'
fullName: DetailsListBase
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: (constructor)(props)
    uid: '@fluentui/react!DetailsListBase:constructor(1)'
    package: '@fluentui/react!'
    fullName: (constructor)(props)
    summary: Constructs a new instance of the `DetailsListBase` class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constructor(props: IDetailsListProps);'
      parameters:
        - id: props
          description: ''
          type: IDetailsListProps
properties:
  - name: _onRenderRow
    uid: '@fluentui/react!DetailsListBase#_onRenderRow:member'
    package: '@fluentui/react!'
    fullName: _onRenderRow
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected _onRenderRow: (props: IDetailsRowProps, defaultRender?:
        IRenderFunction<IDetailsRowProps> | undefined) => JSX.Element;
      return:
        type: >-
          (props: IDetailsRowProps, defaultRender?:
          IRenderFunction&lt;IDetailsRowProps&gt; | undefined) =&gt; JSX.Element
  - name: defaultProps
    uid: '@fluentui/react!DetailsListBase.defaultProps:member'
    package: '@fluentui/react!'
    fullName: defaultProps
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        static defaultProps: {
                layoutMode: DetailsListLayoutMode;
                selectionMode: SelectionMode;
                constrainMode: ConstrainMode;
                checkboxVisibility: CheckboxVisibility;
                isHeaderVisible: boolean;
                compact: boolean;
                useFastIcons: boolean;
            };
      return:
        type: |-
          {
                  layoutMode: DetailsListLayoutMode;
                  selectionMode: SelectionMode;
                  constrainMode: ConstrainMode;
                  checkboxVisibility: CheckboxVisibility;
                  isHeaderVisible: boolean;
                  compact: boolean;
                  useFastIcons: boolean;
              }
methods:
  - name: 'componentDidUpdate(prevProps, prevState)'
    uid: '@fluentui/react!DetailsListBase#componentDidUpdate:member(1)'
    package: '@fluentui/react!'
    fullName: 'componentDidUpdate(prevProps, prevState)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        componentDidUpdate(prevProps: IDetailsListProps, prevState:
        IDetailsListState): void;
      parameters:
        - id: prevProps
          description: ''
          type: IDetailsListProps
        - id: prevState
          description: ''
          type: IDetailsListState
      return:
        type: void
        description: ''
  - name: componentWillUnmount()
    uid: '@fluentui/react!DetailsListBase#componentWillUnmount:member(1)'
    package: '@fluentui/react!'
    fullName: componentWillUnmount()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type: void
        description: ''
  - name: 'focusIndex(index, forceIntoFirstElement, measureItem, scrollToMode)'
    uid: '@fluentui/react!DetailsListBase#focusIndex:member(1)'
    package: '@fluentui/react!'
    fullName: 'focusIndex(index, forceIntoFirstElement, measureItem, scrollToMode)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        focusIndex(index: number, forceIntoFirstElement?: boolean, measureItem?:
        (itemIndex: number) => number, scrollToMode?: ScrollToMode): void;
      parameters:
        - id: index
          description: ''
          type: number
        - id: forceIntoFirstElement
          description: ''
          type: boolean
        - id: measureItem
          description: ''
          type: '(itemIndex: number) =&gt; number'
        - id: scrollToMode
          description: ''
          type: ScrollToMode
      return:
        type: void
        description: ''
  - name: forceUpdate()
    uid: '@fluentui/react!DetailsListBase#forceUpdate:member(1)'
    package: '@fluentui/react!'
    fullName: forceUpdate()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'forceUpdate(): void;'
      return:
        type: void
        description: ''
  - name: 'getDerivedStateFromProps(nextProps, previousState)'
    uid: '@fluentui/react!DetailsListBase.getDerivedStateFromProps:member(1)'
    package: '@fluentui/react!'
    fullName: 'getDerivedStateFromProps(nextProps, previousState)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static getDerivedStateFromProps(nextProps: IDetailsListProps,
        previousState: IDetailsListState): IDetailsListState;
      parameters:
        - id: nextProps
          description: ''
          type: IDetailsListProps
        - id: previousState
          description: ''
          type: IDetailsListState
      return:
        type: IDetailsListState
        description: ''
  - name: getStartItemIndexInView()
    uid: '@fluentui/react!DetailsListBase#getStartItemIndexInView:member(1)'
    package: '@fluentui/react!'
    fullName: getStartItemIndexInView()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getStartItemIndexInView(): number;'
      return:
        type: number
        description: ''
  - name: render()
    uid: '@fluentui/react!DetailsListBase#render:member(1)'
    package: '@fluentui/react!'
    fullName: render()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type: JSX.Element
        description: ''
  - name: 'scrollToIndex(index, measureItem, scrollToMode)'
    uid: '@fluentui/react!DetailsListBase#scrollToIndex:member(1)'
    package: '@fluentui/react!'
    fullName: 'scrollToIndex(index, measureItem, scrollToMode)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        scrollToIndex(index: number, measureItem?: (itemIndex: number) =>
        number, scrollToMode?: ScrollToMode): void;
      parameters:
        - id: index
          description: ''
          type: number
        - id: measureItem
          description: ''
          type: '(itemIndex: number) =&gt; number'
        - id: scrollToMode
          description: ''
          type: ScrollToMode
      return:
        type: void
        description: ''
extends: 'React.Component&lt;IDetailsListProps, IDetailsListState&gt; '
