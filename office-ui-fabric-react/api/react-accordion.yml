### YamlMime:TSPackage
uid: '@fluentui/react-accordion!'
name: '@fluentui/react-accordion'
type: package
summary: ''
interfaces:
  - '@fluentui/react-accordion!AccordionContext:interface'
  - '@fluentui/react-accordion!AccordionDescendant:interface'
  - '@fluentui/react-accordion!AccordionHeaderExpandIconProps:interface'
  - '@fluentui/react-accordion!AccordionHeaderProps:interface'
  - '@fluentui/react-accordion!AccordionHeaderState:interface'
  - '@fluentui/react-accordion!AccordionItemContext:interface'
  - '@fluentui/react-accordion!AccordionItemProps:interface'
  - '@fluentui/react-accordion!AccordionItemState:interface'
  - '@fluentui/react-accordion!AccordionPanelProps:interface'
  - '@fluentui/react-accordion!AccordionPanelState:interface'
  - '@fluentui/react-accordion!AccordionProps:interface'
  - '@fluentui/react-accordion!AccordionState:interface'
functions:
  - name: useCreateAccordionItemContext(state)
    uid: '@fluentui/react-accordion!useCreateAccordionItemContext:function(1)'
    package: '@fluentui/react-accordion!'
    summary: >-
      Creates internal context to be consumed by AccordionHeader and
      AccordionPanel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function useCreateAccordionItemContext(state:
        AccordionItemState): AccordionItemContext;
      parameters:
        - id: state
          description: ''
          type: >-
            <xref uid="@fluentui/react-accordion!AccordionItemState:interface"
            />
      return:
        type: >-
          <xref uid="@fluentui/react-accordion!AccordionItemContext:interface"
          />
        description: ''
