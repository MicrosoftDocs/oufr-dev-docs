### YamlMime:TSType
name: ITextFieldProps
uid: 'office-ui-fabric-react!ITextFieldProps:interface'
package: office-ui-fabric-react!
fullName: ITextFieldProps
summary: TextField component props.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: ariaLabel
    uid: 'office-ui-fabric-react!ITextFieldProps#ariaLabel:member'
    package: office-ui-fabric-react!
    fullName: ariaLabel
    summary: Aria label for the text field.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type: string
  - name: autoAdjustHeight
    uid: 'office-ui-fabric-react!ITextFieldProps#autoAdjustHeight:member'
    package: office-ui-fabric-react!
    fullName: autoAdjustHeight
    summary: >-
      For multiline text fields, whether or not to auto adjust text field
      height.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoAdjustHeight?: boolean;'
      return:
        type: boolean
  - name: autoComplete
    uid: 'office-ui-fabric-react!ITextFieldProps#autoComplete:member'
    package: office-ui-fabric-react!
    fullName: autoComplete
    summary: >-
      Whether the input field should have autocomplete enabled. This tells the
      browser to display options based on earlier typed values. Common values
      are 'on' and 'off' but for all possible values see the following links:
      https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\#Values
      https://html.spec.whatwg.org/multipage/form-control-infrastructure.html\#autofill
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoComplete?: string;'
      return:
        type: string
  - name: borderless
    uid: 'office-ui-fabric-react!ITextFieldProps#borderless:member'
    package: office-ui-fabric-react!
    fullName: borderless
    summary: Whether or not the text field is borderless.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'borderless?: boolean;'
      return:
        type: boolean
  - name: className
    uid: 'office-ui-fabric-react!ITextFieldProps#className:member'
    package: office-ui-fabric-react!
    fullName: className
    summary: Optional class name that is added to the container of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: 'office-ui-fabric-react!ITextFieldProps#componentRef:member'
    package: office-ui-fabric-react!
    fullName: componentRef
    summary: >-
      Optional callback to access the ITextField component. Use this instead of
      ref for accessing the public methods and properties of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<ITextField>;'
      return:
        type: IRefObject&lt;ITextField&gt;
  - name: defaultValue
    uid: 'office-ui-fabric-react!ITextFieldProps#defaultValue:member'
    package: office-ui-fabric-react!
    fullName: defaultValue
    summary: >-
      Default value of the text field. Only provide this if the text field is an
      uncontrolled component; otherwise, use the `value` property.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultValue?: string;'
      return:
        type: string
  - name: deferredValidationTime
    uid: 'office-ui-fabric-react!ITextFieldProps#deferredValidationTime:member'
    package: office-ui-fabric-react!
    fullName: deferredValidationTime
    summary: >-
      Text field will start to validate after users stop typing for
      `deferredValidationTime` milliseconds. Updates to this prop will not be
      respected.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'deferredValidationTime?: number;'
      return:
        type: number
  - name: description
    uid: 'office-ui-fabric-react!ITextFieldProps#description:member'
    package: office-ui-fabric-react!
    fullName: description
    summary: >-
      Description displayed below the text field to provide additional details
      about what text to enter.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'description?: string;'
      return:
        type: string
  - name: disabled
    uid: 'office-ui-fabric-react!ITextFieldProps#disabled:member'
    package: office-ui-fabric-react!
    fullName: disabled
    summary: Disabled state of the text field.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: boolean;'
      return:
        type: boolean
  - name: errorMessage
    uid: 'office-ui-fabric-react!ITextFieldProps#errorMessage:member'
    package: office-ui-fabric-react!
    fullName: errorMessage
    summary: >-
      Static error message displayed below the text field. Use
      `onGetErrorMessage` to dynamically change the error message displayed (if
      any) based on the current value. `errorMessage` and `onGetErrorMessage`
      are mutually exclusive (`errorMessage` takes precedence).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'errorMessage?: string | JSX.Element;'
      return:
        type: string | JSX.Element
  - name: iconProps
    uid: 'office-ui-fabric-react!ITextFieldProps#iconProps:member'
    package: office-ui-fabric-react!
    fullName: iconProps
    summary: >-
      Props for an optional icon, displayed in the far right end of the text
      field.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'iconProps?: IIconProps;'
      return:
        type: IIconProps
  - name: inputClassName
    uid: 'office-ui-fabric-react!ITextFieldProps#inputClassName:member'
    package: office-ui-fabric-react!
    fullName: inputClassName
    summary: >-
      Optional class name that is added specifically to the input/textarea
      element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'inputClassName?: string;'
      return:
        type: string
  - name: label
    uid: 'office-ui-fabric-react!ITextFieldProps#label:member'
    package: office-ui-fabric-react!
    fullName: label
    summary: Label displayed above the text field (and read by screen readers).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'label?: string;'
      return:
        type: string
  - name: mask
    uid: 'office-ui-fabric-react!ITextFieldProps#mask:member'
    package: office-ui-fabric-react!
    fullName: mask
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Only used by `MaskedTextField`<!-- -->, which now has a separate
      `IMaskedTextFieldProps` interface.
    syntax:
      content: 'mask?: string;'
      return:
        type: string
  - name: maskChar
    uid: 'office-ui-fabric-react!ITextFieldProps#maskChar:member'
    package: office-ui-fabric-react!
    fullName: maskChar
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Only used by `MaskedTextField`<!-- -->, which now has a separate
      `IMaskedTextFieldProps` interface.
    syntax:
      content: 'maskChar?: string;'
      return:
        type: string
  - name: maskFormat
    uid: 'office-ui-fabric-react!ITextFieldProps#maskFormat:member'
    package: office-ui-fabric-react!
    fullName: maskFormat
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      Only used by `MaskedTextField`<!-- -->, which now has a separate
      `IMaskedTextFieldProps` interface.
    syntax:
      content: |-
        maskFormat?: {
                [key: string]: RegExp;
            };
      return:
        type: |-
          {
                  [key: string]: RegExp;
              }
  - name: multiline
    uid: 'office-ui-fabric-react!ITextFieldProps#multiline:member'
    package: office-ui-fabric-react!
    fullName: multiline
    summary: Whether or not the text field is a multiline text field.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'multiline?: boolean;'
      return:
        type: boolean
  - name: onChange
    uid: 'office-ui-fabric-react!ITextFieldProps#onChange:member'
    package: office-ui-fabric-react!
    fullName: onChange
    summary: >-
      Callback for when the input value changes. This is called on both `input`
      and `change` events. (In a later version, this will probably only be
      called for the `change` event.)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onChange?: (event: React.FormEvent<HTMLInputElement |
        HTMLTextAreaElement>, newValue?: string) => void;
      return:
        type: >-
          (event: React.FormEvent&lt;HTMLInputElement | HTMLTextAreaElement&gt;,
          newValue?: string) =&gt; void
  - name: onGetErrorMessage
    uid: 'office-ui-fabric-react!ITextFieldProps#onGetErrorMessage:member'
    package: office-ui-fabric-react!
    fullName: onGetErrorMessage
    summary: >-
      Function used to determine whether the input value is valid and get an
      error message if not. Mutually exclusive with the static string
      `errorMessage` (it will take precedence over this).


      When it returns `string | JSX.Element`<!-- -->: - If valid, it returns
      empty string. - If invalid, it returns the error message and the text
      field will show a red border and show an error message below the text
      field.


      When it returns `Promise<string | JSX.Element>`<!-- -->: - The resolved
      value is displayed as the error message. - If rejected, the value is
      thrown away.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onGetErrorMessage?: (value: string) => string | JSX.Element |
        PromiseLike<string | JSX.Element> | undefined;
      return:
        type: >-
          (value: string) =&gt; string | JSX.Element | PromiseLike&lt;string |
          JSX.Element&gt; | undefined
  - name: onNotifyValidationResult
    uid: 'office-ui-fabric-react!ITextFieldProps#onNotifyValidationResult:member'
    package: office-ui-fabric-react!
    fullName: onNotifyValidationResult
    summary: Function called after validation completes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onNotifyValidationResult?: (errorMessage: string | JSX.Element, value:
        string | undefined) => void;
      return:
        type: >-
          (errorMessage: string | JSX.Element, value: string | undefined) =&gt;
          void
  - name: onRenderDescription
    uid: 'office-ui-fabric-react!ITextFieldProps#onRenderDescription:member'
    package: office-ui-fabric-react!
    fullName: onRenderDescription
    summary: Custom renderer for the description.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderDescription?: IRenderFunction<ITextFieldProps>;'
      return:
        type: IRenderFunction&lt;ITextFieldProps&gt;
  - name: onRenderLabel
    uid: 'office-ui-fabric-react!ITextFieldProps#onRenderLabel:member'
    package: office-ui-fabric-react!
    fullName: onRenderLabel
    summary: >-
      Custom renderer for the label. If you don't call defaultRender, ensure
      that you give your custom-rendered label an id and that you set the
      textfield's aria-labelledby prop to that id.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderLabel?: IRenderFunction<ITextFieldProps>;'
      return:
        type: IRenderFunction&lt;ITextFieldProps&gt;
  - name: onRenderPrefix
    uid: 'office-ui-fabric-react!ITextFieldProps#onRenderPrefix:member'
    package: office-ui-fabric-react!
    fullName: onRenderPrefix
    summary: Custom render function for prefix.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderPrefix?: IRenderFunction<ITextFieldProps>;'
      return:
        type: IRenderFunction&lt;ITextFieldProps&gt;
  - name: onRenderSuffix
    uid: 'office-ui-fabric-react!ITextFieldProps#onRenderSuffix:member'
    package: office-ui-fabric-react!
    fullName: onRenderSuffix
    summary: Custom render function for suffix.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderSuffix?: IRenderFunction<ITextFieldProps>;'
      return:
        type: IRenderFunction&lt;ITextFieldProps&gt;
  - name: prefix
    uid: 'office-ui-fabric-react!ITextFieldProps#prefix:member'
    package: office-ui-fabric-react!
    fullName: prefix
    summary: >-
      Prefix displayed before the text field contents. This is not included in
      the value. Ensure a descriptive label is present to assist screen readers,
      as the value does not include the prefix.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'prefix?: string;'
      return:
        type: string
  - name: readOnly
    uid: 'office-ui-fabric-react!ITextFieldProps#readOnly:member'
    package: office-ui-fabric-react!
    fullName: readOnly
    summary: 'If true, the text field is readonly.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readOnly?: boolean;'
      return:
        type: boolean
  - name: resizable
    uid: 'office-ui-fabric-react!ITextFieldProps#resizable:member'
    package: office-ui-fabric-react!
    fullName: resizable
    summary: 'For multiline text fields, whether or not the field is resizable.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resizable?: boolean;'
      return:
        type: boolean
  - name: styles
    uid: 'office-ui-fabric-react!ITextFieldProps#styles:member'
    package: office-ui-fabric-react!
    fullName: styles
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ITextFieldStyleProps, ITextFieldStyles>;'
      return:
        type: 'IStyleFunctionOrObject&lt;ITextFieldStyleProps, ITextFieldStyles&gt;'
  - name: suffix
    uid: 'office-ui-fabric-react!ITextFieldProps#suffix:member'
    package: office-ui-fabric-react!
    fullName: suffix
    summary: >-
      Suffix displayed after the text field contents. This is not included in
      the value. Ensure a descriptive label is present to assist screen readers,
      as the value does not include the suffix.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'suffix?: string;'
      return:
        type: string
  - name: theme
    uid: 'office-ui-fabric-react!ITextFieldProps#theme:member'
    package: office-ui-fabric-react!
    fullName: theme
    summary: Theme (provided through customization).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
  - name: underlined
    uid: 'office-ui-fabric-react!ITextFieldProps#underlined:member'
    package: office-ui-fabric-react!
    fullName: underlined
    summary: Whether or not the text field is underlined.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'underlined?: boolean;'
      return:
        type: boolean
  - name: validateOnFocusIn
    uid: 'office-ui-fabric-react!ITextFieldProps#validateOnFocusIn:member'
    package: office-ui-fabric-react!
    fullName: validateOnFocusIn
    summary: >-
      Run validation when focus moves into the input, and \*\*do not\*\*
      validate on change.


      (Unless this prop and/or `validateOnFocusOut` is set to true, validation
      will run on every change.)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'validateOnFocusIn?: boolean;'
      return:
        type: boolean
  - name: validateOnFocusOut
    uid: 'office-ui-fabric-react!ITextFieldProps#validateOnFocusOut:member'
    package: office-ui-fabric-react!
    fullName: validateOnFocusOut
    summary: >-
      Run validation when focus moves out of the input, and \*\*do not\*\*
      validate on change.


      (Unless this prop and/or `validateOnFocusIn` is set to true, validation
      will run on every change.)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'validateOnFocusOut?: boolean;'
      return:
        type: boolean
  - name: validateOnLoad
    uid: 'office-ui-fabric-react!ITextFieldProps#validateOnLoad:member'
    package: office-ui-fabric-react!
    fullName: validateOnLoad
    summary: Whether validation should run when the input is initially rendered.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'validateOnLoad?: boolean;'
      return:
        type: boolean
  - name: value
    uid: 'office-ui-fabric-react!ITextFieldProps#value:member'
    package: office-ui-fabric-react!
    fullName: value
    summary: >-
      Current value of the text field. Only provide this if the text field is a
      controlled component where you are maintaining its current state;
      otherwise, use the `defaultValue` property.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'value?: string;'
      return:
        type: string
extends: 'React.AllHTMLAttributes&lt;HTMLInputElement | HTMLTextAreaElement&gt; '
