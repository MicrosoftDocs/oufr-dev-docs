### YamlMime:TSType
name: IActivityItemProps
uid: '@fluentui/react!IActivityItemProps:interface'
package: '@fluentui/react!'
fullName: IActivityItemProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: activityDescription
    uid: '@fluentui/react!IActivityItemProps#activityDescription:member'
    package: '@fluentui/react!'
    fullName: activityDescription
    summary: >-
      An element describing the activity that took place. If no
      `activityDescription`<!-- -->, `activityDescriptionText`<!-- -->, or
      `onRenderActivityDescription` are included, no description of the activity
      is shown.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'activityDescription?: React.ReactNode[] | React.ReactNode;'
      return:
        type: 'React.ReactNode[] | React.ReactNode'
  - name: activityDescriptionText
    uid: '@fluentui/react!IActivityItemProps#activityDescriptionText:member'
    package: '@fluentui/react!'
    fullName: activityDescriptionText
    summary: >-
      Text describing the activity that occurred and naming the people involved
      in it.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `activityDescription` instead.
    syntax:
      content: 'activityDescriptionText?: string;'
      return:
        type: string
  - name: activityIcon
    uid: '@fluentui/react!IActivityItemProps#activityIcon:member'
    package: '@fluentui/react!'
    fullName: activityIcon
    summary: An element containing an icon shown next to the activity item.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'activityIcon?: React.ReactNode;'
      return:
        type: React.ReactNode
  - name: activityPersonas
    uid: '@fluentui/react!IActivityItemProps#activityPersonas:member'
    package: '@fluentui/react!'
    fullName: activityPersonas
    summary: >-
      If `activityIcon` is not set, the personas in this array will be used as
      the icon for the this activity item.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'activityPersonas?: IPersonaSharedProps[];'
      return:
        type: 'IPersonaSharedProps[]'
  - name: animateBeaconSignal
    uid: '@fluentui/react!IActivityItemProps#animateBeaconSignal:member'
    package: '@fluentui/react!'
    fullName: animateBeaconSignal
    summary: >-
      Enables/disables the beacon that radiates from the center of the center of
      the activity icon. Signals an activity has started.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'animateBeaconSignal?: boolean;'
      return:
        type: boolean
  - name: beaconColorOne
    uid: '@fluentui/react!IActivityItemProps#beaconColorOne:member'
    package: '@fluentui/react!'
    fullName: beaconColorOne
    summary: Beacon color one
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'beaconColorOne?: string;'
      return:
        type: string
  - name: beaconColorTwo
    uid: '@fluentui/react!IActivityItemProps#beaconColorTwo:member'
    package: '@fluentui/react!'
    fullName: beaconColorTwo
    summary: Beacon color two
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'beaconColorTwo?: string;'
      return:
        type: string
  - name: comments
    uid: '@fluentui/react!IActivityItemProps#comments:member'
    package: '@fluentui/react!'
    fullName: comments
    summary: >-
      An element containing the text of comments or @<!-- -->mention messages.
      If no `comments`<!-- -->, `commentText`<!-- -->, or `onRenderComments` are
      included, no comments are shown.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'comments?: React.ReactNode[] | React.ReactNode;'
      return:
        type: 'React.ReactNode[] | React.ReactNode'
  - name: commentText
    uid: '@fluentui/react!IActivityItemProps#commentText:member'
    package: '@fluentui/react!'
    fullName: commentText
    summary: Text of comments or @<!-- -->mention messages.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `comments` instead.
    syntax:
      content: 'commentText?: string;'
      return:
        type: string
  - name: isCompact
    uid: '@fluentui/react!IActivityItemProps#isCompact:member'
    package: '@fluentui/react!'
    fullName: isCompact
    summary: Indicated if the compact styling should be used.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isCompact?: boolean;'
      return:
        type: boolean
  - name: onRenderActivityDescription
    uid: '@fluentui/react!IActivityItemProps#onRenderActivityDescription:member'
    package: '@fluentui/react!'
    fullName: onRenderActivityDescription
    summary: A renderer for the description of the current activity.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderActivityDescription?: IRenderFunction<IActivityItemProps>;'
      return:
        type: IRenderFunction&lt;IActivityItemProps&gt;
  - name: onRenderComments
    uid: '@fluentui/react!IActivityItemProps#onRenderComments:member'
    package: '@fluentui/react!'
    fullName: onRenderComments
    summary: A renderer that adds the text of a comment below the activity description.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderComments?: IRenderFunction<IActivityItemProps>;'
      return:
        type: IRenderFunction&lt;IActivityItemProps&gt;
  - name: onRenderIcon
    uid: '@fluentui/react!IActivityItemProps#onRenderIcon:member'
    package: '@fluentui/react!'
    fullName: onRenderIcon
    summary: A renderer to create the icon next to the activity item.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderIcon?: IRenderFunction<IActivityItemProps>;'
      return:
        type: IRenderFunction&lt;IActivityItemProps&gt;
  - name: onRenderTimeStamp
    uid: '@fluentui/react!IActivityItemProps#onRenderTimeStamp:member'
    package: '@fluentui/react!'
    fullName: onRenderTimeStamp
    summary: >-
      Custom renderer for a time stamp. If not included, `timeStamp` is shown as
      plain text below the activity.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderTimeStamp?: IRenderFunction<IActivityItemProps>;'
      return:
        type: IRenderFunction&lt;IActivityItemProps&gt;
  - name: styles
    uid: '@fluentui/react!IActivityItemProps#styles:member'
    package: '@fluentui/react!'
    fullName: styles
    summary: Optional styling for the elements within the activity item.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: IActivityItemStyles;'
      return:
        type: IActivityItemStyles
  - name: timeStamp
    uid: '@fluentui/react!IActivityItemProps#timeStamp:member'
    package: '@fluentui/react!'
    fullName: timeStamp
    summary: >-
      Element shown as a timestamp on this activity. If not included, no
      timestamp is shown.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeStamp?: string | React.ReactNode[] | React.ReactNode;'
      return:
        type: 'string | React.ReactNode[] | React.ReactNode'
extends: 'React.AllHTMLAttributes&lt;HTMLElement&gt; '
