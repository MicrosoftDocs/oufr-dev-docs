### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IPositioningContainerProps:interface'
    name: IPositioningContainerProps
    fullName: IPositioningContainerProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'IBaseProps<IPositioningContainer> '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IPositioningContainerProps#ariaDescribedBy:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#ariaLabel:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#ariaLabelledBy:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#backgroundColor:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#bounds:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#className:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#componentRef:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#coverTarget:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#directionalHint:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#directionalHintFixed:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#directionalHintForRTL:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#doNotLayer:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#finalHeight:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#minPagePadding:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#offsetFromTarget:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#onDismiss:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#onLayerMounted:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#onPositioned:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#positioningContainerMaxHeight:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#positioningContainerWidth:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#preventDismissOnScroll:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#role:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#setInitialFocus:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#target:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#targetPoint:member'
      - 'office-ui-fabric-react!IPositioningContainerProps#useTargetPoint:member'
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#ariaDescribedBy:member'
    summary: Defines the element id referencing the element containing the description for the positioningContainer.
    name: ariaDescribedBy
    fullName: ariaDescribedBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaDescribedBy?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#ariaLabel:member'
    summary: Accessible label text for positioningContainer.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#ariaLabelledBy:member'
    summary: Defines the element id referencing the element containing label text for positioningContainer.
    name: ariaLabelledBy
    fullName: ariaLabelledBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabelledBy?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#backgroundColor:member'
    summary: 'The background color of the positioningContainer in hex format ie. \#ffffff.'
    name: backgroundColor
    fullName: backgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'backgroundColor?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#bounds:member'
    summary: The bounding rectangle for which the contextual menu can appear in.
    name: bounds
    fullName: bounds
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bounds?: IRectangle;'
      return:
        type:
          - '@fluentui/utilities!IRectangle:interface'
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#className:member'
    summary: CSS class to apply to the positioningContainer.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#componentRef:member'
    summary: All props for your component are to be defined here.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IPositioningContainer>;'
      return:
        type:
          - IRefObject<IPositioningContainer>
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#coverTarget:member'
    summary: >-
      If true the position returned will have the menu element cover the target. If false then it will position next to
      the target;
    name: coverTarget
    fullName: coverTarget
    langs:
      - typeScript
    type: property
    syntax:
      content: 'coverTarget?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#directionalHint:member'
    summary: How the element should be positioned
    name: directionalHint
    fullName: directionalHint
    langs:
      - typeScript
    type: property
    syntax:
      content: 'directionalHint?: DirectionalHint;'
      return:
        type:
          - DirectionalHint
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#directionalHintFixed:member'
    summary: >-
      If true the position will not change sides in an attempt to fit the positioningContainer within bounds. It will
      still attempt to align it to whatever bounds are given.
    name: directionalHintFixed
    fullName: directionalHintFixed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'directionalHintFixed?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#directionalHintForRTL:member'
    summary: >-
      How the element should be positioned in RTL layouts. If not specified, a mirror of `directionalHint` will be used
      instead
    name: directionalHintForRTL
    fullName: directionalHintForRTL
    langs:
      - typeScript
    type: property
    syntax:
      content: 'directionalHintForRTL?: DirectionalHint;'
      return:
        type:
          - DirectionalHint
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#doNotLayer:member'
    summary: If true do not render on a new layer. If false render on a new layer.
    name: doNotLayer
    fullName: doNotLayer
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doNotLayer?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#finalHeight:member'
    summary: >-
      Specify the final height of the content. To be used when expanding the content dynamically so that
      positioningContainer can adjust its position.
    name: finalHeight
    fullName: finalHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'finalHeight?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#minPagePadding:member'
    summary: The minimum distance the positioningContainer will be away from the edge of the screen.
    name: minPagePadding
    fullName: minPagePadding
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minPagePadding?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#offsetFromTarget:member'
    summary: The gap between the positioningContainer and the target
    name: offsetFromTarget
    fullName: offsetFromTarget
    langs:
      - typeScript
    type: property
    syntax:
      content: 'offsetFromTarget?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#onDismiss:member'
    summary: Callback when the positioningContainer tries to close.
    name: onDismiss
    fullName: onDismiss
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onDismiss?: (ev?: any) => void;'
      return:
        type:
          - '(ev?: any) => void'
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#onLayerMounted:member'
    summary: Optional callback when the layer content has mounted.
    name: onLayerMounted
    fullName: onLayerMounted
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onLayerMounted?: () => void;'
      return:
        type:
          - () => void
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#onPositioned:member'
    summary: Optional callback that is called once the positioningContainer has been correctly positioned.
    name: onPositioned
    fullName: onPositioned
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onPositioned?: (positions?: IPositionedData) => void;'
      return:
        type:
          - '(positions?: IPositionedData) => void'
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#positioningContainerMaxHeight:member'
    summary: >-
      Set max height of positioningContainer When not set the positioningContainer will expand with contents up to the
      bottom of the screen
    name: positioningContainerMaxHeight
    fullName: positioningContainerMaxHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'positioningContainerMaxHeight?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#positioningContainerWidth:member'
    summary: 'Custom width for positioningContainer including borders. If value is 0, no width is applied.'
    name: positioningContainerWidth
    fullName: positioningContainerWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'positioningContainerWidth?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#preventDismissOnScroll:member'
    summary: If true then the onClose will not not dismiss on scroll
    name: preventDismissOnScroll
    fullName: preventDismissOnScroll
    langs:
      - typeScript
    type: property
    syntax:
      content: 'preventDismissOnScroll?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#role:member'
    summary: 'Aria role assigned to the positioningContainer (Eg. dialog, alertdialog).'
    name: role
    fullName: role
    langs:
      - typeScript
    type: property
    syntax:
      content: 'role?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#setInitialFocus:member'
    summary: >-
      If true then the positioningContainer will attempt to focus the first focusable element that it contains. If it
      doesn't find an element, no focus will be set and the method will return false. This means that it's the contents
      responsibility to either set focus or have focusable items.
    name: setInitialFocus
    fullName: setInitialFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'setInitialFocus?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#target:member'
    summary: >-
      The target that the positioningContainer should try to position itself based on. It can be either an HTMLElement a
      querySelector string of a valid HTMLElement or a MouseEvent. If MouseEvent is given then the origin point of the
      event will be used.
    name: target
    fullName: target
    langs:
      - typeScript
    type: property
    syntax:
      content: 'target?: HTMLElement | string | MouseEvent | Point | null;'
      return:
        type:
          - HTMLElement | string | MouseEvent | Point | null
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#targetPoint:member'
    summary: 'Point used to position the positioningContainer. Deprecated, use `target` instead.'
    deprecated:
      content: Use `target` instead.
    name: targetPoint
    fullName: targetPoint
    langs:
      - typeScript
    type: property
    syntax:
      content: 'targetPoint?: Point;'
      return:
        type:
          - '@fluentui/utilities!Point:interface'
  - uid: 'office-ui-fabric-react!IPositioningContainerProps#useTargetPoint:member'
    summary: >-
      If true use a point rather than rectangle to position the positioningContainer. For example it can be used to
      position based on a click.
    deprecated:
      content: Do not use.
    name: useTargetPoint
    fullName: useTargetPoint
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useTargetPoint?: boolean;'
      return:
        type:
          - boolean
