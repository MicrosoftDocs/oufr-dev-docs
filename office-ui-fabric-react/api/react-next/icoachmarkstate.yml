### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!ICoachmarkState:interface'
    name: ICoachmarkState
    fullName: ICoachmarkState
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!ICoachmarkState#alertText:member'
      - '@fluentui/react-next!ICoachmarkState#beakBottom:member'
      - '@fluentui/react-next!ICoachmarkState#beakLeft:member'
      - '@fluentui/react-next!ICoachmarkState#beakRight:member'
      - '@fluentui/react-next!ICoachmarkState#beakTop:member'
      - '@fluentui/react-next!ICoachmarkState#entityInnerHostRect:member'
      - '@fluentui/react-next!ICoachmarkState#isBeaconAnimating:member'
      - '@fluentui/react-next!ICoachmarkState#isCollapsed:member'
      - '@fluentui/react-next!ICoachmarkState#isMeasured:member'
      - '@fluentui/react-next!ICoachmarkState#isMeasuring:member'
      - '@fluentui/react-next!ICoachmarkState#isMouseInProximity:member'
      - '@fluentui/react-next!ICoachmarkState#targetAlignment:member'
      - '@fluentui/react-next!ICoachmarkState#targetPosition:member'
      - '@fluentui/react-next!ICoachmarkState#transformOrigin:member'
  - uid: '@fluentui/react-next!ICoachmarkState#alertText:member'
    summary: ARIA alert text to read aloud with Narrator once the Coachmark is mounted
    name: alertText
    fullName: alertText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alertText?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ICoachmarkState#beakBottom:member'
    summary: The bottom position of the beak
    name: beakBottom
    fullName: beakBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beakBottom?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ICoachmarkState#beakLeft:member'
    summary: The left position of the beak
    name: beakLeft
    fullName: beakLeft
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beakLeft?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ICoachmarkState#beakRight:member'
    summary: The right position of the beak
    name: beakRight
    fullName: beakRight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beakRight?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ICoachmarkState#beakTop:member'
    summary: The right position of the beak
    name: beakTop
    fullName: beakTop
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beakTop?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ICoachmarkState#entityInnerHostRect:member'
    summary: Cached width and height of \_entityInnerHostElement
    name: entityInnerHostRect
    fullName: entityInnerHostRect
    langs:
      - typeScript
    type: property
    syntax:
      content: 'entityInnerHostRect: IEntityRect;'
      return:
        type:
          - IEntityRect
  - uid: '@fluentui/react-next!ICoachmarkState#isBeaconAnimating:member'
    summary: Enables/Disables the beacon that radiates from the center of the coachmark.
    name: isBeaconAnimating
    fullName: isBeaconAnimating
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isBeaconAnimating: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ICoachmarkState#isCollapsed:member'
    summary: Is the Coachmark currently collapsed into a tear drop shape
    name: isCollapsed
    fullName: isCollapsed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCollapsed: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ICoachmarkState#isMeasured:member'
    summary: Is the Coachmark done measuring the hosted entity
    name: isMeasured
    fullName: isMeasured
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isMeasured: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ICoachmarkState#isMeasuring:member'
    summary: Is the teaching bubble currently retreiving the original dimensions of the hosted entity.
    name: isMeasuring
    fullName: isMeasuring
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isMeasuring: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ICoachmarkState#isMouseInProximity:member'
    summary: Is the mouse in proximity of the default target element
    name: isMouseInProximity
    fullName: isMouseInProximity
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isMouseInProximity: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ICoachmarkState#targetAlignment:member'
    summary: Alignment edge of callout in relation to target
    name: targetAlignment
    fullName: targetAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'targetAlignment?: RectangleEdge;'
      return:
        type:
          - RectangleEdge
  - uid: '@fluentui/react-next!ICoachmarkState#targetPosition:member'
    summary: Position of Coachmark/TeachingBubble in relation to target
    name: targetPosition
    fullName: targetPosition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'targetPosition?: RectangleEdge;'
      return:
        type:
          - RectangleEdge
  - uid: '@fluentui/react-next!ICoachmarkState#transformOrigin:member'
    summary: Transform origin of teaching bubble callout
    name: transformOrigin
    fullName: transformOrigin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'transformOrigin?: string;'
      return:
        type:
          - string
