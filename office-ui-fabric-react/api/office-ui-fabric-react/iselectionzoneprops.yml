### YamlMime:TSType
name: ISelectionZoneProps
uid: 'office-ui-fabric-react!ISelectionZoneProps:interface'
package: office-ui-fabric-react!
fullName: ISelectionZoneProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: componentRef
    uid: 'office-ui-fabric-react!ISelectionZoneProps#componentRef:member'
    package: office-ui-fabric-react!
    fullName: componentRef
    summary: Reference to the component interface.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: () => void;'
      return:
        type: () =&gt; void
  - name: disableAutoSelectOnInputElements
    uid: >-
      office-ui-fabric-react!ISelectionZoneProps#disableAutoSelectOnInputElements:member
    package: office-ui-fabric-react!
    fullName: disableAutoSelectOnInputElements
    summary: 'If true, disables automatic selection on input elements.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disableAutoSelectOnInputElements?: boolean;'
      return:
        type: boolean
  - name: enableTouchInvocationTarget
    uid: >-
      office-ui-fabric-react!ISelectionZoneProps#enableTouchInvocationTarget:member
    package: office-ui-fabric-react!
    fullName: enableTouchInvocationTarget
    summary: >-
      Determines whether elements with the attribute
      `data-selection-touch-invoke` should be used as invocation targets for an
      item if the user is using touch.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enableTouchInvocationTarget?: boolean;'
      return:
        type: boolean
  - name: enterModalOnTouch
    uid: 'office-ui-fabric-react!ISelectionZoneProps#enterModalOnTouch:member'
    package: office-ui-fabric-react!
    fullName: enterModalOnTouch
    summary: 'If true, modal selection is enabled on touch event.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'enterModalOnTouch?: boolean;'
      return:
        type: boolean
  - name: isSelectedOnFocus
    uid: 'office-ui-fabric-react!ISelectionZoneProps#isSelectedOnFocus:member'
    package: office-ui-fabric-react!
    fullName: isSelectedOnFocus
    summary: Determines if an item is selected on focus.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isSelectedOnFocus?: boolean;'
      return:
        type: boolean
  - name: layout
    uid: 'office-ui-fabric-react!ISelectionZoneProps#layout:member'
    package: office-ui-fabric-react!
    fullName: layout
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: 'No longer in use, focus is now managed by .'
    syntax:
      content: 'layout?: {};'
      return:
        type: '{}'
  - name: onItemContextMenu
    uid: 'office-ui-fabric-react!ISelectionZoneProps#onItemContextMenu:member'
    package: office-ui-fabric-react!
    fullName: onItemContextMenu
    summary: Optional callback for when an item's contextual menu action occurs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onItemContextMenu?: (item?: any, index?: number, ev?: Event) => void |
        boolean;
      return:
        type: '(item?: any, index?: number, ev?: Event) =&gt; void | boolean'
  - name: onItemInvoked
    uid: 'office-ui-fabric-react!ISelectionZoneProps#onItemInvoked:member'
    package: office-ui-fabric-react!
    fullName: onItemInvoked
    summary: Optional callback for when an item is invoked via ENTER or double-click.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onItemInvoked?: (item?: IObjectWithKey, index?: number, ev?: Event) =>
        void;
      return:
        type: '(item?: IObjectWithKey, index?: number, ev?: Event) =&gt; void'
  - name: selection
    uid: 'office-ui-fabric-react!ISelectionZoneProps#selection:member'
    package: office-ui-fabric-react!
    fullName: selection
    summary: >-
      Required  instance bound to the
      [SelectionZone](xref:office-ui-fabric-react!SelectionZone:class)<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selection: ISelection;'
      return:
        type: '<xref uid="@fluentui/utilities!ISelection:interface" />'
  - name: selectionMode
    uid: 'office-ui-fabric-react!ISelectionZoneProps#selectionMode:member'
    package: office-ui-fabric-react!
    fullName: selectionMode
    summary: >-
      The mode of Selection, where the value is one of 'none', 'single', or
      'multiple'.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectionMode?: SelectionMode;'
      return:
        type: '<xref uid="@fluentui/utilities!SelectionMode:enum" />'
  - name: selectionPreservedOnEmptyClick
    uid: >-
      office-ui-fabric-react!ISelectionZoneProps#selectionPreservedOnEmptyClick:member
    package: office-ui-fabric-react!
    fullName: selectionPreservedOnEmptyClick
    summary: 'If true, selection is preserved on outer click.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectionPreservedOnEmptyClick?: boolean;'
      return:
        type: boolean
extends: 'React.ClassAttributes&lt;SelectionZone&gt; '
