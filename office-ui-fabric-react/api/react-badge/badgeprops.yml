### YamlMime:TSType
name: BadgeProps
uid: '@fluentui/react-badge!BadgeProps:interface'
package: '@fluentui/react-badge!'
fullName: BadgeProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: appearance
    uid: '@fluentui/react-badge!BadgeProps#appearance:member'
    package: '@fluentui/react-badge!'
    fullName: appearance
    summary: 'A Badge can be filled, outline, ghost, inverted'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'appearance?: BadgeAppearances;'
      return:
        type: BadgeAppearances
  - name: icon
    uid: '@fluentui/react-badge!BadgeProps#icon:member'
    package: '@fluentui/react-badge!'
    fullName: icon
    summary: Icon slot
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'icon?: ShorthandProps<HTMLElement>;'
      return:
        type: ShorthandProps&lt;HTMLElement&gt;
  - name: iconPosition
    uid: '@fluentui/react-badge!BadgeProps#iconPosition:member'
    package: '@fluentui/react-badge!'
    fullName: iconPosition
    summary: Position for Icon to be rendered
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'iconPosition?: ''before'' | ''after'';'
      return:
        type: '''before'' | ''after'''
  - name: shape
    uid: '@fluentui/react-badge!BadgeProps#shape:member'
    package: '@fluentui/react-badge!'
    fullName: shape
    summary: 'A Badge can be square, circular or rounded'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'shape?: BadgeShape;'
      return:
        type: BadgeShape
  - name: size
    uid: '@fluentui/react-badge!BadgeProps#size:member'
    package: '@fluentui/react-badge!'
    fullName: size
    summary: A Badge can be sized.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'size?: SizeValue;'
      return:
        type: SizeValue
  - name: status
    uid: '@fluentui/react-badge!BadgeProps#status:member'
    package: '@fluentui/react-badge!'
    fullName: status
    summary: A Badge can have status styles variants
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'status?: BadgeStatus;'
      return:
        type: BadgeStatus
extends: ComponentProps
