### YamlMime:TSPackage
uid: '@fluentui/merge-styles!'
name: '@fluentui/merge-styles'
type: package
summary: ''
interfaces:
  - '@fluentui/merge-styles!ICSPSettings:interface'
  - '@fluentui/merge-styles!IFontFace:interface'
  - '@fluentui/merge-styles!IRawFontStyle:interface'
  - '@fluentui/merge-styles!IRawStyle:interface'
  - '@fluentui/merge-styles!IRawStyleBase:interface'
  - '@fluentui/merge-styles!IStyleBaseArray:interface'
  - '@fluentui/merge-styles!IStyleSheetConfig:interface'
classes:
  - '@fluentui/merge-styles!Stylesheet:class'
functions:
  - name: concatStyleSets(styleSet)
    uid: '@fluentui/merge-styles!concatStyleSets:function(1)'
    package: '@fluentui/merge-styles'
    summary: Combine a set of styles together (but does not register css classes).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function concatStyleSets<TStyleSet>(styleSet: TStyleSet |
        false | null | undefined): IConcatenatedStyleSet<ObjectOnly<TStyleSet>>;
      parameters:
        - id: styleSet
          description: The first style set to be concatenated.
          type: TStyleSet | false | null | undefined
      return:
        type: IConcatenatedStyleSet&lt;ObjectOnly&lt;TStyleSet&gt;&gt;
        description: ''
  - name: 'concatStyleSets(styleSet1, styleSet2)'
    uid: '@fluentui/merge-styles!concatStyleSets:function(2)'
    package: '@fluentui/merge-styles'
    summary: Combine a set of styles together (but does not register css classes).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function concatStyleSets<TStyleSet1,
        TStyleSet2>(styleSet1: TStyleSet1 | false | null | undefined, styleSet2:
        TStyleSet2 | false | null | undefined):
        IConcatenatedStyleSet<ObjectOnly<TStyleSet1> & ObjectOnly<TStyleSet2>>;
      parameters:
        - id: styleSet1
          description: The first style set to be concatenated.
          type: TStyleSet1 | false | null | undefined
        - id: styleSet2
          description: The second style set to be concatenated.
          type: TStyleSet2 | false | null | undefined
      return:
        type: >-
          IConcatenatedStyleSet&lt;ObjectOnly&lt;TStyleSet1&gt; &
          ObjectOnly&lt;TStyleSet2&gt;&gt;
        description: ''
  - name: 'concatStyleSets(styleSet1, styleSet2, styleSet3)'
    uid: '@fluentui/merge-styles!concatStyleSets:function(3)'
    package: '@fluentui/merge-styles'
    summary: Combine a set of styles together (but does not register css classes).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function concatStyleSets<TStyleSet1, TStyleSet2,
        TStyleSet3>(styleSet1: TStyleSet1 | false | null | undefined, styleSet2:
        TStyleSet2 | false | null | undefined, styleSet3: TStyleSet3 | false |
        null | undefined): IConcatenatedStyleSet<ObjectOnly<TStyleSet1> &
        ObjectOnly<TStyleSet2> & ObjectOnly<TStyleSet3>>;
      parameters:
        - id: styleSet1
          description: The first style set to be concatenated.
          type: TStyleSet1 | false | null | undefined
        - id: styleSet2
          description: The second style set to be concatenated.
          type: TStyleSet2 | false | null | undefined
        - id: styleSet3
          description: The third style set to be concatenated.
          type: TStyleSet3 | false | null | undefined
      return:
        type: >-
          IConcatenatedStyleSet&lt;ObjectOnly&lt;TStyleSet1&gt; &
          ObjectOnly&lt;TStyleSet2&gt; & ObjectOnly&lt;TStyleSet3&gt;&gt;
        description: ''
  - name: 'concatStyleSets(styleSet1, styleSet2, styleSet3, styleSet4)'
    uid: '@fluentui/merge-styles!concatStyleSets:function(4)'
    package: '@fluentui/merge-styles'
    summary: Combine a set of styles together (but does not register css classes).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function concatStyleSets<TStyleSet1, TStyleSet2,
        TStyleSet3, TStyleSet4>(styleSet1: TStyleSet1 | false | null |
        undefined, styleSet2: TStyleSet2 | false | null | undefined, styleSet3:
        TStyleSet3 | false | null | undefined, styleSet4: TStyleSet4 | false |
        null | undefined): IConcatenatedStyleSet<ObjectOnly<TStyleSet1> &
        ObjectOnly<TStyleSet2> & ObjectOnly<TStyleSet3> &
        ObjectOnly<TStyleSet4>>;
      parameters:
        - id: styleSet1
          description: The first style set to be concatenated.
          type: TStyleSet1 | false | null | undefined
        - id: styleSet2
          description: The second style set to be concatenated.
          type: TStyleSet2 | false | null | undefined
        - id: styleSet3
          description: The third style set to be concatenated.
          type: TStyleSet3 | false | null | undefined
        - id: styleSet4
          description: The fourth style set to be concatenated.
          type: TStyleSet4 | false | null | undefined
      return:
        type: >-
          IConcatenatedStyleSet&lt;ObjectOnly&lt;TStyleSet1&gt; &
          ObjectOnly&lt;TStyleSet2&gt; & ObjectOnly&lt;TStyleSet3&gt; &
          ObjectOnly&lt;TStyleSet4&gt;&gt;
        description: ''
  - name: 'concatStyleSets(styleSet1, styleSet2, styleSet3, styleSet4, styleSet5)'
    uid: '@fluentui/merge-styles!concatStyleSets:function(5)'
    package: '@fluentui/merge-styles'
    summary: Combine a set of styles together (but does not register css classes).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function concatStyleSets<TStyleSet1, TStyleSet2,
        TStyleSet3, TStyleSet4, TStyleSet5>(styleSet1: TStyleSet1 | false | null
        | undefined, styleSet2: TStyleSet2 | false | null | undefined,
        styleSet3: TStyleSet3 | false | null | undefined, styleSet4: TStyleSet4
        | false | null | undefined, styleSet5: TStyleSet5 | false | null |
        undefined): IConcatenatedStyleSet<ObjectOnly<TStyleSet1> &
        ObjectOnly<TStyleSet2> & ObjectOnly<TStyleSet3> & ObjectOnly<TStyleSet4>
        & ObjectOnly<TStyleSet5>>;
      parameters:
        - id: styleSet1
          description: The first style set to be concatenated.
          type: TStyleSet1 | false | null | undefined
        - id: styleSet2
          description: The second style set to be concatenated.
          type: TStyleSet2 | false | null | undefined
        - id: styleSet3
          description: The third style set to be concatenated.
          type: TStyleSet3 | false | null | undefined
        - id: styleSet4
          description: The fourth style set to be concatenated.
          type: TStyleSet4 | false | null | undefined
        - id: styleSet5
          description: The fifth set to be concatenated.
          type: TStyleSet5 | false | null | undefined
      return:
        type: >-
          IConcatenatedStyleSet&lt;ObjectOnly&lt;TStyleSet1&gt; &
          ObjectOnly&lt;TStyleSet2&gt; & ObjectOnly&lt;TStyleSet3&gt; &
          ObjectOnly&lt;TStyleSet4&gt; & ObjectOnly&lt;TStyleSet5&gt;&gt;
        description: ''
  - name: >-
      concatStyleSets(styleSet1, styleSet2, styleSet3, styleSet4, styleSet5,
      styleSet6)
    uid: '@fluentui/merge-styles!concatStyleSets:function(6)'
    package: '@fluentui/merge-styles'
    summary: Combine a set of styles together (but does not register css classes).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function concatStyleSets<TStyleSet1, TStyleSet2,
        TStyleSet3, TStyleSet4, TStyleSet5, TStyleSet6>(styleSet1: TStyleSet1 |
        false | null | undefined, styleSet2: TStyleSet2 | false | null |
        undefined, styleSet3: TStyleSet3 | false | null | undefined, styleSet4:
        TStyleSet4 | false | null | undefined, styleSet5: TStyleSet5 | false |
        null | undefined, styleSet6: TStyleSet6 | false | null | undefined):
        IConcatenatedStyleSet<ObjectOnly<TStyleSet1> & ObjectOnly<TStyleSet2> &
        ObjectOnly<TStyleSet3> & ObjectOnly<TStyleSet4> & ObjectOnly<TStyleSet5>
        & ObjectOnly<TStyleSet6>>;
      parameters:
        - id: styleSet1
          description: The first style set to be concatenated.
          type: TStyleSet1 | false | null | undefined
        - id: styleSet2
          description: The second style set to be concatenated.
          type: TStyleSet2 | false | null | undefined
        - id: styleSet3
          description: The third style set to be concatenated.
          type: TStyleSet3 | false | null | undefined
        - id: styleSet4
          description: The fourth style set to be concatenated.
          type: TStyleSet4 | false | null | undefined
        - id: styleSet5
          description: The fifth set to be concatenated.
          type: TStyleSet5 | false | null | undefined
        - id: styleSet6
          description: The sixth set to be concatenated.
          type: TStyleSet6 | false | null | undefined
      return:
        type: >-
          IConcatenatedStyleSet&lt;ObjectOnly&lt;TStyleSet1&gt; &
          ObjectOnly&lt;TStyleSet2&gt; & ObjectOnly&lt;TStyleSet3&gt; &
          ObjectOnly&lt;TStyleSet4&gt; & ObjectOnly&lt;TStyleSet5&gt; &
          ObjectOnly&lt;TStyleSet6&gt;&gt;
        description: ''
  - name: concatStyleSets(styleSets)
    uid: '@fluentui/merge-styles!concatStyleSets:function(7)'
    package: '@fluentui/merge-styles'
    summary: Combine a set of styles together (but does not register css classes).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function concatStyleSets(...styleSets: (IStyleSet | false
        | null | undefined)[]): IConcatenatedStyleSet<any>;
      parameters:
        - id: styleSets
          description: One or more stylesets to be merged (each param can also be falsy).
          type: '(IStyleSet | false | null | undefined)[]'
      return:
        type: IConcatenatedStyleSet&lt;any&gt;
        description: ''
  - name: 'concatStyleSetsWithProps(styleProps, allStyles)'
    uid: '@fluentui/merge-styles!concatStyleSetsWithProps:function(1)'
    package: '@fluentui/merge-styles'
    summary: >-
      Concatenates style sets into one, but resolves functional sets using the
      given props.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function concatStyleSetsWithProps<TStyleProps, TStyleSet
        extends IStyleSet<TStyleSet>>(styleProps: TStyleProps, ...allStyles:
        (IStyleFunctionOrObject<TStyleProps, TStyleSet> | undefined)[]):
        DeepPartial<TStyleSet>;
      parameters:
        - id: styleProps
          description: Props used to resolve functional sets.
          type: TStyleProps
        - id: allStyles
          description: 'Style sets, which can be functions or objects.'
          type: '(IStyleFunctionOrObject&lt;TStyleProps, TStyleSet&gt; | undefined)[]'
      return:
        type: DeepPartial&lt;TStyleSet&gt;
        description: ''
  - name: fontFace(font)
    uid: '@fluentui/merge-styles!fontFace:function(1)'
    package: '@fluentui/merge-styles'
    summary: Registers a font face.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'export declare function fontFace(font: IFontFace): void;'
      parameters:
        - id: font
          description: ''
          type: '<xref uid="@fluentui/merge-styles!IFontFace:interface" />'
      return:
        type: void
        description: ''
  - name: keyframes(timeline)
    uid: '@fluentui/merge-styles!keyframes:function(1)'
    package: '@fluentui/merge-styles'
    summary: Registers keyframe definitions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'export declare function keyframes(timeline: IKeyframes): string;'
      parameters:
        - id: timeline
          description: ''
          type: IKeyframes
      return:
        type: string
        description: ''
  - name: 'mergeCss(args, options)'
    uid: '@fluentui/merge-styles!mergeCss:function(1)'
    package: '@fluentui/merge-styles'
    summary: >-
      Concatenation helper, which can merge class names together. Skips over
      falsey values. Accepts a set of options that will be used when calculating
      styles.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeCss(args: (IStyle | IStyleBaseArray | false
        | null | undefined) | (IStyle | IStyleBaseArray | false | null |
        undefined)[], options?: IStyleOptions): string;
      parameters:
        - id: args
          description: ''
          type: >-
            (IStyle | IStyleBaseArray | false | null | undefined) | (IStyle |
            IStyleBaseArray | false | null | undefined)[]
        - id: options
          description: ''
          type: IStyleOptions
      return:
        type: string
        description: ''
  - name: 'mergeCssSets(styleSets, options)'
    uid: '@fluentui/merge-styles!mergeCssSets:function(1)'
    package: '@fluentui/merge-styles'
    summary: >-
      Takes in one or more style set objects, each1consisting of a set of areas,
      each which will produce a class name. Using this is analogous to calling
      `mergeCss` for each property in the object, but ensures we maintain the
      set ordering when multiple style sets are merged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeCssSets<TStyleSet>(styleSets: [TStyleSet |
        false | null | undefined], options?: IStyleOptions):
        IProcessedStyleSet<TStyleSet>;
      parameters:
        - id: styleSets
          description: One or more style sets to be merged.
          type: '[TStyleSet | false | null | undefined]'
        - id: options
          description: (optional) Options to use when creating rules.
          type: IStyleOptions
      return:
        type: IProcessedStyleSet&lt;TStyleSet&gt;
        description: ''
  - name: 'mergeCssSets(styleSets, options)'
    uid: '@fluentui/merge-styles!mergeCssSets:function(2)'
    package: '@fluentui/merge-styles'
    summary: >-
      Takes in one or more style set objects, each1consisting of a set of areas,
      each which will produce a class name. Using this is analogous to calling
      `mergeCss` for each property in the object, but ensures we maintain the
      set ordering when multiple style sets are merged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeCssSets<TStyleSet1, TStyleSet2>(styleSets:
        [TStyleSet1 | false | null | undefined, TStyleSet2 | false | null |
        undefined], options?: IStyleOptions): IProcessedStyleSet<TStyleSet1 &
        TStyleSet2>;
      parameters:
        - id: styleSets
          description: One or more style sets to be merged.
          type: >-
            [TStyleSet1 | false | null | undefined, TStyleSet2 | false | null |
            undefined]
        - id: options
          description: (optional) Options to use when creating rules.
          type: IStyleOptions
      return:
        type: IProcessedStyleSet&lt;TStyleSet1 & TStyleSet2&gt;
        description: ''
  - name: 'mergeCssSets(styleSets, options)'
    uid: '@fluentui/merge-styles!mergeCssSets:function(3)'
    package: '@fluentui/merge-styles'
    summary: >-
      Takes in one or more style set objects, each1consisting of a set of areas,
      each which will produce a class name. Using this is analogous to calling
      `mergeCss` for each property in the object, but ensures we maintain the
      set ordering when multiple style sets are merged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeCssSets<TStyleSet1, TStyleSet2,
        TStyleSet3>(styleSets: [TStyleSet1 | false | null | undefined,
        TStyleSet2 | false | null | undefined, TStyleSet3 | false | null |
        undefined], options?: IStyleOptions): IProcessedStyleSet<TStyleSet1 &
        TStyleSet2 & TStyleSet3>;
      parameters:
        - id: styleSets
          description: One or more style sets to be merged.
          type: >-
            [TStyleSet1 | false | null | undefined, TStyleSet2 | false | null |
            undefined, TStyleSet3 | false | null | undefined]
        - id: options
          description: (optional) Options to use when creating rules.
          type: IStyleOptions
      return:
        type: IProcessedStyleSet&lt;TStyleSet1 & TStyleSet2 & TStyleSet3&gt;
        description: ''
  - name: 'mergeCssSets(styleSets, options)'
    uid: '@fluentui/merge-styles!mergeCssSets:function(4)'
    package: '@fluentui/merge-styles'
    summary: >-
      Takes in one or more style set objects, each1consisting of a set of areas,
      each which will produce a class name. Using this is analogous to calling
      `mergeCss` for each property in the object, but ensures we maintain the
      set ordering when multiple style sets are merged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeCssSets<TStyleSet1, TStyleSet2, TStyleSet3,
        TStyleSet4>(styleSets: [TStyleSet1 | false | null | undefined,
        TStyleSet2 | false | null | undefined, TStyleSet3 | false | null |
        undefined, TStyleSet4 | false | null | undefined], options?:
        IStyleOptions): IProcessedStyleSet<ObjectOnly<TStyleSet1> &
        ObjectOnly<TStyleSet2> & ObjectOnly<TStyleSet3> &
        ObjectOnly<TStyleSet4>>;
      parameters:
        - id: styleSets
          description: One or more style sets to be merged.
          type: >-
            [TStyleSet1 | false | null | undefined, TStyleSet2 | false | null |
            undefined, TStyleSet3 | false | null | undefined, TStyleSet4 | false
            | null | undefined]
        - id: options
          description: (optional) Options to use when creating rules.
          type: IStyleOptions
      return:
        type: >-
          IProcessedStyleSet&lt;ObjectOnly&lt;TStyleSet1&gt; &
          ObjectOnly&lt;TStyleSet2&gt; & ObjectOnly&lt;TStyleSet3&gt; &
          ObjectOnly&lt;TStyleSet4&gt;&gt;
        description: ''
  - name: 'mergeCssSets(styleSet, options)'
    uid: '@fluentui/merge-styles!mergeCssSets:function(5)'
    package: '@fluentui/merge-styles'
    summary: >-
      Takes in one or more style set objects, each1consisting of a set of areas,
      each which will produce a class name. Using this is analogous to calling
      `mergeCss` for each property in the object, but ensures we maintain the
      set ordering when multiple style sets are merged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeCssSets<TStyleSet>(styleSet: [TStyleSet |
        false | null | undefined], options?: IStyleOptions):
        IProcessedStyleSet<TStyleSet>;
      parameters:
        - id: styleSet
          description: ''
          type: '[TStyleSet | false | null | undefined]'
        - id: options
          description: (optional) Options to use when creating rules.
          type: IStyleOptions
      return:
        type: IProcessedStyleSet&lt;TStyleSet&gt;
        description: ''
  - name: mergeStyles(args)
    uid: '@fluentui/merge-styles!mergeStyles:function(1)'
    package: '@fluentui/merge-styles'
    summary: >-
      Concatenation helper, which can merge class names together. Skips over
      falsey values.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeStyles(...args: (IStyle | IStyleBaseArray |
        false | null | undefined)[]): string;
      parameters:
        - id: args
          description: ''
          type: '(IStyle | IStyleBaseArray | false | null | undefined)[]'
      return:
        type: string
        description: ''
  - name: mergeStyleSets(styleSet)
    uid: '@fluentui/merge-styles!mergeStyleSets:function(1)'
    package: '@fluentui/merge-styles'
    summary: >-
      Takes in one or more style set objects, each consisting of a set of areas,
      each which will produce a class name. Using this is analogous to calling
      `mergeStyles` for each property in the object, but ensures we maintain the
      set ordering when multiple style sets are merged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeStyleSets<TStyleSet>(styleSet: TStyleSet |
        false | null | undefined): IProcessedStyleSet<ObjectOnly<TStyleSet>>;
      parameters:
        - id: styleSet
          description: The first style set to be merged and reigstered.
          type: TStyleSet | false | null | undefined
      return:
        type: IProcessedStyleSet&lt;ObjectOnly&lt;TStyleSet&gt;&gt;
        description: ''
  - name: 'mergeStyleSets(styleSet1, styleSet2)'
    uid: '@fluentui/merge-styles!mergeStyleSets:function(2)'
    package: '@fluentui/merge-styles'
    summary: >-
      Takes in one or more style set objects, each consisting of a set of areas,
      each which will produce a class name. Using this is analogous to calling
      `mergeStyles` for each property in the object, but ensures we maintain the
      set ordering when multiple style sets are merged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeStyleSets<TStyleSet1,
        TStyleSet2>(styleSet1: TStyleSet1 | false | null | undefined, styleSet2:
        TStyleSet2 | false | null | undefined):
        IProcessedStyleSet<ObjectOnly<TStyleSet1> & ObjectOnly<TStyleSet2>>;
      parameters:
        - id: styleSet1
          description: The first style set to be merged.
          type: TStyleSet1 | false | null | undefined
        - id: styleSet2
          description: The second style set to be merged.
          type: TStyleSet2 | false | null | undefined
      return:
        type: >-
          IProcessedStyleSet&lt;ObjectOnly&lt;TStyleSet1&gt; &
          ObjectOnly&lt;TStyleSet2&gt;&gt;
        description: ''
  - name: 'mergeStyleSets(styleSet1, styleSet2, styleSet3)'
    uid: '@fluentui/merge-styles!mergeStyleSets:function(3)'
    package: '@fluentui/merge-styles'
    summary: >-
      Takes in one or more style set objects, each consisting of a set of areas,
      each which will produce a class name. Using this is analogous to calling
      `mergeStyles` for each property in the object, but ensures we maintain the
      set ordering when multiple style sets are merged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeStyleSets<TStyleSet1, TStyleSet2,
        TStyleSet3>(styleSet1: TStyleSet1 | false | null | undefined, styleSet2:
        TStyleSet2 | false | null | undefined, styleSet3: TStyleSet3 | false |
        null | undefined): IProcessedStyleSet<ObjectOnly<TStyleSet1> &
        ObjectOnly<TStyleSet2> & ObjectOnly<TStyleSet3>>;
      parameters:
        - id: styleSet1
          description: The first style set to be merged.
          type: TStyleSet1 | false | null | undefined
        - id: styleSet2
          description: The second style set to be merged.
          type: TStyleSet2 | false | null | undefined
        - id: styleSet3
          description: The third style set to be merged.
          type: TStyleSet3 | false | null | undefined
      return:
        type: >-
          IProcessedStyleSet&lt;ObjectOnly&lt;TStyleSet1&gt; &
          ObjectOnly&lt;TStyleSet2&gt; & ObjectOnly&lt;TStyleSet3&gt;&gt;
        description: ''
  - name: 'mergeStyleSets(styleSet1, styleSet2, styleSet3, styleSet4)'
    uid: '@fluentui/merge-styles!mergeStyleSets:function(4)'
    package: '@fluentui/merge-styles'
    summary: >-
      Takes in one or more style set objects, each consisting of a set of areas,
      each which will produce a class name. Using this is analogous to calling
      `mergeStyles` for each property in the object, but ensures we maintain the
      set ordering when multiple style sets are merged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeStyleSets<TStyleSet1, TStyleSet2,
        TStyleSet3, TStyleSet4>(styleSet1: TStyleSet1 | false | null |
        undefined, styleSet2: TStyleSet2 | false | null | undefined, styleSet3:
        TStyleSet3 | false | null | undefined, styleSet4: TStyleSet4 | false |
        null | undefined): IProcessedStyleSet<ObjectOnly<TStyleSet1> &
        ObjectOnly<TStyleSet2> & ObjectOnly<TStyleSet3> &
        ObjectOnly<TStyleSet4>>;
      parameters:
        - id: styleSet1
          description: The first style set to be merged.
          type: TStyleSet1 | false | null | undefined
        - id: styleSet2
          description: The second style set to be merged.
          type: TStyleSet2 | false | null | undefined
        - id: styleSet3
          description: The third style set to be merged.
          type: TStyleSet3 | false | null | undefined
        - id: styleSet4
          description: The fourth style set to be merged.
          type: TStyleSet4 | false | null | undefined
      return:
        type: >-
          IProcessedStyleSet&lt;ObjectOnly&lt;TStyleSet1&gt; &
          ObjectOnly&lt;TStyleSet2&gt; & ObjectOnly&lt;TStyleSet3&gt; &
          ObjectOnly&lt;TStyleSet4&gt;&gt;
        description: ''
  - name: mergeStyleSets(styleSets)
    uid: '@fluentui/merge-styles!mergeStyleSets:function(5)'
    package: '@fluentui/merge-styles'
    summary: >-
      Takes in one or more style set objects, each consisting of a set of areas,
      each which will produce a class name. Using this is analogous to calling
      `mergeStyles` for each property in the object, but ensures we maintain the
      set ordering when multiple style sets are merged.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function mergeStyleSets(...styleSets: Array<IStyleSet |
        undefined | false | null>): IProcessedStyleSet<any>;
      parameters:
        - id: styleSets
          description: One or more style sets to be merged.
          type: Array&lt;IStyleSet | undefined | false | null&gt;
      return:
        type: IProcessedStyleSet&lt;any&gt;
        description: ''
  - name: setRTL(isRTL)
    uid: '@fluentui/merge-styles!setRTL:function(1)'
    package: '@fluentui/merge-styles'
    summary: Sets the current RTL value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'export declare function setRTL(isRTL: boolean): void;'
      parameters:
        - id: isRTL
          description: ''
          type: boolean
      return:
        type: void
        description: ''
