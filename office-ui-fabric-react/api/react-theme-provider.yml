### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-theme-provider!'
    name: '@fluentui/react-theme-provider'
    fullName: '@fluentui/react-theme-provider'
    langs:
      - typeScript
    type: package
    children:
      - '@fluentui/react-theme-provider!makeStyles:function(1)'
      - '@fluentui/react-theme-provider!StyleOptions:interface'
      - '@fluentui/react-theme-provider!StyleProps:interface'
      - '@fluentui/react-theme-provider!StyleRenderer:interface'
      - '@fluentui/react-theme-provider!ThemeProviderProps:interface'
  - uid: '@fluentui/react-theme-provider!makeStyles:function(1)'
    summary: 'Registers a css object, optionally as a function of the theme.'
    name: makeStyles(styleOrFunction)
    fullName: makeStyles(styleOrFunction)
    langs:
      - typeScript
    type: function
    syntax:
      content: |-
        export declare function makeStyles<TStyleSet extends {
            [key: string]: IStyle;
        }>(styleOrFunction: TStyleSet | ((theme: Theme) => TStyleSet)): (theme?: Theme, renderer?: StyleRenderer) => {
            [key in keyof TStyleSet]: string;
        };
      return:
        type:
          - |-
            (theme?: Theme, renderer?: StyleRenderer) => {
                [key in keyof TStyleSet]: string;
            }
        description: ''
      parameters:
        - id: styleOrFunction
          description: 'Either a css javascript object, or a function which takes in `ITheme` and returns a css javascript object.'
          type:
            - 'TStyleSet | ((theme: Theme) => TStyleSet)'
      typeParameters:
        - id: TStyleSet
          type:
            - |-
              {
                  [key: string]: IStyle;
              }
references:
  - uid: '@fluentui/react-theme-provider!StyleOptions:interface'
    name: StyleOptions
  - uid: '@fluentui/react-theme-provider!StyleProps:interface'
    name: StyleProps
  - uid: '@fluentui/react-theme-provider!StyleRenderer:interface'
    name: StyleRenderer
  - uid: '@fluentui/react-theme-provider!ThemeProviderProps:interface'
    name: ThemeProviderProps
