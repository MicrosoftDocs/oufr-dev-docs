### YamlMime:TSType
name: IColumn
uid: 'office-ui-fabric-react!IColumn:interface'
package: office-ui-fabric-react!
fullName: IColumn
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: ariaLabel
    uid: 'office-ui-fabric-react!IColumn#ariaLabel:member'
    package: office-ui-fabric-react!
    fullName: ariaLabel
    summary: >-
      Accessible label for the column. The column name will still be used as the
      primary label, but this text (if specified) will be read after the column
      name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type: string
  - name: calculatedWidth
    uid: 'office-ui-fabric-react!IColumn#calculatedWidth:member'
    package: office-ui-fabric-react!
    fullName: calculatedWidth
    summary: Internal only value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'calculatedWidth?: number;'
      return:
        type: number
  - name: className
    uid: 'office-ui-fabric-react!IColumn#className:member'
    package: office-ui-fabric-react!
    fullName: className
    summary: Class name to apply to the column cell within each row.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: columnActionsMode
    uid: 'office-ui-fabric-react!IColumn#columnActionsMode:member'
    package: office-ui-fabric-react!
    fullName: columnActionsMode
    summary: Defines how the column's header should render.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'columnActionsMode?: ColumnActionsMode;'
      return:
        type: ColumnActionsMode
  - name: currentWidth
    uid: 'office-ui-fabric-react!IColumn#currentWidth:member'
    package: office-ui-fabric-react!
    fullName: currentWidth
    summary: >-
      Internal only value. Remembers the actual width of the column in any case.
      `calculatedWidth` is only saved when it's defined by user, not for
      justified calculations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'currentWidth?: number;'
      return:
        type: number
  - name: data
    uid: 'office-ui-fabric-react!IColumn#data:member'
    package: office-ui-fabric-react!
    fullName: data
    summary: Arbitrary data passthrough which can be used by the caller.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'data?: any;'
      return:
        type: any
  - name: fieldName
    uid: 'office-ui-fabric-react!IColumn#fieldName:member'
    package: office-ui-fabric-react!
    fullName: fieldName
    summary: >-
      The field to pull the text value from for the column. Can be unset if a
      custom `onRender` method is provided.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'fieldName?: string;'
      return:
        type: string
  - name: filterAriaLabel
    uid: 'office-ui-fabric-react!IColumn#filterAriaLabel:member'
    package: office-ui-fabric-react!
    fullName: filterAriaLabel
    summary: Accessible label for the status of this column when filtered.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'filterAriaLabel?: string;'
      return:
        type: string
  - name: getValueKey
    uid: 'office-ui-fabric-react!IColumn#getValueKey:member'
    package: office-ui-fabric-react!
    fullName: getValueKey
    summary: Custom override for the parent list's `getCellValueKey`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getValueKey?: (item?: any, index?: number, column?: IColumn) => string;'
      return:
        type: '(item?: any, index?: number, column?: IColumn) =&gt; string'
  - name: groupAriaLabel
    uid: 'office-ui-fabric-react!IColumn#groupAriaLabel:member'
    package: office-ui-fabric-react!
    fullName: groupAriaLabel
    summary: Accessible label for the status of this column when grouped.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'groupAriaLabel?: string;'
      return:
        type: string
  - name: headerClassName
    uid: 'office-ui-fabric-react!IColumn#headerClassName:member'
    package: office-ui-fabric-react!
    fullName: headerClassName
    summary: Class name to apply to the column header cell.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'headerClassName?: string;'
      return:
        type: string
  - name: iconClassName
    uid: 'office-ui-fabric-react!IColumn#iconClassName:member'
    package: office-ui-fabric-react!
    fullName: iconClassName
    summary: Class name for the icon within the header.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'iconClassName?: string;'
      return:
        type: string
  - name: iconName
    uid: 'office-ui-fabric-react!IColumn#iconName:member'
    package: office-ui-fabric-react!
    fullName: iconName
    summary: Custom icon to use in the column header.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'iconName?: string;'
      return:
        type: string
  - name: isCollapsable
    uid: 'office-ui-fabric-react!IColumn#isCollapsable:member'
    package: office-ui-fabric-react!
    fullName: isCollapsable
    summary: >-
      If true, allow the column to be collapsed when rendered in justified
      layout.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `isCollapsible`
    syntax:
      content: 'isCollapsable?: boolean;'
      return:
        type: boolean
  - name: isCollapsible
    uid: 'office-ui-fabric-react!IColumn#isCollapsible:member'
    package: office-ui-fabric-react!
    fullName: isCollapsible
    summary: >-
      If true, allow the column to be collapsed when rendered in justified
      layout.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isCollapsible?: boolean;'
      return:
        type: boolean
  - name: isFiltered
    uid: 'office-ui-fabric-react!IColumn#isFiltered:member'
    package: office-ui-fabric-react!
    fullName: isFiltered
    summary: >-
      Whether the list is filtered by this column. If true, shows a filter icon
      next to this column's name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isFiltered?: boolean;'
      return:
        type: boolean
  - name: isGrouped
    uid: 'office-ui-fabric-react!IColumn#isGrouped:member'
    package: office-ui-fabric-react!
    fullName: isGrouped
    summary: >-
      Whether the list is grouped by this column. If true, shows a grouped icon
      next to this column's name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isGrouped?: boolean;'
      return:
        type: boolean
  - name: isIconOnly
    uid: 'office-ui-fabric-react!IColumn#isIconOnly:member'
    package: office-ui-fabric-react!
    fullName: isIconOnly
    summary: >-
      Whether only the icon should be displayed in the column header. If true,
      the column name and dropdown chevron will not be displayed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isIconOnly?: boolean;'
      return:
        type: boolean
  - name: isMenuOpen
    uid: 'office-ui-fabric-react!IColumn#isMenuOpen:member'
    package: office-ui-fabric-react!
    fullName: isMenuOpen
    summary: >-
      Whether a dropdown menu is open so that the appropriate ARIA attributes
      are rendered.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isMenuOpen?: boolean;'
      return:
        type: boolean
  - name: isMultiline
    uid: 'office-ui-fabric-react!IColumn#isMultiline:member'
    package: office-ui-fabric-react!
    fullName: isMultiline
    summary: Determines if the column can render multi-line text.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isMultiline?: boolean;'
      return:
        type: boolean
  - name: isPadded
    uid: 'office-ui-fabric-react!IColumn#isPadded:member'
    package: office-ui-fabric-react!
    fullName: isPadded
    summary: 'If true, add additional LTR padding-right to column and cells.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isPadded?: boolean;'
      return:
        type: boolean
  - name: isResizable
    uid: 'office-ui-fabric-react!IColumn#isResizable:member'
    package: office-ui-fabric-react!
    fullName: isResizable
    summary: Determines if the column can be resized.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isResizable?: boolean;'
      return:
        type: boolean
  - name: isRowHeader
    uid: 'office-ui-fabric-react!IColumn#isRowHeader:member'
    package: office-ui-fabric-react!
    fullName: isRowHeader
    summary: >-
      Whether the column is a header for the given row. There should be only one
      column with this set to true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isRowHeader?: boolean;'
      return:
        type: boolean
  - name: isSorted
    uid: 'office-ui-fabric-react!IColumn#isSorted:member'
    package: office-ui-fabric-react!
    fullName: isSorted
    summary: >-
      Determines if the column is currently sorted. Renders a sort arrow in the
      column header.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isSorted?: boolean;'
      return:
        type: boolean
  - name: isSortedDescending
    uid: 'office-ui-fabric-react!IColumn#isSortedDescending:member'
    package: office-ui-fabric-react!
    fullName: isSortedDescending
    summary: Determines if the sort arrow is pointed down (descending) or up.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isSortedDescending?: boolean;'
      return:
        type: boolean
  - name: key
    uid: 'office-ui-fabric-react!IColumn#key:member'
    package: office-ui-fabric-react!
    fullName: key
    summary: A unique key for identifying the column.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'key: string;'
      return:
        type: string
  - name: maxWidth
    uid: 'office-ui-fabric-react!IColumn#maxWidth:member'
    package: office-ui-fabric-react!
    fullName: maxWidth
    summary: >-
      Maximum width for the column, if stretching is allowed in justified
      scenarios.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxWidth?: number;'
      return:
        type: number
  - name: minWidth
    uid: 'office-ui-fabric-react!IColumn#minWidth:member'
    package: office-ui-fabric-react!
    fullName: minWidth
    summary: Minimum width for the column.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minWidth: number;'
      return:
        type: number
  - name: name
    uid: 'office-ui-fabric-react!IColumn#name:member'
    package: office-ui-fabric-react!
    fullName: name
    summary: Name to render on the column header.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string;'
      return:
        type: string
  - name: onColumnClick
    uid: 'office-ui-fabric-react!IColumn#onColumnClick:member'
    package: office-ui-fabric-react!
    fullName: onColumnClick
    summary: Callback for when the user clicks on the column header.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) =>
        void;
      return:
        type: '(ev: React.MouseEvent&lt;HTMLElement&gt;, column: IColumn) =&gt; void'
  - name: onColumnContextMenu
    uid: 'office-ui-fabric-react!IColumn#onColumnContextMenu:member'
    package: office-ui-fabric-react!
    fullName: onColumnContextMenu
    summary: Callback for when the user opens the column header context menu.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onColumnContextMenu?: (column?: IColumn, ev?:
        React.MouseEvent<HTMLElement>) => void;
      return:
        type: >-
          (column?: IColumn, ev?: React.MouseEvent&lt;HTMLElement&gt;) =&gt;
          void
  - name: onColumnResize
    uid: 'office-ui-fabric-react!IColumn#onColumnResize:member'
    package: office-ui-fabric-react!
    fullName: onColumnResize
    summary: >-
      Callback for when the column is resized (`width` is the current width).


      Prefer this over `DetailsList`<!-- -->'s `onColumnResize` if you require
      the `IColumn` to report its width after every resize event. Consider
      debouncing the callback if resize events occur frequently.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onColumnResize?: (width?: number) => void;'
      return:
        type: '(width?: number) =&gt; void'
  - name: onRender
    uid: 'office-ui-fabric-react!IColumn#onRender:member'
    package: office-ui-fabric-react!
    fullName: onRender
    summary: 'Custom renderer for cell content, instead of the default text rendering.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRender?: (item?: any, index?: number, column?: IColumn) => any;'
      return:
        type: '(item?: any, index?: number, column?: IColumn) =&gt; any'
  - name: onRenderDivider
    uid: 'office-ui-fabric-react!IColumn#onRenderDivider:member'
    package: office-ui-fabric-react!
    fullName: onRenderDivider
    summary: Custom renderer for column header divider.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderDivider?: IRenderFunction<IDetailsColumnProps>;'
      return:
        type: IRenderFunction&lt;IDetailsColumnProps&gt;
  - name: sortAscendingAriaLabel
    uid: 'office-ui-fabric-react!IColumn#sortAscendingAriaLabel:member'
    package: office-ui-fabric-react!
    fullName: sortAscendingAriaLabel
    summary: >-
      Accessible label for indicating that the list is sorted by this column in
      ascending order. This will be read after the main column header label.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sortAscendingAriaLabel?: string;'
      return:
        type: string
  - name: sortDescendingAriaLabel
    uid: 'office-ui-fabric-react!IColumn#sortDescendingAriaLabel:member'
    package: office-ui-fabric-react!
    fullName: sortDescendingAriaLabel
    summary: >-
      Accessible label for indicating that the list is sorted by this column in
      descending order. This will be read after the main column header label.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sortDescendingAriaLabel?: string;'
      return:
        type: string
  - name: styles
    uid: 'office-ui-fabric-react!IColumn#styles:member'
    package: office-ui-fabric-react!
    fullName: styles
    summary: Custom overrides to the themed or default styles.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IDetailsColumnStyleProps,
        IDetailsColumnStyles>;
      return:
        type: >-
          IStyleFunctionOrObject&lt;IDetailsColumnStyleProps,
          IDetailsColumnStyles&gt;
