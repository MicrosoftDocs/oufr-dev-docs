### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList:class'
    name: BaseSelectedItemsList
    fullName: BaseSelectedItemsList
    langs:
      - typeScript
    type: class
    extends:
      - 'React.Component<P, IBaseSelectedItemsListState<T>> '
    implements:
      - 'IBaseSelectedItemsList<T> '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!BaseSelectedItemsList:constructor(1)'
      - 'office-ui-fabric-react!BaseSelectedItemsList#addItems:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#componentDidMount:member(1)'
      - 'office-ui-fabric-react!BaseSelectedItemsList#copyItems:member(1)'
      - 'office-ui-fabric-react!BaseSelectedItemsList#hasSelectedItems:member(1)'
      - 'office-ui-fabric-react!BaseSelectedItemsList#highlightedItems:member(1)'
      - 'office-ui-fabric-react!BaseSelectedItemsList#items:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#onChange:member(1)'
      - 'office-ui-fabric-react!BaseSelectedItemsList#onCopy:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#onItemChange:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#onSelectionChanged:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#removeItem:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#removeItemAt:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#removeItems:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#removeSelectedItems:member(1)'
      - 'office-ui-fabric-react!BaseSelectedItemsList#render:member(1)'
      - 'office-ui-fabric-react!BaseSelectedItemsList#renderItems:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#replaceItem:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#root:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#selection:member'
      - 'office-ui-fabric-react!BaseSelectedItemsList#UNSAFE_componentWillReceiveProps:member(1)'
      - 'office-ui-fabric-react!BaseSelectedItemsList#UNSAFE_componentWillUpdate:member(1)'
      - 'office-ui-fabric-react!BaseSelectedItemsList#unselectAll:member(1)'
      - 'office-ui-fabric-react!BaseSelectedItemsList#updateItems:member(1)'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList:constructor(1)'
    summary: Constructs a new instance of the `BaseSelectedItemsList` class
    name: (constructor)(basePickerProps)
    fullName: (constructor)(basePickerProps)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(basePickerProps: P);'
      parameters:
        - id: basePickerProps
          description: ''
          type:
            - P
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#addItems:member'
    name: addItems
    fullName: addItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'addItems: (items: T[]) => void;'
      return:
        type:
          - '(items: T[]) => void'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#componentDidMount:member(1)'
    name: componentDidMount()
    fullName: componentDidMount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#copyItems:member(1)'
    name: copyItems(items)
    fullName: copyItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected copyItems(items: T[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: items
          description: ''
          type:
            - 'T[]'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#hasSelectedItems:member(1)'
    name: hasSelectedItems()
    fullName: hasSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'hasSelectedItems(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#highlightedItems:member(1)'
    name: highlightedItems()
    fullName: highlightedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'highlightedItems(): T[];'
      return:
        type:
          - 'T[]'
        description: ''
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#items:member'
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: T[];'
      return:
        type:
          - 'T[]'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#onChange:member(1)'
    name: onChange(items)
    fullName: onChange(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected onChange(items?: T[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: items
          description: ''
          type:
            - 'T[]'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#onCopy:member'
    name: onCopy
    fullName: onCopy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onCopy: (ev: React.ClipboardEvent<HTMLElement>) => void;'
      return:
        type:
          - '(ev: React.ClipboardEvent<HTMLElement>) => void'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#onItemChange:member'
    name: onItemChange
    fullName: onItemChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onItemChange: (changedItem: T, index: number) => void;'
      return:
        type:
          - '(changedItem: T, index: number) => void'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#onSelectionChanged:member'
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onSelectionChanged: () => void;'
      return:
        type:
          - () => void
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#removeItem:member'
    name: removeItem
    fullName: removeItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'removeItem: (item: T) => void;'
      return:
        type:
          - '(item: T) => void'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#removeItemAt:member'
    name: removeItemAt
    fullName: removeItemAt
    langs:
      - typeScript
    type: property
    syntax:
      content: 'removeItemAt: (index: number) => void;'
      return:
        type:
          - '(index: number) => void'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#removeItems:member'
    name: removeItems
    fullName: removeItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'removeItems: (itemsToRemove: any[]) => void;'
      return:
        type:
          - '(itemsToRemove: any[]) => void'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#removeSelectedItems:member(1)'
    name: removeSelectedItems()
    fullName: removeSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeSelectedItems(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#render:member(1)'
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): any;'
      return:
        type:
          - any
        description: ''
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#renderItems:member'
    name: renderItems
    fullName: renderItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected renderItems: () => JSX.Element[];'
      return:
        type:
          - '() => JSX.Element[]'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#replaceItem:member'
    name: replaceItem
    fullName: replaceItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'replaceItem: (itemToReplace: T, itemsToReplaceWith: T[]) => void;'
      return:
        type:
          - '(itemToReplace: T, itemsToReplaceWith: T[]) => void'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#root:member'
    name: root
    fullName: root
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected root: HTMLElement;'
      return:
        type:
          - HTMLElement
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#selection:member'
    name: selection
    fullName: selection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected selection: Selection;'
      return:
        type:
          - '@uifabric/utilities!Selection:class'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#UNSAFE_componentWillReceiveProps:member(1)'
    name: UNSAFE_componentWillReceiveProps(newProps)
    fullName: UNSAFE_componentWillReceiveProps(newProps)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'UNSAFE_componentWillReceiveProps(newProps: P): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newProps
          description: ''
          type:
            - P
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#UNSAFE_componentWillUpdate:member(1)'
    name: 'UNSAFE_componentWillUpdate(newProps, newState)'
    fullName: 'UNSAFE_componentWillUpdate(newProps, newState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'UNSAFE_componentWillUpdate(newProps: P, newState: IBaseSelectedItemsListState): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newProps
          description: ''
          type:
            - P
        - id: newState
          description: ''
          type:
            - 'office-ui-fabric-react!IBaseSelectedItemsListState:interface'
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#unselectAll:member(1)'
    name: unselectAll()
    fullName: unselectAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unselectAll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office-ui-fabric-react!BaseSelectedItemsList#updateItems:member(1)'
    summary: >-
      Controls what happens whenever there is an action that impacts the selected items. If selectedItems is provided as
      a property then this will act as a controlled component and it will not update it's own state.
    name: 'updateItems(items, focusIndex)'
    fullName: 'updateItems(items, focusIndex)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'updateItems(items: T[], focusIndex?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: items
          description: ''
          type:
            - 'T[]'
        - id: focusIndex
          description: ''
          type:
            - number
