### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IVerticalDividerProps:interface'
    summary: Props for the Vertical Divider
    name: IVerticalDividerProps
    fullName: IVerticalDividerProps
    langs:
      - typeScript
    type: interface
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IVerticalDividerProps#className:member'
      - 'office-ui-fabric-react!IVerticalDividerProps#getClassNames:member'
      - 'office-ui-fabric-react!IVerticalDividerProps#styles:member'
      - 'office-ui-fabric-react!IVerticalDividerProps#theme:member'
  - uid: 'office-ui-fabric-react!IVerticalDividerProps#className:member'
    summary: className that will be placed on the divider wrapper div
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IVerticalDividerProps#getClassNames:member'
    deprecated:
      content: Use styles instead. Optional function to generate the class names for the divider for custom styling
    name: getClassNames
    fullName: getClassNames
    langs:
      - typeScript
    type: property
    syntax:
      content: 'getClassNames?: (theme: ITheme) => IVerticalDividerClassNames;'
      return:
        type:
          - '(theme: ITheme) => IVerticalDividerClassNames'
  - uid: 'office-ui-fabric-react!IVerticalDividerProps#styles:member'
    summary: Optional override stylings that will get merged with the dividers styles.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IVerticalDividerPropsStyles, IVerticalDividerStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IVerticalDividerPropsStyles, IVerticalDividerStyles>'
  - uid: 'office-ui-fabric-react!IVerticalDividerProps#theme:member'
    summary: The theme that should be used to render the vertical divider.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - ITheme
