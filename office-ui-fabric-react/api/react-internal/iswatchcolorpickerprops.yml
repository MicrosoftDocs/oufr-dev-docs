### YamlMime:TSType
name: ISwatchColorPickerProps
uid: '@fluentui/react-internal!ISwatchColorPickerProps:interface'
package: '@fluentui/react-internal!'
fullName: ISwatchColorPickerProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: ariaPosInSet
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#ariaPosInSet:member'
    package: '@fluentui/react-internal!'
    fullName: ariaPosInSet
    summary: >-
      Position this grid is in the parent set (index in a parent menu, for
      example)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaPosInSet?: number;'
      return:
        type: number
  - name: ariaSetSize
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#ariaSetSize:member'
    package: '@fluentui/react-internal!'
    fullName: ariaSetSize
    summary: 'Size of the parent set (size of parent menu, for example)'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaSetSize?: number;'
      return:
        type: number
  - name: cellBorderWidth
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#cellBorderWidth:member'
    package: '@fluentui/react-internal!'
    fullName: cellBorderWidth
    summary: 'Width of the border indicating a hovered/selected cell, in pixels'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellBorderWidth?: number;'
      return:
        type: number
  - name: cellHeight
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#cellHeight:member'
    package: '@fluentui/react-internal!'
    fullName: cellHeight
    summary: 'Height of an individual cell, in pixels'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellHeight?: number;'
      return:
        type: number
  - name: cellMargin
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#cellMargin:member'
    package: '@fluentui/react-internal!'
    fullName: cellMargin
    summary: 'The distance between cells, in pixels'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellMargin?: number;'
      return:
        type: number
  - name: cellShape
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#cellShape:member'
    package: '@fluentui/react-internal!'
    fullName: cellShape
    summary: The shape of the color cells.  'circle'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellShape?: ''circle'' | ''square'';'
      return:
        type: '''circle'' | ''square'''
  - name: cellWidth
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#cellWidth:member'
    package: '@fluentui/react-internal!'
    fullName: cellWidth
    summary: 'Width of an individual cell, in pixels'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cellWidth?: number;'
      return:
        type: number
  - name: className
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#className:member'
    package: '@fluentui/react-internal!'
    fullName: className
    summary: Additional class name to provide on the root element
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: colorCells
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#colorCells:member'
    package: '@fluentui/react-internal!'
    fullName: colorCells
    summary: >-
      The color cells that will be made available to the user.


      Note: When the reference to this prop changes, regardless of how many
      color cells change, all of the color cells will be re-rendered
      (potentially bad perf) because we memoize based on this prop's reference.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'colorCells: IColorCellProps[];'
      return:
        type: 'IColorCellProps[]'
  - name: columnCount
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#columnCount:member'
    package: '@fluentui/react-internal!'
    fullName: columnCount
    summary: Number of columns for the swatch color picker
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'columnCount: number;'
      return:
        type: number
  - name: defaultSelectedId
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#defaultSelectedId:member'
    package: '@fluentui/react-internal!'
    fullName: defaultSelectedId
    summary: >-
      ID of the default selected color swatch. Only provide this if the
      SwatchColorPicker is an uncontrolled component; otherwise, use the
      `selectedId` property.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultSelectedId?: string | undefined;'
      return:
        type: string | undefined
  - name: disabled
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#disabled:member'
    package: '@fluentui/react-internal!'
    fullName: disabled
    summary: Whether the control is disabled.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: boolean;'
      return:
        type: boolean
  - name: doNotContainWithinFocusZone
    uid: >-
      @fluentui/react-internal!ISwatchColorPickerProps#doNotContainWithinFocusZone:member
    package: '@fluentui/react-internal!'
    fullName: doNotContainWithinFocusZone
    summary: >-
      If false (the default), the grid is contained inside a FocusZone. If true,
      a FocusZone is not used.  false
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'doNotContainWithinFocusZone?: boolean;'
      return:
        type: boolean
  - name: focusOnHover
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#focusOnHover:member'
    package: '@fluentui/react-internal!'
    fullName: focusOnHover
    summary: Whether to update focus when a cell is hovered.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'focusOnHover?: boolean;'
      return:
        type: boolean
  - name: getColorGridCellStyles
    uid: >-
      @fluentui/react-internal!ISwatchColorPickerProps#getColorGridCellStyles:member
    package: '@fluentui/react-internal!'
    fullName: getColorGridCellStyles
    summary: Styles for the grid cells.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getColorGridCellStyles?:
        IStyleFunctionOrObject<IColorPickerGridCellStyleProps,
        IColorPickerGridCellStyles>;
      return:
        type: >-
          IStyleFunctionOrObject&lt;IColorPickerGridCellStyleProps,
          IColorPickerGridCellStyles&gt;
  - name: id
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#id:member'
    package: '@fluentui/react-internal!'
    fullName: id
    summary: >-
      ID for the swatch color picker's root element. Also used as a prefix for
      the IDs of color cells.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id?: string;'
      return:
        type: string
  - name: isControlled
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#isControlled:member'
    package: '@fluentui/react-internal!'
    fullName: isControlled
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: >-
      No longer used. Provide `selectedId` if controlled or `defaultSelectedId`
      if uncontrolled.
    syntax:
      content: 'isControlled?: boolean;'
      return:
        type: boolean
  - name: mouseLeaveParentSelector
    uid: >-
      @fluentui/react-internal!ISwatchColorPickerProps#mouseLeaveParentSelector:member
    package: '@fluentui/react-internal!'
    fullName: mouseLeaveParentSelector
    summary: >-
      Selector to focus on mouse leave. Should only be used in conjunction with
      `focusOnHover`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'mouseLeaveParentSelector?: string | undefined;'
      return:
        type: string | undefined
  - name: onCellFocused
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#onCellFocused:member'
    package: '@fluentui/react-internal!'
    fullName: onCellFocused
    summary: >-
      Callback for when the user focuses a color cell. If `id` and `color` are
      unspecified, cells are no longer being focused.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCellFocused?: (id?: string, color?: string) => void;'
      return:
        type: '(id?: string, color?: string) =&gt; void'
  - name: onCellHovered
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#onCellHovered:member'
    package: '@fluentui/react-internal!'
    fullName: onCellHovered
    summary: >-
      Callback for when the user hovers over a color cell. If `id` and `color`
      are unspecified, cells are no longer being hovered.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCellHovered?: (id?: string, color?: string) => void;'
      return:
        type: '(id?: string, color?: string) =&gt; void'
  - name: onChange
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#onChange:member'
    package: '@fluentui/react-internal!'
    fullName: onChange
    summary: >-
      Callback for when the user changes the color. If `id` and `color` are
      unspecified, there is no selected cell. (e.g. the user executed the
      currently selected cell to unselect it)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onChange?: (event: React.FormEvent<HTMLElement>, id: string | undefined,
        color: string | undefined) => void;
      return:
        type: >-
          (event: React.FormEvent&lt;HTMLElement&gt;, id: string | undefined,
          color: string | undefined) =&gt; void
  - name: onColorChanged
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#onColorChanged:member'
    package: '@fluentui/react-internal!'
    fullName: onColorChanged
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `onChange`
    syntax:
      content: 'onColorChanged?: (id?: string, color?: string) => void;'
      return:
        type: '(id?: string, color?: string) =&gt; void'
  - name: onRenderColorCell
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#onRenderColorCell:member'
    package: '@fluentui/react-internal!'
    fullName: onRenderColorCell
    summary: Custom render function for the color cell
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderColorCell?: IRenderFunction<IColorCellProps>;'
      return:
        type: IRenderFunction&lt;IColorCellProps&gt;
  - name: selectedId
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#selectedId:member'
    package: '@fluentui/react-internal!'
    fullName: selectedId
    summary: >-
      ID of the current selected color swatch. Only provide this if the
      SwatchColorPicker is a controlled component where you are maintaining its
      current state; otherwise, use the `defaultSelectedId` property.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectedId?: string;'
      return:
        type: string
  - name: shouldFocusCircularNavigate
    uid: >-
      @fluentui/react-internal!ISwatchColorPickerProps#shouldFocusCircularNavigate:member
    package: '@fluentui/react-internal!'
    fullName: shouldFocusCircularNavigate
    summary: >-
      Whether focus should cycle back to the beginning once the user navigates
      past the end (and vice versa). Only relevant if
      `doNotContainWithinFocusZone` is not true.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'shouldFocusCircularNavigate?: boolean;'
      return:
        type: boolean
  - name: styles
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#styles:member'
    package: '@fluentui/react-internal!'
    fullName: styles
    summary: Styles for the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<ISwatchColorPickerStyleProps,
        ISwatchColorPickerStyles>;
      return:
        type: >-
          IStyleFunctionOrObject&lt;ISwatchColorPickerStyleProps,
          ISwatchColorPickerStyles&gt;
  - name: theme
    uid: '@fluentui/react-internal!ISwatchColorPickerProps#theme:member'
    package: '@fluentui/react-internal!'
    fullName: theme
    summary: Theme to apply to the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
extends: 'React.RefAttributes&lt;HTMLElement&gt; '
