### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IColumn:interface'
    name: IColumn
    fullName: IColumn
    langs:
      - typeScript
    type: interface
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IColumn#ariaLabel:member'
      - 'office-ui-fabric-react!IColumn#calculatedWidth:member'
      - 'office-ui-fabric-react!IColumn#className:member'
      - 'office-ui-fabric-react!IColumn#columnActionsMode:member'
      - 'office-ui-fabric-react!IColumn#currentWidth:member'
      - 'office-ui-fabric-react!IColumn#data:member'
      - 'office-ui-fabric-react!IColumn#fieldName:member'
      - 'office-ui-fabric-react!IColumn#filterAriaLabel:member'
      - 'office-ui-fabric-react!IColumn#getValueKey:member'
      - 'office-ui-fabric-react!IColumn#groupAriaLabel:member'
      - 'office-ui-fabric-react!IColumn#headerClassName:member'
      - 'office-ui-fabric-react!IColumn#iconClassName:member'
      - 'office-ui-fabric-react!IColumn#iconName:member'
      - 'office-ui-fabric-react!IColumn#isCollapsable:member'
      - 'office-ui-fabric-react!IColumn#isCollapsible:member'
      - 'office-ui-fabric-react!IColumn#isFiltered:member'
      - 'office-ui-fabric-react!IColumn#isGrouped:member'
      - 'office-ui-fabric-react!IColumn#isIconOnly:member'
      - 'office-ui-fabric-react!IColumn#isMenuOpen:member'
      - 'office-ui-fabric-react!IColumn#isMultiline:member'
      - 'office-ui-fabric-react!IColumn#isPadded:member'
      - 'office-ui-fabric-react!IColumn#isResizable:member'
      - 'office-ui-fabric-react!IColumn#isRowHeader:member'
      - 'office-ui-fabric-react!IColumn#isSorted:member'
      - 'office-ui-fabric-react!IColumn#isSortedDescending:member'
      - 'office-ui-fabric-react!IColumn#key:member'
      - 'office-ui-fabric-react!IColumn#maxWidth:member'
      - 'office-ui-fabric-react!IColumn#minWidth:member'
      - 'office-ui-fabric-react!IColumn#name:member'
      - 'office-ui-fabric-react!IColumn#onColumnClick:member'
      - 'office-ui-fabric-react!IColumn#onColumnContextMenu:member'
      - 'office-ui-fabric-react!IColumn#onColumnResize:member'
      - 'office-ui-fabric-react!IColumn#onRender:member'
      - 'office-ui-fabric-react!IColumn#onRenderDivider:member'
      - 'office-ui-fabric-react!IColumn#sortAscendingAriaLabel:member'
      - 'office-ui-fabric-react!IColumn#sortDescendingAriaLabel:member'
      - 'office-ui-fabric-react!IColumn#styles:member'
  - uid: 'office-ui-fabric-react!IColumn#ariaLabel:member'
    summary: >-
      Accessible label for the column. The column name will still be used as the primary label, but this text (if
      specified) will be read after the column name.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#calculatedWidth:member'
    summary: Internal only value.
    name: calculatedWidth
    fullName: calculatedWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calculatedWidth?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IColumn#className:member'
    summary: Class name to apply to the column cell within each row.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#columnActionsMode:member'
    summary: Defines how the column's header should render.
    name: columnActionsMode
    fullName: columnActionsMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnActionsMode?: ColumnActionsMode;'
      return:
        type:
          - ColumnActionsMode
  - uid: 'office-ui-fabric-react!IColumn#currentWidth:member'
    summary: >-
      Internal only value. Remembers the actual width of the column in any case. `calculatedWidth` is only saved when
      it's defined by user, not for justified calculations.
    name: currentWidth
    fullName: currentWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'currentWidth?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IColumn#data:member'
    summary: Arbitrary data passthrough which can be used by the caller.
    name: data
    fullName: data
    langs:
      - typeScript
    type: property
    syntax:
      content: 'data?: any;'
      return:
        type:
          - any
  - uid: 'office-ui-fabric-react!IColumn#fieldName:member'
    summary: The field to pull the text value from for the column. Can be unset if a custom `onRender` method is provided.
    name: fieldName
    fullName: fieldName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'fieldName?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#filterAriaLabel:member'
    summary: Accessible label for the status of this column when filtered.
    name: filterAriaLabel
    fullName: filterAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'filterAriaLabel?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#getValueKey:member'
    summary: Custom override for the parent list's `getCellValueKey`<!-- -->.
    name: getValueKey
    fullName: getValueKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'getValueKey?: (item?: any, index?: number, column?: IColumn) => string;'
      return:
        type:
          - '(item?: any, index?: number, column?: IColumn) => string'
  - uid: 'office-ui-fabric-react!IColumn#groupAriaLabel:member'
    summary: Accessible label for the status of this column when grouped.
    name: groupAriaLabel
    fullName: groupAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'groupAriaLabel?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#headerClassName:member'
    summary: Class name to apply to the column header cell.
    name: headerClassName
    fullName: headerClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headerClassName?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#iconClassName:member'
    summary: Class name for the icon within the header.
    name: iconClassName
    fullName: iconClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'iconClassName?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#iconName:member'
    summary: Custom icon to use in the column header.
    name: iconName
    fullName: iconName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'iconName?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#isCollapsable:member'
    summary: 'If true, allow the column to be collapsed when rendered in justified layout.'
    deprecated:
      content: Use `isCollapsible`
    name: isCollapsable
    fullName: isCollapsable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCollapsable?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#isCollapsible:member'
    summary: 'If true, allow the column to be collapsed when rendered in justified layout.'
    name: isCollapsible
    fullName: isCollapsible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCollapsible?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#isFiltered:member'
    summary: 'Whether the list is filtered by this column. If true, shows a filter icon next to this column''s name.'
    name: isFiltered
    fullName: isFiltered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isFiltered?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#isGrouped:member'
    summary: 'Whether the list is grouped by this column. If true, shows a grouped icon next to this column''s name.'
    name: isGrouped
    fullName: isGrouped
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isGrouped?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#isIconOnly:member'
    summary: >-
      Whether only the icon should be displayed in the column header. If true, the column name and dropdown chevron will
      not be displayed.
    name: isIconOnly
    fullName: isIconOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isIconOnly?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#isMenuOpen:member'
    summary: Whether a dropdown menu is open so that the appropriate ARIA attributes are rendered.
    name: isMenuOpen
    fullName: isMenuOpen
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isMenuOpen?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#isMultiline:member'
    summary: Determines if the column can render multi-line text.
    name: isMultiline
    fullName: isMultiline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isMultiline?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#isPadded:member'
    summary: 'If true, add additional LTR padding-right to column and cells.'
    name: isPadded
    fullName: isPadded
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isPadded?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#isResizable:member'
    summary: Determines if the column can be resized.
    name: isResizable
    fullName: isResizable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isResizable?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#isRowHeader:member'
    summary: Whether the column is a header for the given row. There should be only one column with this set to true.
    name: isRowHeader
    fullName: isRowHeader
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isRowHeader?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#isSorted:member'
    summary: Determines if the column is currently sorted. Renders a sort arrow in the column header.
    name: isSorted
    fullName: isSorted
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSorted?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#isSortedDescending:member'
    summary: Determines if the sort arrow is pointed down (descending) or up.
    name: isSortedDescending
    fullName: isSortedDescending
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSortedDescending?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IColumn#key:member'
    summary: A unique key for identifying the column.
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'key: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#maxWidth:member'
    summary: 'Maximum width for the column, if stretching is allowed in justified scenarios.'
    name: maxWidth
    fullName: maxWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxWidth?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IColumn#minWidth:member'
    summary: Minimum width for the column.
    name: minWidth
    fullName: minWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minWidth: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IColumn#name:member'
    summary: Name to render on the column header.
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#onColumnClick:member'
    summary: Callback for when the user clicks on the column header.
    name: onColumnClick
    fullName: onColumnClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => void;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLElement>, column: IColumn) => void'
  - uid: 'office-ui-fabric-react!IColumn#onColumnContextMenu:member'
    summary: Callback for when the user opens the column header context menu.
    name: onColumnContextMenu
    fullName: onColumnContextMenu
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onColumnContextMenu?: (column?: IColumn, ev?: React.MouseEvent<HTMLElement>) => void;'
      return:
        type:
          - '(column?: IColumn, ev?: React.MouseEvent<HTMLElement>) => void'
  - uid: 'office-ui-fabric-react!IColumn#onColumnResize:member'
    summary: >-
      Callback for when the column is resized (`width` is the current width).


      Prefer this over `DetailsList`<!-- -->'s `onColumnResize` if you require the `IColumn` to report its width after
      every resize event. Consider debouncing the callback if resize events occur frequently.
    name: onColumnResize
    fullName: onColumnResize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onColumnResize?: (width?: number) => void;'
      return:
        type:
          - '(width?: number) => void'
  - uid: 'office-ui-fabric-react!IColumn#onRender:member'
    summary: 'Custom renderer for cell content, instead of the default text rendering.'
    name: onRender
    fullName: onRender
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRender?: (item?: any, index?: number, column?: IColumn) => any;'
      return:
        type:
          - '(item?: any, index?: number, column?: IColumn) => any'
  - uid: 'office-ui-fabric-react!IColumn#onRenderDivider:member'
    summary: Custom renderer for column header divider.
    name: onRenderDivider
    fullName: onRenderDivider
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderDivider?: IRenderFunction<IDetailsColumnProps>;'
      return:
        type:
          - IRenderFunction<IDetailsColumnProps>
  - uid: 'office-ui-fabric-react!IColumn#sortAscendingAriaLabel:member'
    summary: >-
      Accessible label for indicating that the list is sorted by this column in ascending order. This will be read after
      the main column header label.
    name: sortAscendingAriaLabel
    fullName: sortAscendingAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortAscendingAriaLabel?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#sortDescendingAriaLabel:member'
    summary: >-
      Accessible label for indicating that the list is sorted by this column in descending order. This will be read
      after the main column header label.
    name: sortDescendingAriaLabel
    fullName: sortDescendingAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortDescendingAriaLabel?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IColumn#styles:member'
    summary: Custom overrides to the themed or default styles.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IDetailsColumnStyleProps, IDetailsColumnStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IDetailsColumnStyleProps, IDetailsColumnStyles>'
