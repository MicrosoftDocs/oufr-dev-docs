### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react!IGroupDividerProps:interface'
    name: IGroupDividerProps
    fullName: IGroupDividerProps
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react!'
    children:
      - '@fluentui/react!IGroupDividerProps#ariaColSpan:member'
      - '@fluentui/react!IGroupDividerProps#className:member'
      - '@fluentui/react!IGroupDividerProps#compact:member'
      - '@fluentui/react!IGroupDividerProps#componentRef:member'
      - '@fluentui/react!IGroupDividerProps#expandButtonProps:member'
      - '@fluentui/react!IGroupDividerProps#footerText:member'
      - '@fluentui/react!IGroupDividerProps#group:member'
      - '@fluentui/react!IGroupDividerProps#groupIndex:member'
      - '@fluentui/react!IGroupDividerProps#groupLevel:member'
      - '@fluentui/react!IGroupDividerProps#groups:member'
      - '@fluentui/react!IGroupDividerProps#indentWidth:member'
      - '@fluentui/react!IGroupDividerProps#isCollapsedGroupSelectVisible:member'
      - '@fluentui/react!IGroupDividerProps#isGroupLoading:member'
      - '@fluentui/react!IGroupDividerProps#isSelected:member'
      - '@fluentui/react!IGroupDividerProps#loadingText:member'
      - '@fluentui/react!IGroupDividerProps#onGroupHeaderClick:member'
      - '@fluentui/react!IGroupDividerProps#onGroupHeaderKeyUp:member'
      - '@fluentui/react!IGroupDividerProps#onRenderTitle:member'
      - '@fluentui/react!IGroupDividerProps#onToggleCollapse:member'
      - '@fluentui/react!IGroupDividerProps#onToggleSelectGroup:member'
      - '@fluentui/react!IGroupDividerProps#onToggleSummarize:member'
      - '@fluentui/react!IGroupDividerProps#selected:member'
      - '@fluentui/react!IGroupDividerProps#selectionMode:member'
      - '@fluentui/react!IGroupDividerProps#showAllLinkText:member'
      - '@fluentui/react!IGroupDividerProps#theme:member'
      - '@fluentui/react!IGroupDividerProps#viewport:member'
  - uid: '@fluentui/react!IGroupDividerProps#ariaColSpan:member'
    summary: Defines the number of columns a group header needs to span in the case of a grid or treegrid
    name: ariaColSpan
    fullName: ariaColSpan
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaColSpan?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react!IGroupDividerProps#className:member'
    summary: Custom className
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react!IGroupDividerProps#compact:member'
    summary: Boolean value to indicate if the component should render in compact mode. Set to false by default
    name: compact
    fullName: compact
    langs:
      - typeScript
    type: property
    syntax:
      content: 'compact?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react!IGroupDividerProps#componentRef:member'
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<{}>;'
      return:
        type:
          - 'IRefObject<{}>'
  - uid: '@fluentui/react!IGroupDividerProps#expandButtonProps:member'
    summary: Props for expand/collapse button
    deprecated:
      content: >-
        Use [IGroupHeaderProps.expandButtonProps](xref:@fluentui/react!IGroupHeaderProps#expandButtonProps:member)
        instead.
    name: expandButtonProps
    fullName: expandButtonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'expandButtonProps?: React.HTMLAttributes<HTMLButtonElement>;'
      return:
        type:
          - React.HTMLAttributes<HTMLButtonElement>
  - uid: '@fluentui/react!IGroupDividerProps#footerText:member'
    summary: Text to display for the group footer.
    name: footerText
    fullName: footerText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'footerText?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react!IGroupDividerProps#group:member'
    summary: The group to be rendered by the header.
    name: group
    fullName: group
    langs:
      - typeScript
    type: property
    syntax:
      content: 'group?: IGroup;'
      return:
        type:
          - IGroup
  - uid: '@fluentui/react!IGroupDividerProps#groupIndex:member'
    summary: The index of the group.
    name: groupIndex
    fullName: groupIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'groupIndex?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react!IGroupDividerProps#groupLevel:member'
    summary: The indent level of the group.
    name: groupLevel
    fullName: groupLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'groupLevel?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react!IGroupDividerProps#groups:member'
    summary: Stores parent group's children.
    name: groups
    fullName: groups
    langs:
      - typeScript
    type: property
    syntax:
      content: 'groups?: IGroup[];'
      return:
        type:
          - 'IGroup[]'
  - uid: '@fluentui/react!IGroupDividerProps#indentWidth:member'
    summary: >-
      Width corresponding to a single level. This is multiplied by the groupLevel to get the full spacer width for the
      group.
    name: indentWidth
    fullName: indentWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'indentWidth?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react!IGroupDividerProps#isCollapsedGroupSelectVisible:member'
    summary: Determines if the group selection check box is shown for collapsed groups.
    name: isCollapsedGroupSelectVisible
    fullName: isCollapsedGroupSelectVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCollapsedGroupSelectVisible?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react!IGroupDividerProps#isGroupLoading:member'
    summary: Callback to determine if a group has missing items and needs to load them from the server.
    name: isGroupLoading
    fullName: isGroupLoading
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isGroupLoading?: (group: IGroup) => boolean;'
      return:
        type:
          - '(group: IGroup) => boolean'
  - uid: '@fluentui/react!IGroupDividerProps#isSelected:member'
    summary: Deprecated at v.65.1 and will be removed by v 1.0. Use `selected` instead.
    deprecated:
      content: Use `selected` instead.
    name: isSelected
    fullName: isSelected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSelected?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react!IGroupDividerProps#loadingText:member'
    summary: Text shown on group headers to indicate the group is being loaded.
    name: loadingText
    fullName: loadingText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'loadingText?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react!IGroupDividerProps#onGroupHeaderClick:member'
    summary: Callback for when the group header is clicked.
    name: onGroupHeaderClick
    fullName: onGroupHeaderClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onGroupHeaderClick?: (group: IGroup) => void;'
      return:
        type:
          - '(group: IGroup) => void'
  - uid: '@fluentui/react!IGroupDividerProps#onGroupHeaderKeyUp:member'
    summary: Callback for when the "keyup" event is fired on the group header.
    name: onGroupHeaderKeyUp
    fullName: onGroupHeaderKeyUp
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onGroupHeaderKeyUp?: (ev: React.KeyboardEvent<HTMLElement>, group?: IGroup) => void;'
      return:
        type:
          - '(ev: React.KeyboardEvent<HTMLElement>, group?: IGroup) => void'
  - uid: '@fluentui/react!IGroupDividerProps#onRenderTitle:member'
    summary: Override which allows the caller to provider a custom renderer for the GroupHeader title.
    name: onRenderTitle
    fullName: onRenderTitle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderTitle?: IRenderFunction<IGroupHeaderProps>;'
      return:
        type:
          - IRenderFunction<IGroupHeaderProps>
  - uid: '@fluentui/react!IGroupDividerProps#onToggleCollapse:member'
    summary: Callback for when the group is expanded or collapsed.
    name: onToggleCollapse
    fullName: onToggleCollapse
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onToggleCollapse?: (group: IGroup) => void;'
      return:
        type:
          - '(group: IGroup) => void'
  - uid: '@fluentui/react!IGroupDividerProps#onToggleSelectGroup:member'
    summary: Callback for when the group is selected.
    name: onToggleSelectGroup
    fullName: onToggleSelectGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onToggleSelectGroup?: (group: IGroup) => void;'
      return:
        type:
          - '(group: IGroup) => void'
  - uid: '@fluentui/react!IGroupDividerProps#onToggleSummarize:member'
    summary: Callback for when the group "Show All" link is clicked
    name: onToggleSummarize
    fullName: onToggleSummarize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onToggleSummarize?: (group: IGroup) => void;'
      return:
        type:
          - '(group: IGroup) => void'
  - uid: '@fluentui/react!IGroupDividerProps#selected:member'
    summary: If all items in the group are selected.
    name: selected
    fullName: selected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selected?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react!IGroupDividerProps#selectionMode:member'
    summary: The selection mode of the list the group lives within.
    name: selectionMode
    fullName: selectionMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectionMode?: SelectionMode;'
      return:
        type:
          - '@fluentui/utilities!SelectionMode:enum'
  - uid: '@fluentui/react!IGroupDividerProps#showAllLinkText:member'
    summary: Text to display for the group "Show All" link.
    name: showAllLinkText
    fullName: showAllLinkText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showAllLinkText?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react!IGroupDividerProps#theme:member'
    summary: Theme provided by the Higher Order Component
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
  - uid: '@fluentui/react!IGroupDividerProps#viewport:member'
    summary: A reference to the viewport in which the header is rendered.
    name: viewport
    fullName: viewport
    langs:
      - typeScript
    type: property
    syntax:
      content: 'viewport?: IViewport;'
      return:
        type:
          - 'office-ui-fabric-react!IViewport:interface'
