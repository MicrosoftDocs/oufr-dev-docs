### YamlMime:TSType
name: ITeachingBubbleProps
uid: '@fluentui/react!ITeachingBubbleProps:interface'
package: '@fluentui/react!'
fullName: ITeachingBubbleProps
summary: TeachingBubble component props.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: ariaDescribedBy
    uid: '@fluentui/react!ITeachingBubbleProps#ariaDescribedBy:member'
    package: '@fluentui/react!'
    fullName: ariaDescribedBy
    summary: >-
      Defines the element id referencing the element containing the description
      for the TeachingBubble.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaDescribedBy?: string;'
      return:
        type: string
  - name: ariaLabelledBy
    uid: '@fluentui/react!ITeachingBubbleProps#ariaLabelledBy:member'
    package: '@fluentui/react!'
    fullName: ariaLabelledBy
    summary: >-
      Defines the element id referencing the element containing label text for
      TeachingBubble.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabelledBy?: string;'
      return:
        type: string
  - name: calloutProps
    uid: '@fluentui/react!ITeachingBubbleProps#calloutProps:member'
    package: '@fluentui/react!'
    fullName: calloutProps
    summary: >-
      Properties to pass through for Callout, reference detail properties in
      ICalloutProps
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'calloutProps?: ICalloutProps;'
      return:
        type: ICalloutProps
  - name: componentRef
    uid: '@fluentui/react!ITeachingBubbleProps#componentRef:member'
    package: '@fluentui/react!'
    fullName: componentRef
    summary: >-
      Optional callback to access the ITeachingBubble interface. Use this
      instead of ref for accessing the public methods and properties of the
      component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<ITeachingBubble>;'
      return:
        type: IRefObject&lt;ITeachingBubble&gt;
  - name: focusTrapZoneProps
    uid: '@fluentui/react!ITeachingBubbleProps#focusTrapZoneProps:member'
    package: '@fluentui/react!'
    fullName: focusTrapZoneProps
    summary: >-
      Properties to pass through for FocusTrapZone, reference detail properties
      in IFocusTrapZoneProps
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'focusTrapZoneProps?: IFocusTrapZoneProps;'
      return:
        type: IFocusTrapZoneProps
  - name: footerContent
    uid: '@fluentui/react!ITeachingBubbleProps#footerContent:member'
    package: '@fluentui/react!'
    fullName: footerContent
    summary: >-
      Text that will be rendered in the footer of the TeachingBubble. May be
      rendered alongside primary and secondary buttons.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'footerContent?: string | JSX.Element;'
      return:
        type: string | JSX.Element
  - name: hasCloseButton
    uid: '@fluentui/react!ITeachingBubbleProps#hasCloseButton:member'
    package: '@fluentui/react!'
    fullName: hasCloseButton
    summary: Whether the TeachingBubble renders close button in the top right corner.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hasCloseButton?: boolean;'
      return:
        type: boolean
  - name: hasCloseIcon
    uid: '@fluentui/react!ITeachingBubbleProps#hasCloseIcon:member'
    package: '@fluentui/react!'
    fullName: hasCloseIcon
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `hasCloseButton`<!-- -->.
    syntax:
      content: 'hasCloseIcon?: boolean;'
      return:
        type: boolean
  - name: hasCondensedHeadline
    uid: '@fluentui/react!ITeachingBubbleProps#hasCondensedHeadline:member'
    package: '@fluentui/react!'
    fullName: hasCondensedHeadline
    summary: A variation with smaller bold headline and no margins.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hasCondensedHeadline?: boolean;'
      return:
        type: boolean
  - name: hasSmallHeadline
    uid: '@fluentui/react!ITeachingBubbleProps#hasSmallHeadline:member'
    package: '@fluentui/react!'
    fullName: hasSmallHeadline
    summary: >-
      A variation with smaller bold headline and margins to the body.
      (`hasCondensedHeadline` takes precedence if it is also set to true.)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hasSmallHeadline?: boolean;'
      return:
        type: boolean
  - name: headline
    uid: '@fluentui/react!ITeachingBubbleProps#headline:member'
    package: '@fluentui/react!'
    fullName: headline
    summary: A headline for the Teaching Bubble.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'headline?: string;'
      return:
        type: string
  - name: illustrationImage
    uid: '@fluentui/react!ITeachingBubbleProps#illustrationImage:member'
    package: '@fluentui/react!'
    fullName: illustrationImage
    summary: An Image for the TeachingBubble.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'illustrationImage?: IImageProps;'
      return:
        type: IImageProps
  - name: isWide
    uid: '@fluentui/react!ITeachingBubbleProps#isWide:member'
    package: '@fluentui/react!'
    fullName: isWide
    summary: 'Whether or not the TeachingBubble is wide, with image on the left side.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isWide?: boolean;'
      return:
        type: boolean
  - name: onDismiss
    uid: '@fluentui/react!ITeachingBubbleProps#onDismiss:member'
    package: '@fluentui/react!'
    fullName: onDismiss
    summary: Callback when the TeachingBubble tries to close.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDismiss?: (ev?: any) => void;'
      return:
        type: '(ev?: any) =&gt; void'
  - name: primaryButtonProps
    uid: '@fluentui/react!ITeachingBubbleProps#primaryButtonProps:member'
    package: '@fluentui/react!'
    fullName: primaryButtonProps
    summary: The Primary interaction button
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'primaryButtonProps?: IButtonProps;'
      return:
        type: IButtonProps
  - name: secondaryButtonProps
    uid: '@fluentui/react!ITeachingBubbleProps#secondaryButtonProps:member'
    package: '@fluentui/react!'
    fullName: secondaryButtonProps
    summary: The Secondary interaction button
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'secondaryButtonProps?: IButtonProps;'
      return:
        type: IButtonProps
  - name: styles
    uid: '@fluentui/react!ITeachingBubbleProps#styles:member'
    package: '@fluentui/react!'
    fullName: styles
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<ITeachingBubbleStyleProps,
        ITeachingBubbleStyles>;
      return:
        type: >-
          IStyleFunctionOrObject&lt;ITeachingBubbleStyleProps,
          ITeachingBubbleStyles&gt;
  - name: target
    uid: '@fluentui/react!ITeachingBubbleProps#target:member'
    package: '@fluentui/react!'
    fullName: target
    summary: >-
      Element, MouseEvent, Point, or querySelector string that the
      TeachingBubble should anchor to.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'target?: Target;'
      return:
        type: Target
  - name: targetElement
    uid: '@fluentui/react!ITeachingBubbleProps#targetElement:member'
    package: '@fluentui/react!'
    fullName: targetElement
    summary: Element to anchor the TeachingBubble to.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use `target` instead
    syntax:
      content: 'targetElement?: HTMLElement;'
      return:
        type: HTMLElement
  - name: theme
    uid: '@fluentui/react!ITeachingBubbleProps#theme:member'
    package: '@fluentui/react!'
    fullName: theme
    summary: Theme provided by High-Order Component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
extends: React.RefAttributes&lt;HTMLDivElement&gt;
