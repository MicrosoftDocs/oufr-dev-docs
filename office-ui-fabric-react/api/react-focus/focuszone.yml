### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-focus!FocusZone:class'
    name: FocusZone
    fullName: FocusZone
    langs:
      - typeScript
    type: class
    extends:
      - 'React.Component<IFocusZoneProps> '
    implements:
      - 'IFocusZone '
    package: '@fluentui/react-focus!'
    children:
      - '@fluentui/react-focus!FocusZone:constructor(1)'
      - '@fluentui/react-focus!FocusZone#componentDidMount:member(1)'
      - '@fluentui/react-focus!FocusZone#componentDidUpdate:member(1)'
      - '@fluentui/react-focus!FocusZone#componentWillUnmount:member(1)'
      - '@fluentui/react-focus!FocusZone.defaultProps:member'
      - '@fluentui/react-focus!FocusZone#focus:member(1)'
      - '@fluentui/react-focus!FocusZone#focusElement:member(1)'
      - '@fluentui/react-focus!FocusZone.getOuterZones:member(1)'
      - '@fluentui/react-focus!FocusZone#render:member(1)'
      - '@fluentui/react-focus!FocusZone#setFocusAlignment:member(1)'
  - uid: '@fluentui/react-focus!FocusZone:constructor(1)'
    summary: Constructs a new instance of the `FocusZone` class
    name: (constructor)(props)
    fullName: (constructor)(props)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(props: IFocusZoneProps);'
      parameters:
        - id: props
          description: ''
          type:
            - IFocusZoneProps
  - uid: '@fluentui/react-focus!FocusZone#componentDidMount:member(1)'
    name: componentDidMount()
    fullName: componentDidMount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-focus!FocusZone#componentDidUpdate:member(1)'
    name: componentDidUpdate()
    fullName: componentDidUpdate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidUpdate(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-focus!FocusZone#componentWillUnmount:member(1)'
    name: componentWillUnmount()
    fullName: componentWillUnmount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-focus!FocusZone.defaultProps:member'
    name: defaultProps
    fullName: defaultProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'static defaultProps: IFocusZoneProps;'
      return:
        type:
          - IFocusZoneProps
  - uid: '@fluentui/react-focus!FocusZone#focus:member(1)'
    summary: Sets focus to the first tabbable item in the zone.
    name: focus(forceIntoFirstElement)
    fullName: focus(forceIntoFirstElement)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focus(forceIntoFirstElement?: boolean): boolean;'
      return:
        type:
          - boolean
        description: 'True if focus could be set to an active element, false if no operation was taken.'
      parameters:
        - id: forceIntoFirstElement
          description: 'If true, focus will be forced into the first element, even if focus is already in the focus zone.'
          type:
            - boolean
  - uid: '@fluentui/react-focus!FocusZone#focusElement:member(1)'
    summary: >-
      Sets focus to a specific child element within the zone. This can be used in conjunction with onBeforeFocus to
      created delayed focus scenarios (like animate the scroll position to the correct location and then focus.)
    name: focusElement(element)
    fullName: focusElement(element)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focusElement(element: HTMLElement): boolean;'
      return:
        type:
          - boolean
        description: 'True if focus could be set to an active element, false if no operation was taken.'
      parameters:
        - id: element
          description: The child element within the zone to focus.
          type:
            - HTMLElement
  - uid: '@fluentui/react-focus!FocusZone.getOuterZones:member(1)'
    summary: Used for testing purposes only.
    name: getOuterZones()
    fullName: getOuterZones()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static getOuterZones(): number;'
      return:
        type:
          - number
        description: ''
  - uid: '@fluentui/react-focus!FocusZone#render:member(1)'
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): React.ReactNode;'
      return:
        type:
          - React.ReactNode
        description: ''
  - uid: '@fluentui/react-focus!FocusZone#setFocusAlignment:member(1)'
    summary: >-
      Forces horizontal alignment in the context of vertical arrowing to use specific point as the reference, rather
      than a center based on the last horizontal motion.
    name: setFocusAlignment(point)
    fullName: setFocusAlignment(point)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFocusAlignment(point: IPoint): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: point
          description: the new reference point.
          type:
            - '@uifabric/utilities!IPoint:interface'
