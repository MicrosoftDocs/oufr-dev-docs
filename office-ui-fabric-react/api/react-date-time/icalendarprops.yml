### YamlMime:TSType
name: ICalendarProps
uid: '@fluentui/react-date-time!ICalendarProps:interface'
package: '@fluentui/react-date-time!'
fullName: ICalendarProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: allFocusable
    uid: '@fluentui/react-date-time!ICalendarProps#allFocusable:member'
    package: '@fluentui/react-date-time!'
    fullName: allFocusable
    summary: 'Allows all dates and buttons to be focused, including disabled ones'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'allFocusable?: boolean;'
      return:
        type: boolean
  - name: calendarDayProps
    uid: '@fluentui/react-date-time!ICalendarProps#calendarDayProps:member'
    package: '@fluentui/react-date-time!'
    fullName: calendarDayProps
    summary: Customized props for the calendar day
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'calendarDayProps?: Partial<ICalendarDayProps>;'
      return:
        type: Partial&lt;ICalendarDayProps&gt;
  - name: calendarMonthProps
    uid: '@fluentui/react-date-time!ICalendarProps#calendarMonthProps:member'
    package: '@fluentui/react-date-time!'
    fullName: calendarMonthProps
    summary: Customized props for the calendar month
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'calendarMonthProps?: Partial<ICalendarMonthProps>;'
      return:
        type: Partial&lt;ICalendarMonthProps&gt;
  - name: className
    uid: '@fluentui/react-date-time!ICalendarProps#className:member'
    package: '@fluentui/react-date-time!'
    fullName: className
    summary: Optional class name to add to the root element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: '@fluentui/react-date-time!ICalendarProps#componentRef:member'
    package: '@fluentui/react-date-time!'
    fullName: componentRef
    summary: >-
      Optional callback to access the ICalendar interface. Use this instead of
      ref for accessing the public methods and properties of the component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<ICalendar>;'
      return:
        type: IRefObject&lt;ICalendar&gt;
  - name: dateRangeType
    uid: '@fluentui/react-date-time!ICalendarProps#dateRangeType:member'
    package: '@fluentui/react-date-time!'
    fullName: dateRangeType
    summary: >-
      The date range type indicating how many days should be selected as the
      user selects days
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dateRangeType?: DateRangeType;'
      return:
        type: '<xref uid="@fluentui/date-time-utilities!DateRangeType:enum" />'
  - name: dateTimeFormatter
    uid: '@fluentui/react-date-time!ICalendarProps#dateTimeFormatter:member'
    package: '@fluentui/react-date-time!'
    fullName: dateTimeFormatter
    summary: >-
      Apply additional formating to dates, for example localized date
      formatting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dateTimeFormatter?: IDateFormatting;'
      return:
        type: '<xref uid="@fluentui/date-time-utilities!IDateFormatting:interface" />'
  - name: firstDayOfWeek
    uid: '@fluentui/react-date-time!ICalendarProps#firstDayOfWeek:member'
    package: '@fluentui/react-date-time!'
    fullName: firstDayOfWeek
    summary: The first day of the week for your locale.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'firstDayOfWeek?: DayOfWeek;'
      return:
        type: '<xref uid="@fluentui/date-time-utilities!DayOfWeek:enum" />'
  - name: firstWeekOfYear
    uid: '@fluentui/react-date-time!ICalendarProps#firstWeekOfYear:member'
    package: '@fluentui/react-date-time!'
    fullName: firstWeekOfYear
    summary: Defines when the first week of the year should start.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'firstWeekOfYear?: FirstWeekOfYear;'
      return:
        type: '<xref uid="@fluentui/date-time-utilities!FirstWeekOfYear:enum" />'
  - name: highlightCurrentMonth
    uid: '@fluentui/react-date-time!ICalendarProps#highlightCurrentMonth:member'
    package: '@fluentui/react-date-time!'
    fullName: highlightCurrentMonth
    summary: Whether the month picker should highlight the current month
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'highlightCurrentMonth?: boolean;'
      return:
        type: boolean
  - name: highlightSelectedMonth
    uid: '@fluentui/react-date-time!ICalendarProps#highlightSelectedMonth:member'
    package: '@fluentui/react-date-time!'
    fullName: highlightSelectedMonth
    summary: Whether the month picker should highlight the selected month
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'highlightSelectedMonth?: boolean;'
      return:
        type: boolean
  - name: isDayPickerVisible
    uid: '@fluentui/react-date-time!ICalendarProps#isDayPickerVisible:member'
    package: '@fluentui/react-date-time!'
    fullName: isDayPickerVisible
    summary: Whether the day picker is shown beside the month picker or hidden.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isDayPickerVisible?: boolean;'
      return:
        type: boolean
  - name: isMonthPickerVisible
    uid: '@fluentui/react-date-time!ICalendarProps#isMonthPickerVisible:member'
    package: '@fluentui/react-date-time!'
    fullName: isMonthPickerVisible
    summary: Whether the month picker is shown beside the day picker or hidden.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isMonthPickerVisible?: boolean;'
      return:
        type: boolean
  - name: maxDate
    uid: '@fluentui/react-date-time!ICalendarProps#maxDate:member'
    package: '@fluentui/react-date-time!'
    fullName: maxDate
    summary: >-
      If set the Calendar will not allow navigation to or selection of a date
      later than this value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxDate?: Date;'
      return:
        type: Date
  - name: minDate
    uid: '@fluentui/react-date-time!ICalendarProps#minDate:member'
    package: '@fluentui/react-date-time!'
    fullName: minDate
    summary: >-
      If set the Calendar will not allow navigation to or selection of a date
      earlier than this value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minDate?: Date;'
      return:
        type: Date
  - name: navigationIcons
    uid: '@fluentui/react-date-time!ICalendarProps#navigationIcons:member'
    package: '@fluentui/react-date-time!'
    fullName: navigationIcons
    summary: Custom navigation icons.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'navigationIcons?: ICalendarNavigationIcons;'
      return:
        type: ICalendarNavigationIcons
  - name: onDismiss
    uid: '@fluentui/react-date-time!ICalendarProps#onDismiss:member'
    package: '@fluentui/react-date-time!'
    fullName: onDismiss
    summary: Callback for when calendar is closed
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDismiss?: () => void;'
      return:
        type: () =&gt; void
  - name: onSelectDate
    uid: '@fluentui/react-date-time!ICalendarProps#onSelectDate:member'
    package: '@fluentui/react-date-time!'
    fullName: onSelectDate
    summary: Callback for when a date is selected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSelectDate?: (date: Date, selectedDateRangeArray?: Date[]) => void;'
      return:
        type: '(date: Date, selectedDateRangeArray?: Date[]) =&gt; void'
  - name: restrictedDates
    uid: '@fluentui/react-date-time!ICalendarProps#restrictedDates:member'
    package: '@fluentui/react-date-time!'
    fullName: restrictedDates
    summary: If set the Calendar will not allow selection of dates in this array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'restrictedDates?: Date[];'
      return:
        type: 'Date[]'
  - name: showCloseButton
    uid: '@fluentui/react-date-time!ICalendarProps#showCloseButton:member'
    package: '@fluentui/react-date-time!'
    fullName: showCloseButton
    summary: Whether the close button should be shown or not
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showCloseButton?: boolean;'
      return:
        type: boolean
  - name: showGoToToday
    uid: '@fluentui/react-date-time!ICalendarProps#showGoToToday:member'
    package: '@fluentui/react-date-time!'
    fullName: showGoToToday
    summary: Whether the "Go to today" link should be shown or not
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showGoToToday?: boolean;'
      return:
        type: boolean
  - name: showMonthPickerAsOverlay
    uid: '@fluentui/react-date-time!ICalendarProps#showMonthPickerAsOverlay:member'
    package: '@fluentui/react-date-time!'
    fullName: showMonthPickerAsOverlay
    summary: Show month picker on top of date picker when visible.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showMonthPickerAsOverlay?: boolean;'
      return:
        type: boolean
  - name: showSixWeeksByDefault
    uid: '@fluentui/react-date-time!ICalendarProps#showSixWeeksByDefault:member'
    package: '@fluentui/react-date-time!'
    fullName: showSixWeeksByDefault
    summary: Whether the calendar should show 6 weeks by default.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showSixWeeksByDefault?: boolean;'
      return:
        type: boolean
  - name: showWeekNumbers
    uid: '@fluentui/react-date-time!ICalendarProps#showWeekNumbers:member'
    package: '@fluentui/react-date-time!'
    fullName: showWeekNumbers
    summary: >-
      Whether the calendar should show the week number (weeks 1 to 53) before
      each week row
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showWeekNumbers?: boolean;'
      return:
        type: boolean
  - name: strings
    uid: '@fluentui/react-date-time!ICalendarProps#strings:member'
    package: '@fluentui/react-date-time!'
    fullName: strings
    summary: Localized strings to use in the Calendar
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strings?: ICalendarStrings;'
      return:
        type: ICalendarStrings
  - name: styles
    uid: '@fluentui/react-date-time!ICalendarProps#styles:member'
    package: '@fluentui/react-date-time!'
    fullName: styles
    summary: Customized styles for the calendar component
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ICalendarStyleProps, ICalendarStyles>;'
      return:
        type: 'IStyleFunctionOrObject&lt;ICalendarStyleProps, ICalendarStyles&gt;'
  - name: theme
    uid: '@fluentui/react-date-time!ICalendarProps#theme:member'
    package: '@fluentui/react-date-time!'
    fullName: theme
    summary: Theme provided by High-Order Component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
  - name: today
    uid: '@fluentui/react-date-time!ICalendarProps#today:member'
    package: '@fluentui/react-date-time!'
    fullName: today
    summary: >-
      Value of today. If unspecified, current time in client machine will be
      used.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'today?: Date;'
      return:
        type: Date
  - name: value
    uid: '@fluentui/react-date-time!ICalendarProps#value:member'
    package: '@fluentui/react-date-time!'
    fullName: value
    summary: 'Default value of the Calendar, if any'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'value?: Date;'
      return:
        type: Date
  - name: workWeekDays
    uid: '@fluentui/react-date-time!ICalendarProps#workWeekDays:member'
    package: '@fluentui/react-date-time!'
    fullName: workWeekDays
    summary: >-
      The days that are selectable when `dateRangeType` is `WorkWeek`<!-- -->.
      If `dateRangeType` is not `WorkWeek` this property does nothing.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'workWeekDays?: DayOfWeek[];'
      return:
        type: 'DayOfWeek[]'
extends: IBaseProps&lt;ICalendar&gt;
