### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IFacepileProps:interface'
    name: IFacepileProps
    fullName: IFacepileProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.ClassAttributes<FacepileBase> '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IFacepileProps#addButtonProps:member'
      - 'office-ui-fabric-react!IFacepileProps#ariaDescription:member'
      - 'office-ui-fabric-react!IFacepileProps#ariaLabel:member'
      - 'office-ui-fabric-react!IFacepileProps#chevronButtonProps:member'
      - 'office-ui-fabric-react!IFacepileProps#className:member'
      - 'office-ui-fabric-react!IFacepileProps#componentRef:member'
      - 'office-ui-fabric-react!IFacepileProps#getPersonaProps:member'
      - 'office-ui-fabric-react!IFacepileProps#maxDisplayablePersonas:member'
      - 'office-ui-fabric-react!IFacepileProps#onRenderPersona:member'
      - 'office-ui-fabric-react!IFacepileProps#onRenderPersonaCoin:member'
      - 'office-ui-fabric-react!IFacepileProps#overflowButtonProps:member'
      - 'office-ui-fabric-react!IFacepileProps#overflowButtonType:member'
      - 'office-ui-fabric-react!IFacepileProps#overflowPersonas:member'
      - 'office-ui-fabric-react!IFacepileProps#personas:member'
      - 'office-ui-fabric-react!IFacepileProps#personaSize:member'
      - 'office-ui-fabric-react!IFacepileProps#showAddButton:member'
      - 'office-ui-fabric-react!IFacepileProps#styles:member'
      - 'office-ui-fabric-react!IFacepileProps#theme:member'
  - uid: 'office-ui-fabric-react!IFacepileProps#addButtonProps:member'
    summary: Button properties for the add face button
    name: addButtonProps
    fullName: addButtonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'addButtonProps?: IButtonProps;'
      return:
        type:
          - 'office-ui-fabric-react!IButtonProps:interface'
  - uid: 'office-ui-fabric-react!IFacepileProps#ariaDescription:member'
    summary: ARIA label for persona list
    name: ariaDescription
    fullName: ariaDescription
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaDescription?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IFacepileProps#ariaLabel:member'
    summary: Defines the aria label that the screen readers use when focus goes on a list of personas.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IFacepileProps#chevronButtonProps:member'
    summary: 'Deprecated at v0.70, use `overflowButtonProps` instead.'
    deprecated:
      content: Use `overflowButtonProps` instead.
    name: chevronButtonProps
    fullName: chevronButtonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chevronButtonProps?: IButtonProps;'
      return:
        type:
          - 'office-ui-fabric-react!IButtonProps:interface'
  - uid: 'office-ui-fabric-react!IFacepileProps#className:member'
    summary: Additional css class to apply to the Facepile
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IFacepileProps#componentRef:member'
    summary: >-
      Optional callback to access the IFacepile interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IFacepile>;'
      return:
        type:
          - IRefObject<IFacepile>
  - uid: 'office-ui-fabric-react!IFacepileProps#getPersonaProps:member'
    summary: Method to access properties on the underlying Persona control
    name: getPersonaProps
    fullName: getPersonaProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'getPersonaProps?: (persona: IFacepilePersona) => IPersonaSharedProps;'
      return:
        type:
          - '(persona: IFacepilePersona) => IPersonaSharedProps'
  - uid: 'office-ui-fabric-react!IFacepileProps#maxDisplayablePersonas:member'
    summary: Maximum number of personas to show
    name: maxDisplayablePersonas
    fullName: maxDisplayablePersonas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxDisplayablePersonas?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IFacepileProps#onRenderPersona:member'
    summary: 'Optional custom renderer for the persona, gets called when there is one persona in personas array'
    name: onRenderPersona
    fullName: onRenderPersona
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderPersona?: IRenderFunction<IFacepilePersona>;'
      return:
        type:
          - IRenderFunction<IFacepilePersona>
  - uid: 'office-ui-fabric-react!IFacepileProps#onRenderPersonaCoin:member'
    summary: 'Optional custom renderer for the persona coins, gets called when there are multiple persona in personas array'
    name: onRenderPersonaCoin
    fullName: onRenderPersonaCoin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderPersonaCoin?: IRenderFunction<IFacepilePersona>;'
      return:
        type:
          - IRenderFunction<IFacepilePersona>
  - uid: 'office-ui-fabric-react!IFacepileProps#overflowButtonProps:member'
    summary: Properties for the overflow icon
    name: overflowButtonProps
    fullName: overflowButtonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowButtonProps?: IButtonProps;'
      return:
        type:
          - 'office-ui-fabric-react!IButtonProps:interface'
  - uid: 'office-ui-fabric-react!IFacepileProps#overflowButtonType:member'
    summary: Type of overflow icon to use
    name: overflowButtonType
    fullName: overflowButtonType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowButtonType?: OverflowButtonType;'
      return:
        type:
          - 'office-ui-fabric-react!OverflowButtonType:enum'
  - uid: 'office-ui-fabric-react!IFacepileProps#overflowPersonas:member'
    summary: Personas to place in the overflow
    name: overflowPersonas
    fullName: overflowPersonas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowPersonas?: IFacepilePersona[];'
      return:
        type:
          - 'IFacepilePersona[]'
  - uid: 'office-ui-fabric-react!IFacepileProps#personas:member'
    summary: Array of IPersonaProps that define each Persona.
    name: personas
    fullName: personas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'personas: IFacepilePersona[];'
      return:
        type:
          - 'IFacepilePersona[]'
  - uid: 'office-ui-fabric-react!IFacepileProps#personaSize:member'
    summary: Size to display the personas
    name: personaSize
    fullName: personaSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'personaSize?: PersonaSize;'
      return:
        type:
          - PersonaSize
  - uid: 'office-ui-fabric-react!IFacepileProps#showAddButton:member'
    summary: Show add person button
    name: showAddButton
    fullName: showAddButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showAddButton?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IFacepileProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IFacepileStyleProps, IFacepileStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IFacepileStyleProps, IFacepileStyles>'
  - uid: 'office-ui-fabric-react!IFacepileProps#theme:member'
    summary: Theme provided by High-Order Component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - ITheme
