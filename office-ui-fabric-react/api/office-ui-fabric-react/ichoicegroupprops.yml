### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IChoiceGroupProps:interface'
    name: IChoiceGroupProps
    fullName: IChoiceGroupProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.InputHTMLAttributes<HTMLElement | HTMLInputElement> '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IChoiceGroupProps#ariaLabelledBy:member'
      - 'office-ui-fabric-react!IChoiceGroupProps#componentRef:member'
      - 'office-ui-fabric-react!IChoiceGroupProps#defaultSelectedKey:member'
      - 'office-ui-fabric-react!IChoiceGroupProps#label:member'
      - 'office-ui-fabric-react!IChoiceGroupProps#onChange:member'
      - 'office-ui-fabric-react!IChoiceGroupProps#onChanged:member'
      - 'office-ui-fabric-react!IChoiceGroupProps#options:member'
      - 'office-ui-fabric-react!IChoiceGroupProps#selectedKey:member'
      - 'office-ui-fabric-react!IChoiceGroupProps#styles:member'
      - 'office-ui-fabric-react!IChoiceGroupProps#theme:member'
  - uid: 'office-ui-fabric-react!IChoiceGroupProps#ariaLabelledBy:member'
    summary: ID of an element to use as the aria label for this ChoiceGroup.
    name: ariaLabelledBy
    fullName: ariaLabelledBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabelledBy?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IChoiceGroupProps#componentRef:member'
    summary: >-
      Optional callback to access the IChoiceGroup interface. Use this instead of ref for accessing the public methods
      and properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IChoiceGroup>;'
      return:
        type:
          - IRefObject<IChoiceGroup>
  - uid: 'office-ui-fabric-react!IChoiceGroupProps#defaultSelectedKey:member'
    summary: The key of the option that will be initially checked.
    name: defaultSelectedKey
    fullName: defaultSelectedKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultSelectedKey?: string | number;'
      return:
        type:
          - string | number
  - uid: 'office-ui-fabric-react!IChoiceGroupProps#label:member'
    summary: Descriptive label for the choice group.
    name: label
    fullName: label
    langs:
      - typeScript
    type: property
    syntax:
      content: 'label?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IChoiceGroupProps#onChange:member'
    summary: A callback for receiving a notification when the choice has been changed.
    name: onChange
    fullName: onChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChange?: (ev?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOption) => void;'
      return:
        type:
          - '(ev?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOption) => void'
  - uid: 'office-ui-fabric-react!IChoiceGroupProps#onChanged:member'
    summary: Deprecated and will be removed by 07/17/2017. Use `onChange` instead.
    deprecated:
      content: Use `onChange` instead.
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChanged?: (option: IChoiceGroupOption, evt?: React.FormEvent<HTMLElement | HTMLInputElement>) => void;'
      return:
        type:
          - '(option: IChoiceGroupOption, evt?: React.FormEvent<HTMLElement | HTMLInputElement>) => void'
  - uid: 'office-ui-fabric-react!IChoiceGroupProps#options:member'
    summary: The options for the choice group.
    name: options
    fullName: options
    langs:
      - typeScript
    type: property
    syntax:
      content: 'options?: IChoiceGroupOption[];'
      return:
        type:
          - 'IChoiceGroupOption[]'
  - uid: 'office-ui-fabric-react!IChoiceGroupProps#selectedKey:member'
    summary: >-
      The key of the selected option. If you provide this, you must maintain selection state by observing onChange
      events and passing a new value in when changed.
    name: selectedKey
    fullName: selectedKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedKey?: string | number;'
      return:
        type:
          - string | number
  - uid: 'office-ui-fabric-react!IChoiceGroupProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IChoiceGroupStyleProps, IChoiceGroupStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IChoiceGroupStyleProps, IChoiceGroupStyles>'
  - uid: 'office-ui-fabric-react!IChoiceGroupProps#theme:member'
    summary: Theme (provided through customization).
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - ITheme
