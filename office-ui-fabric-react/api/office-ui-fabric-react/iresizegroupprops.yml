### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IResizeGroupProps:interface'
    name: IResizeGroupProps
    fullName: IResizeGroupProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.HTMLAttributes<ResizeGroupBase | HTMLElement> '
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IResizeGroupProps#className:member'
      - 'office-ui-fabric-react!IResizeGroupProps#componentRef:member'
      - 'office-ui-fabric-react!IResizeGroupProps#data:member'
      - 'office-ui-fabric-react!IResizeGroupProps#dataDidRender:member'
      - 'office-ui-fabric-react!IResizeGroupProps#direction:member'
      - 'office-ui-fabric-react!IResizeGroupProps#onGrowData:member'
      - 'office-ui-fabric-react!IResizeGroupProps#onReduceData:member'
      - 'office-ui-fabric-react!IResizeGroupProps#onRenderData:member'
      - 'office-ui-fabric-react!IResizeGroupProps#styles:member'
      - 'office-ui-fabric-react!IResizeGroupProps#theme:member'
  - uid: 'office-ui-fabric-react!IResizeGroupProps#className:member'
    summary: Additional css class to apply to the Component
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IResizeGroupProps#componentRef:member'
    summary: >-
      Optional callback to access the IResizeGroup interface. Use this instead of ref for accessing the public methods
      and properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IResizeGroup>;'
      return:
        type:
          - IRefObject<IResizeGroup>
  - uid: 'office-ui-fabric-react!IResizeGroupProps#data:member'
    summary: >-
      Initial data to be passed to the `onRenderData` function. When there is no `onGrowData` provided, this data should
      represent what should be passed to the render function when the parent container of the ResizeGroup is at its
      maximum supported width. A `cacheKey` property may optionally be included as part of the data. Two data objects
      with the same `cacheKey` will be assumed to take up the same width and will prevent measurements. The type of
      `cacheKey` is a string.
    name: data
    fullName: data
    langs:
      - typeScript
    type: property
    syntax:
      content: 'data: any;'
      return:
        type:
          - any
  - uid: 'office-ui-fabric-react!IResizeGroupProps#dataDidRender:member'
    summary: >-
      Function to be called every time data is rendered. It provides the data that was actually rendered. A use case
      would be adding telemetry when a particular control is shown in an overflow well or dropped as a result of
      onReduceData or to count the number of renders that an implementation of onReduceData triggers.
    name: dataDidRender
    fullName: dataDidRender
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dataDidRender?: (renderedData: any) => void;'
      return:
        type:
          - '(renderedData: any) => void'
  - uid: 'office-ui-fabric-react!IResizeGroupProps#direction:member'
    summary: 'Direction of this resize group, vertical or horizontal'
    name: direction
    fullName: direction
    langs:
      - typeScript
    type: property
    syntax:
      content: 'direction?: ResizeGroupDirection;'
      return:
        type:
          - ResizeGroupDirection
  - uid: 'office-ui-fabric-react!IResizeGroupProps#onGrowData:member'
    summary: >-
      Function to be performed on the data in order to increase its width. It is called in scenarios where the container
      has more room than the previous render and we may be able to fit more content. If there are no more scaling
      operations to perform on teh data, it should return undefined to prevent an infinite render loop.
    name: onGrowData
    fullName: onGrowData
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onGrowData?: (prevData: any) => any;'
      return:
        type:
          - '(prevData: any) => any'
  - uid: 'office-ui-fabric-react!IResizeGroupProps#onReduceData:member'
    summary: >-
      Function to be performed on the data in order to reduce its width and make it fit into the given space. If there
      are no more scaling steps to apply, it should return undefined to prevent an infinite render loop.
    name: onReduceData
    fullName: onReduceData
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onReduceData: (prevData: any) => any;'
      return:
        type:
          - '(prevData: any) => any'
  - uid: 'office-ui-fabric-react!IResizeGroupProps#onRenderData:member'
    summary: >-
      Function to render the data. Called when rendering the contents to the screen and when rendering in a hidden div
      to measure the size of the contents.
    name: onRenderData
    fullName: onRenderData
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderData: (data: any) => JSX.Element;'
      return:
        type:
          - '(data: any) => JSX.Element'
  - uid: 'office-ui-fabric-react!IResizeGroupProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules
    deprecated:
      content: Removed to reduce bundle size. Please use `className` and add css rules to `className` instead.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IResizeGroupStyleProps, IResizeGroupStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IResizeGroupStyleProps, IResizeGroupStyles>'
  - uid: 'office-ui-fabric-react!IResizeGroupProps#theme:member'
    summary: Theme provided by HOC.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
