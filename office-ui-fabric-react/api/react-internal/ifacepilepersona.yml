### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IFacepilePersona:interface'
    name: IFacepilePersona
    fullName: IFacepilePersona
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.ButtonHTMLAttributes<HTMLButtonElement | HTMLDivElement> '
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IFacepilePersona#allowPhoneInitials:member'
      - '@fluentui/react-internal!IFacepilePersona#data:member'
      - '@fluentui/react-internal!IFacepilePersona#imageInitials:member'
      - '@fluentui/react-internal!IFacepilePersona#imageUrl:member'
      - '@fluentui/react-internal!IFacepilePersona#initialsColor:member'
      - '@fluentui/react-internal!IFacepilePersona#keytipProps:member'
      - '@fluentui/react-internal!IFacepilePersona#onClick:member'
      - '@fluentui/react-internal!IFacepilePersona#onMouseMove:member'
      - '@fluentui/react-internal!IFacepilePersona#onMouseOut:member'
      - '@fluentui/react-internal!IFacepilePersona#personaName:member'
  - uid: '@fluentui/react-internal!IFacepilePersona#allowPhoneInitials:member'
    summary: >-
      Whether initials are calculated for phone numbers and number sequences. Example: Set property to true to get
      initials for project names consisting of numbers only.
    name: allowPhoneInitials
    fullName: allowPhoneInitials
    langs:
      - typeScript
    type: property
    syntax:
      content: 'allowPhoneInitials?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IFacepilePersona#data:member'
    summary: Extra data - not used directly but can be handy for passing additional data to custom event handlers.
    name: data
    fullName: data
    langs:
      - typeScript
    type: property
    syntax:
      content: 'data?: any;'
      return:
        type:
          - any
  - uid: '@fluentui/react-internal!IFacepilePersona#imageInitials:member'
    summary: The user's initials to display in the image area when there is no image.
    name: imageInitials
    fullName: imageInitials
    langs:
      - typeScript
    type: property
    syntax:
      content: 'imageInitials?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IFacepilePersona#imageUrl:member'
    summary: 'Url to the image to use, should be a square aspect ratio and big enough to fit in the image area.'
    name: imageUrl
    fullName: imageUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'imageUrl?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IFacepilePersona#initialsColor:member'
    summary: The background color when the user's initials are displayed.
    name: initialsColor
    fullName: initialsColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'initialsColor?: PersonaInitialsColor;'
      return:
        type:
          - PersonaInitialsColor
  - uid: '@fluentui/react-internal!IFacepilePersona#keytipProps:member'
    summary: Optional keytip for this button that is only added when 'onClick' is defined for the persona
    name: keytipProps
    fullName: keytipProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'keytipProps?: IKeytipProps;'
      return:
        type:
          - IKeytipProps
  - uid: '@fluentui/react-internal!IFacepilePersona#onClick:member'
    summary: 'If provided, persona will be rendered with cursor:pointer and the handler will be called on click.'
    name: onClick
    fullName: onClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onClick?: (ev?: React.MouseEvent<HTMLElement>, persona?: IFacepilePersona) => void;'
      return:
        type:
          - '(ev?: React.MouseEvent<HTMLElement>, persona?: IFacepilePersona) => void'
  - uid: '@fluentui/react-internal!IFacepilePersona#onMouseMove:member'
    summary: 'If provided, the handler will be called on mouse move.'
    name: onMouseMove
    fullName: onMouseMove
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onMouseMove?: (ev?: React.MouseEvent<HTMLElement>, persona?: IFacepilePersona) => void;'
      return:
        type:
          - '(ev?: React.MouseEvent<HTMLElement>, persona?: IFacepilePersona) => void'
  - uid: '@fluentui/react-internal!IFacepilePersona#onMouseOut:member'
    summary: 'If provided, the handler will be called when mouse moves out of the component.'
    name: onMouseOut
    fullName: onMouseOut
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onMouseOut?: (ev?: React.MouseEvent<HTMLElement>, persona?: IFacepilePersona) => void;'
      return:
        type:
          - '(ev?: React.MouseEvent<HTMLElement>, persona?: IFacepilePersona) => void'
  - uid: '@fluentui/react-internal!IFacepilePersona#personaName:member'
    summary: Name of the person.
    name: personaName
    fullName: personaName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'personaName?: string;'
      return:
        type:
          - string
