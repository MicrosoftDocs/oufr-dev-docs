### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IMessageBarProps:interface'
    name: IMessageBarProps
    fullName: IMessageBarProps
    langs:
      - typeScript
    type: interface
    extends:
      - React.HTMLAttributes<HTMLElement>
      - 'React.RefAttributes<HTMLDivElement> '
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IMessageBarProps#actions:member'
      - '@fluentui/react-internal!IMessageBarProps#ariaLabel:member'
      - '@fluentui/react-internal!IMessageBarProps#className:member'
      - '@fluentui/react-internal!IMessageBarProps#componentRef:member'
      - '@fluentui/react-internal!IMessageBarProps#dismissButtonAriaLabel:member'
      - '@fluentui/react-internal!IMessageBarProps#dismissIconProps:member'
      - '@fluentui/react-internal!IMessageBarProps#isMultiline:member'
      - '@fluentui/react-internal!IMessageBarProps#messageBarIconProps:member'
      - '@fluentui/react-internal!IMessageBarProps#messageBarType:member'
      - '@fluentui/react-internal!IMessageBarProps#onDismiss:member'
      - '@fluentui/react-internal!IMessageBarProps#overflowButtonAriaLabel:member'
      - '@fluentui/react-internal!IMessageBarProps#styles:member'
      - '@fluentui/react-internal!IMessageBarProps#theme:member'
      - '@fluentui/react-internal!IMessageBarProps#truncated:member'
  - uid: '@fluentui/react-internal!IMessageBarProps#actions:member'
    summary: The actions you want to show on the other side.
    name: actions
    fullName: actions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'actions?: JSX.Element;'
      return:
        type:
          - JSX.Element
  - uid: '@fluentui/react-internal!IMessageBarProps#ariaLabel:member'
    summary: A description of the message bar for the benefit of screen readers.
    deprecated:
      content: Use native prop `aria-label` instead.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IMessageBarProps#className:member'
    summary: Additional CSS class(es) to apply to the MessageBar.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IMessageBarProps#componentRef:member'
    summary: >-
      Optional callback to access the IMessageBar interface. Use this instead of ref for accessing the public methods
      and properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IMessageBar>;'
      return:
        type:
          - IRefObject<IMessageBar>
  - uid: '@fluentui/react-internal!IMessageBarProps#dismissButtonAriaLabel:member'
    summary: Aria label on dismiss button if onDismiss is defined.
    name: dismissButtonAriaLabel
    fullName: dismissButtonAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dismissButtonAriaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IMessageBarProps#dismissIconProps:member'
    summary: 'Custom icon prop to replace the dismiss icon. If unset, default will be the Fabric Clear icon.'
    name: dismissIconProps
    fullName: dismissIconProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dismissIconProps?: IIconProps;'
      return:
        type:
          - IIconProps
  - uid: '@fluentui/react-internal!IMessageBarProps#isMultiline:member'
    summary: >-
      Determines if the message bar is multi lined. If false, and the text overflows over buttons or to another line, it
      is clipped.
    name: isMultiline
    fullName: isMultiline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isMultiline?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-internal!IMessageBarProps#messageBarIconProps:member'
    summary: 'Custom icon prop to replace the message bar icon. If unset, default will be the icon set by messageBarType.'
    name: messageBarIconProps
    fullName: messageBarIconProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'messageBarIconProps?: IIconProps;'
      return:
        type:
          - IIconProps
  - uid: '@fluentui/react-internal!IMessageBarProps#messageBarType:member'
    summary: The type of MessageBar to render.
    name: messageBarType
    fullName: messageBarType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'messageBarType?: MessageBarType;'
      return:
        type:
          - MessageBarType
  - uid: '@fluentui/react-internal!IMessageBarProps#onDismiss:member'
    summary: 'Whether the message bar has a dismiss button and its callback. If null, we don''t show a dismiss button.'
    name: onDismiss
    fullName: onDismiss
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onDismiss?: (ev?: React.MouseEvent<HTMLElement | BaseButton | Button>) => any;'
      return:
        type:
          - '(ev?: React.MouseEvent<HTMLElement | BaseButton | Button>) => any'
  - uid: '@fluentui/react-internal!IMessageBarProps#overflowButtonAriaLabel:member'
    summary: Aria label on overflow button if truncated is defined.
    name: overflowButtonAriaLabel
    fullName: overflowButtonAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overflowButtonAriaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IMessageBarProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IMessageBarStyleProps, IMessageBarStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IMessageBarStyleProps, IMessageBarStyles>'
  - uid: '@fluentui/react-internal!IMessageBarProps#theme:member'
    summary: Theme (provided through customization.)
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@fluentui/theme!ITheme:interface'
  - uid: '@fluentui/react-internal!IMessageBarProps#truncated:member'
    summary: >-
      Determines if the message bar text is truncated. If true, a button will render to toggle between a single line
      view and multiline view. This prop is for single line message bars with no buttons only in a limited space
      scenario.
    name: truncated
    fullName: truncated
    langs:
      - typeScript
    type: property
    syntax:
      content: 'truncated?: boolean;'
      return:
        type:
          - boolean
