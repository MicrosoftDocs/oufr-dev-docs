### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-internal!IKeytipConfigItem:interface'
    name: IKeytipConfigItem
    fullName: IKeytipConfigItem
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react-internal!'
    children:
      - '@fluentui/react-internal!IKeytipConfigItem#children:member'
      - '@fluentui/react-internal!IKeytipConfigItem#content:member'
      - '@fluentui/react-internal!IKeytipConfigItem#id:member'
      - '@fluentui/react-internal!IKeytipConfigItem#optionalProps:member'
      - '@fluentui/react-internal!IKeytipConfigItem#sequence:member'
  - uid: '@fluentui/react-internal!IKeytipConfigItem#children:member'
    summary: Children keytips of this keytip
    name: children
    fullName: children
    langs:
      - typeScript
    type: property
    syntax:
      content: 'children?: IKeytipConfigItem[];'
      return:
        type:
          - 'IKeytipConfigItem[]'
  - uid: '@fluentui/react-internal!IKeytipConfigItem#content:member'
    summary: Content for the keytip
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IKeytipConfigItem#id:member'
    summary: 'Identifier for the keytip, to be used to access in the configMap'
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-internal!IKeytipConfigItem#optionalProps:member'
    summary: Optional props in IKeytipProps
    name: optionalProps
    fullName: optionalProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'optionalProps?: Partial<IKeytipProps>;'
      return:
        type:
          - Partial<IKeytipProps>
  - uid: '@fluentui/react-internal!IKeytipConfigItem#sequence:member'
    summary: Key Sequence for this keytip only If sequence is not defined it will be derived from the content string
    name: sequence
    fullName: sequence
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sequence?: string;'
      return:
        type:
          - string
