### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react!IDetailsListState:interface'
    name: IDetailsListState
    fullName: IDetailsListState
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react!'
    children:
      - '@fluentui/react!IDetailsListState#adjustedColumns:member'
      - '@fluentui/react!IDetailsListState#focusedItemIndex:member'
      - '@fluentui/react!IDetailsListState#getDerivedStateFromProps:member(1)'
      - '@fluentui/react!IDetailsListState#isCollapsed:member'
      - '@fluentui/react!IDetailsListState#isSizing:member'
      - '@fluentui/react!IDetailsListState#isSomeGroupExpanded:member'
      - '@fluentui/react!IDetailsListState#lastSelectionMode:member'
      - '@fluentui/react!IDetailsListState#lastWidth:member'
      - '@fluentui/react!IDetailsListState#version:member'
  - uid: '@fluentui/react!IDetailsListState#adjustedColumns:member'
    name: adjustedColumns
    fullName: adjustedColumns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'adjustedColumns: IColumn[];'
      return:
        type:
          - 'IColumn[]'
  - uid: '@fluentui/react!IDetailsListState#focusedItemIndex:member'
    name: focusedItemIndex
    fullName: focusedItemIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'focusedItemIndex: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react!IDetailsListState#getDerivedStateFromProps:member(1)'
    name: 'getDerivedStateFromProps(nextProps, previousState)'
    fullName: 'getDerivedStateFromProps(nextProps, previousState)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDerivedStateFromProps(nextProps: IDetailsListProps, previousState: IDetailsListState): IDetailsListState;'
      return:
        type:
          - IDetailsListState
        description: ''
      parameters:
        - id: nextProps
          description: ''
          type:
            - IDetailsListProps
        - id: previousState
          description: ''
          type:
            - IDetailsListState
  - uid: '@fluentui/react!IDetailsListState#isCollapsed:member'
    name: isCollapsed
    fullName: isCollapsed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isCollapsed?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react!IDetailsListState#isSizing:member'
    name: isSizing
    fullName: isSizing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSizing?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react!IDetailsListState#isSomeGroupExpanded:member'
    name: isSomeGroupExpanded
    fullName: isSomeGroupExpanded
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSomeGroupExpanded?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react!IDetailsListState#lastSelectionMode:member'
    name: lastSelectionMode
    fullName: lastSelectionMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lastSelectionMode?: SelectionMode;'
      return:
        type:
          - '@fluentui/utilities!SelectionMode:enum'
  - uid: '@fluentui/react!IDetailsListState#lastWidth:member'
    name: lastWidth
    fullName: lastWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lastWidth?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react!IDetailsListState#version:member'
    summary: A unique object used to force-update the List when it changes.
    name: version
    fullName: version
    langs:
      - typeScript
    type: property
    syntax:
      content: 'version: {};'
      return:
        type:
          - '{}'
