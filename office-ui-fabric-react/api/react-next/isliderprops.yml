### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!ISliderProps:interface'
    name: ISliderProps
    fullName: ISliderProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.ClassAttributes<HTMLElement> '
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!ISliderProps#ariaLabel:member'
      - '@fluentui/react-next!ISliderProps#ariaValueText:member'
      - '@fluentui/react-next!ISliderProps#buttonProps:member'
      - '@fluentui/react-next!ISliderProps#className:member'
      - '@fluentui/react-next!ISliderProps#componentRef:member'
      - '@fluentui/react-next!ISliderProps#defaultValue:member'
      - '@fluentui/react-next!ISliderProps#disabled:member'
      - '@fluentui/react-next!ISliderProps#label:member'
      - '@fluentui/react-next!ISliderProps#max:member'
      - '@fluentui/react-next!ISliderProps#min:member'
      - '@fluentui/react-next!ISliderProps#onChange:member'
      - '@fluentui/react-next!ISliderProps#onChanged:member'
      - '@fluentui/react-next!ISliderProps#originFromZero:member'
      - '@fluentui/react-next!ISliderProps#showValue:member'
      - '@fluentui/react-next!ISliderProps#snapToStep:member'
      - '@fluentui/react-next!ISliderProps#step:member'
      - '@fluentui/react-next!ISliderProps#styles:member'
      - '@fluentui/react-next!ISliderProps#theme:member'
      - '@fluentui/react-next!ISliderProps#value:member'
      - '@fluentui/react-next!ISliderProps#valueFormat:member'
      - '@fluentui/react-next!ISliderProps#vertical:member'
  - uid: '@fluentui/react-next!ISliderProps#ariaLabel:member'
    summary: A description of the Slider for the benefit of screen readers.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISliderProps#ariaValueText:member'
    summary: >-
      A text description of the Slider number value for the benefit of screen readers. This should be used when the
      Slider number value is not accurately represented by a number.
    name: ariaValueText
    fullName: ariaValueText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaValueText?: (value: number) => string;'
      return:
        type:
          - '(value: number) => string'
  - uid: '@fluentui/react-next!ISliderProps#buttonProps:member'
    summary: Optional mixin for additional props on the thumb button within the slider.
    name: buttonProps
    fullName: buttonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'buttonProps?: React.HTMLAttributes<HTMLButtonElement>;'
      return:
        type:
          - React.HTMLAttributes<HTMLButtonElement>
  - uid: '@fluentui/react-next!ISliderProps#className:member'
    summary: Optional className to attach to the slider root element.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISliderProps#componentRef:member'
    summary: >-
      Optional callback to access the ISlider interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<ISlider>;'
      return:
        type:
          - IRefObject<ISlider>
  - uid: '@fluentui/react-next!ISliderProps#defaultValue:member'
    summary: >-
      The initial value of the Slider. Use this if you intend for the Slider to be an uncontrolled component. This value
      is mutually exclusive to value. Use one or the other.
    name: defaultValue
    fullName: defaultValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultValue?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISliderProps#disabled:member'
    summary: Optional flag to render the Slider as disabled.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ISliderProps#label:member'
    summary: Description label of the Slider
    name: label
    fullName: label
    langs:
      - typeScript
    type: property
    syntax:
      content: 'label?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISliderProps#max:member'
    summary: The max value of the Slider
    name: max
    fullName: max
    langs:
      - typeScript
    type: property
    syntax:
      content: 'max?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISliderProps#min:member'
    summary: The min value of the Slider
    name: min
    fullName: min
    langs:
      - typeScript
    type: property
    syntax:
      content: 'min?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISliderProps#onChange:member'
    summary: Callback when the value has been changed
    name: onChange
    fullName: onChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChange?: (value: number) => void;'
      return:
        type:
          - '(value: number) => void'
  - uid: '@fluentui/react-next!ISliderProps#onChanged:member'
    summary: Callback on mouse up or touch end
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onChanged?: (event: MouseEvent | TouchEvent | KeyboardEvent, value: number) => void;'
      return:
        type:
          - '(event: MouseEvent | TouchEvent | KeyboardEvent, value: number) => void'
  - uid: '@fluentui/react-next!ISliderProps#originFromZero:member'
    summary: Optional flag to attach the origin of slider to zero. Helpful when the range include negatives.
    name: originFromZero
    fullName: originFromZero
    langs:
      - typeScript
    type: property
    syntax:
      content: 'originFromZero?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ISliderProps#showValue:member'
    summary: Whether to show the value on the right of the Slider.
    name: showValue
    fullName: showValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showValue?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ISliderProps#snapToStep:member'
    summary: Optional flag to decide that thumb will snap to closest value while moving the slider
    name: snapToStep
    fullName: snapToStep
    langs:
      - typeScript
    type: property
    syntax:
      content: 'snapToStep?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ISliderProps#step:member'
    summary: The difference between the two adjacent values of the Slider
    name: step
    fullName: step
    langs:
      - typeScript
    type: property
    syntax:
      content: 'step?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISliderProps#styles:member'
    summary: Call to provide customized styling that will layer on top of the variant rules.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ISliderStyleProps, ISliderStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<ISliderStyleProps, ISliderStyles>'
  - uid: '@fluentui/react-next!ISliderProps#theme:member'
    summary: Theme provided by High-Order Component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@uifabric/styling!ITheme:interface'
  - uid: '@fluentui/react-next!ISliderProps#value:member'
    summary: >-
      The initial value of the Slider. Use this if you intend to pass in a new value as a result of onChange events.
      This value is mutually exclusive to defaultValue. Use one or the other.
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISliderProps#valueFormat:member'
    summary: Optional function to format the slider value.
    name: valueFormat
    fullName: valueFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'valueFormat?: (value: number) => string;'
      return:
        type:
          - '(value: number) => string'
  - uid: '@fluentui/react-next!ISliderProps#vertical:member'
    summary: Optional flag to render the slider vertically. Defaults to rendering horizontal.
    name: vertical
    fullName: vertical
    langs:
      - typeScript
    type: property
    syntax:
      content: 'vertical?: boolean;'
      return:
        type:
          - boolean
