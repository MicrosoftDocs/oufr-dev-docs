### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react!IGroupedListState:interface'
    name: IGroupedListState
    fullName: IGroupedListState
    langs:
      - typeScript
    type: interface
    package: '@fluentui/react!'
    children:
      - '@fluentui/react!IGroupedListState#compact:member'
      - '@fluentui/react!IGroupedListState#groups:member'
      - '@fluentui/react!IGroupedListState#items:member'
      - '@fluentui/react!IGroupedListState#listProps:member'
      - '@fluentui/react!IGroupedListState#selectionMode:member'
      - '@fluentui/react!IGroupedListState#version:member'
  - uid: '@fluentui/react!IGroupedListState#compact:member'
    name: compact
    fullName: compact
    langs:
      - typeScript
    type: property
    syntax:
      content: 'compact?: IGroupedListProps[''compact''];'
      return:
        type:
          - 'IGroupedListProps[''compact'']'
  - uid: '@fluentui/react!IGroupedListState#groups:member'
    name: groups
    fullName: groups
    langs:
      - typeScript
    type: property
    syntax:
      content: 'groups?: IGroup[];'
      return:
        type:
          - 'IGroup[]'
  - uid: '@fluentui/react!IGroupedListState#items:member'
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'items?: IGroupedListProps[''items''];'
      return:
        type:
          - 'IGroupedListProps[''items'']'
  - uid: '@fluentui/react!IGroupedListState#listProps:member'
    name: listProps
    fullName: listProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'listProps?: IGroupedListProps[''listProps''];'
      return:
        type:
          - 'IGroupedListProps[''listProps'']'
  - uid: '@fluentui/react!IGroupedListState#selectionMode:member'
    name: selectionMode
    fullName: selectionMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectionMode?: IGroupedListProps[''selectionMode''];'
      return:
        type:
          - 'IGroupedListProps[''selectionMode'']'
  - uid: '@fluentui/react!IGroupedListState#version:member'
    name: version
    fullName: version
    langs:
      - typeScript
    type: property
    syntax:
      content: 'version: {};'
      return:
        type:
          - '{}'
