### YamlMime:TSPackage
uid: '@fluentui/react!'
name: '@fluentui/react'
type: package
summary: ''
classes:
  - '@fluentui/react!BreadcrumbBase:class'
  - '@fluentui/react!DetailsColumnBase:class'
  - '@fluentui/react!DetailsHeaderBase:class'
  - '@fluentui/react!DetailsListBase:class'
  - '@fluentui/react!DetailsRowBase:class'
  - '@fluentui/react!GroupedListBase:class'
  - '@fluentui/react!GroupedListSection:class'
  - '@fluentui/react!ShimmeredDetailsListBase:class'
  - '@fluentui/react!VirtualizedComboBox:class'
enums:
  - '@fluentui/react!CheckboxVisibility:enum'
  - '@fluentui/react!CollapseAllVisibility:enum'
  - '@fluentui/react!ColumnActionsMode:enum'
  - '@fluentui/react!ColumnDragEndLocation:enum'
  - '@fluentui/react!ConstrainMode:enum'
  - '@fluentui/react!DetailsListLayoutMode:enum'
  - '@fluentui/react!DocumentCardType:enum'
  - '@fluentui/react!SelectAllVisibility:enum'
interfaces:
  - '@fluentui/react!IBreadcrumb:interface'
  - '@fluentui/react!IBreadcrumbData:interface'
  - '@fluentui/react!IBreadcrumbItem:interface'
  - '@fluentui/react!IBreadcrumbProps:interface'
  - '@fluentui/react!IBreadcrumbStyleProps:interface'
  - '@fluentui/react!IBreadcrumbStyles:interface'
  - '@fluentui/react!ICellStyleProps:interface'
  - '@fluentui/react!IColumn:interface'
  - '@fluentui/react!IColumnDragDropDetails:interface'
  - '@fluentui/react!IColumnReorderHeaderProps:interface'
  - '@fluentui/react!IColumnReorderOptions:interface'
  - '@fluentui/react!IColumnResizeDetails:interface'
  - '@fluentui/react!IComboBox:interface'
  - '@fluentui/react!IComboBoxOption:interface'
  - '@fluentui/react!IComboBoxOptionStyles:interface'
  - '@fluentui/react!IComboBoxProps:interface'
  - '@fluentui/react!IComboBoxState:interface'
  - '@fluentui/react!IComboBoxStyles:interface'
  - '@fluentui/react!IDetailsCheckboxProps:interface'
  - '@fluentui/react!IDetailsColumnProps:interface'
  - '@fluentui/react!IDetailsColumnRenderTooltipProps:interface'
  - '@fluentui/react!IDetailsColumnStyles:interface'
  - '@fluentui/react!IDetailsFooterBaseProps:interface'
  - '@fluentui/react!IDetailsFooterProps:interface'
  - '@fluentui/react!IDetailsGroupDividerProps:interface'
  - '@fluentui/react!IDetailsGroupRenderProps:interface'
  - '@fluentui/react!IDetailsHeader:interface'
  - '@fluentui/react!IDetailsHeaderBaseProps:interface'
  - '@fluentui/react!IDetailsHeaderProps:interface'
  - '@fluentui/react!IDetailsHeaderState:interface'
  - '@fluentui/react!IDetailsHeaderStyles:interface'
  - '@fluentui/react!IDetailsItemProps:interface'
  - '@fluentui/react!IDetailsList:interface'
  - '@fluentui/react!IDetailsListCheckboxProps:interface'
  - '@fluentui/react!IDetailsListProps:interface'
  - '@fluentui/react!IDetailsListState:interface'
  - '@fluentui/react!IDetailsListStyles:interface'
  - '@fluentui/react!IDetailsRow:interface'
  - '@fluentui/react!IDetailsRowBaseProps:interface'
  - '@fluentui/react!IDetailsRowCheckProps:interface'
  - '@fluentui/react!IDetailsRowCheckStyles:interface'
  - '@fluentui/react!IDetailsRowFieldsProps:interface'
  - '@fluentui/react!IDetailsRowProps:interface'
  - '@fluentui/react!IDetailsRowSelectionState:interface'
  - '@fluentui/react!IDetailsRowState:interface'
  - '@fluentui/react!IDetailsRowStyles:interface'
  - '@fluentui/react!IDividerAsProps:interface'
  - '@fluentui/react!IDocumentCard:interface'
  - '@fluentui/react!IDocumentCardActions:interface'
  - '@fluentui/react!IDocumentCardActionsProps:interface'
  - '@fluentui/react!IDocumentCardActionsStyleProps:interface'
  - '@fluentui/react!IDocumentCardActionsStyles:interface'
  - '@fluentui/react!IDocumentCardActivity:interface'
  - '@fluentui/react!IDocumentCardActivityPerson:interface'
  - '@fluentui/react!IDocumentCardActivityProps:interface'
  - '@fluentui/react!IDocumentCardActivityStyleProps:interface'
  - '@fluentui/react!IDocumentCardActivityStyles:interface'
  - '@fluentui/react!IDocumentCardDetails:interface'
  - '@fluentui/react!IDocumentCardDetailsProps:interface'
  - '@fluentui/react!IDocumentCardDetailsStyleProps:interface'
  - '@fluentui/react!IDocumentCardDetailsStyles:interface'
  - '@fluentui/react!IDocumentCardImage:interface'
  - '@fluentui/react!IDocumentCardImageProps:interface'
  - '@fluentui/react!IDocumentCardImageStyleProps:interface'
  - '@fluentui/react!IDocumentCardImageStyles:interface'
  - '@fluentui/react!IDocumentCardLocation:interface'
  - '@fluentui/react!IDocumentCardLocationProps:interface'
  - '@fluentui/react!IDocumentCardLocationStyleProps:interface'
  - '@fluentui/react!IDocumentCardLocationStyles:interface'
  - '@fluentui/react!IDocumentCardLogo:interface'
  - '@fluentui/react!IDocumentCardLogoProps:interface'
  - '@fluentui/react!IDocumentCardLogoStyleProps:interface'
  - '@fluentui/react!IDocumentCardLogoStyles:interface'
  - '@fluentui/react!IDocumentCardPreview:interface'
  - '@fluentui/react!IDocumentCardPreviewImage:interface'
  - '@fluentui/react!IDocumentCardPreviewProps:interface'
  - '@fluentui/react!IDocumentCardPreviewStyleProps:interface'
  - '@fluentui/react!IDocumentCardPreviewStyles:interface'
  - '@fluentui/react!IDocumentCardProps:interface'
  - '@fluentui/react!IDocumentCardStatus:interface'
  - '@fluentui/react!IDocumentCardStatusProps:interface'
  - '@fluentui/react!IDocumentCardStatusStyleProps:interface'
  - '@fluentui/react!IDocumentCardStatusStyles:interface'
  - '@fluentui/react!IDocumentCardStyleProps:interface'
  - '@fluentui/react!IDocumentCardStyles:interface'
  - '@fluentui/react!IDocumentCardTitle:interface'
  - '@fluentui/react!IDocumentCardTitleProps:interface'
  - '@fluentui/react!IDocumentCardTitleStyleProps:interface'
  - '@fluentui/react!IDocumentCardTitleStyles:interface'
  - '@fluentui/react!IDropdown:interface'
  - '@fluentui/react!IDropdownOption:interface'
  - '@fluentui/react!IDropdownProps:interface'
  - '@fluentui/react!IDropdownStyles:interface'
  - '@fluentui/react!IDropdownSubComponentStyles:interface'
  - '@fluentui/react!IDropHintDetails:interface'
  - '@fluentui/react!IGroup:interface'
  - '@fluentui/react!IGroupDividerProps:interface'
  - '@fluentui/react!IGroupedList:interface'
  - '@fluentui/react!IGroupedListProps:interface'
  - '@fluentui/react!IGroupedListSectionProps:interface'
  - '@fluentui/react!IGroupedListSectionState:interface'
  - '@fluentui/react!IGroupedListState:interface'
  - '@fluentui/react!IGroupedListStyles:interface'
  - '@fluentui/react!IGroupFooterProps:interface'
  - '@fluentui/react!IGroupFooterStyles:interface'
  - '@fluentui/react!IGroupHeaderCheckboxProps:interface'
  - '@fluentui/react!IGroupHeaderProps:interface'
  - '@fluentui/react!IGroupHeaderStyles:interface'
  - '@fluentui/react!IGroupRenderProps:interface'
  - '@fluentui/react!IGroupShowAllProps:interface'
  - '@fluentui/react!IGroupShowAllStyles:interface'
  - '@fluentui/react!IGroupSpacerProps:interface'
  - '@fluentui/react!IGroupSpacerStyles:interface'
  - '@fluentui/react!IOnRenderComboBoxLabelProps:interface'
  - '@fluentui/react!IShimmeredDetailsListProps:interface'
  - '@fluentui/react!IShimmeredDetailsListStyles:interface'
functions:
  - name: >-
      buildColumns(items, canResizeColumns, onColumnClick, sortedColumnKey,
      isSortedDescending, groupedColumnKey, isMultiline)
    uid: '@fluentui/react!buildColumns:function(1)'
    package: '@fluentui/react!'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export declare function buildColumns(items: any[], canResizeColumns?:
        boolean, onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column:
        IColumn) => void, sortedColumnKey?: string, isSortedDescending?:
        boolean, groupedColumnKey?: string, isMultiline?: boolean): IColumn[];
      parameters:
        - id: items
          description: ''
          type: 'any[]'
        - id: canResizeColumns
          description: ''
          type: boolean
        - id: onColumnClick
          description: ''
          type: >-
            (ev: React.MouseEvent&lt;HTMLElement&gt;, column: IColumn) =&gt;
            void
        - id: sortedColumnKey
          description: ''
          type: string
        - id: isSortedDescending
          description: ''
          type: boolean
        - id: groupedColumnKey
          description: ''
          type: string
        - id: isMultiline
          description: ''
          type: boolean
      return:
        type: 'IColumn[]'
        description: ''
