### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-cards!ICardProps:interface'
    name: ICardProps
    fullName: ICardProps
    langs:
      - typeScript
    type: interface
    extends:
      - '@fluentui/react-cards!ICardSlots:interface'
      - 'IStyleableComponentProps<ICardProps, ICardTokens, ICardStyles>'
      - IBaseProps<ICard>
      - 'React.AllHTMLAttributes<HTMLElement> '
    package: '@fluentui/react-cards!'
    children:
      - '@fluentui/react-cards!ICardProps#horizontal:member'
      - '@fluentui/react-cards!ICardProps#onClick:member'
      - '@fluentui/react-cards!ICardProps#onKeyDown:member'
  - uid: '@fluentui/react-cards!ICardProps#horizontal:member'
    summary: Defines whether to render a vertical or a horizontal Card.
    name: horizontal
    fullName: horizontal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'horizontal?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-cards!ICardProps#onClick:member'
    summary: Defines a callback that is called when the Card is clicked.
    name: onClick
    fullName: onClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onClick?: (ev?: React.MouseEvent<HTMLElement>) => void;'
      return:
        type:
          - '(ev?: React.MouseEvent<HTMLElement>) => void'
  - uid: '@fluentui/react-cards!ICardProps#onKeyDown:member'
    summary: Defines a callback that is called when the Card is a key is pressed down while focus is on the Card.
    name: onKeyDown
    fullName: onKeyDown
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onKeyDown?: (ev?: React.KeyboardEvent<HTMLElement>) => void;'
      return:
        type:
          - '(ev?: React.KeyboardEvent<HTMLElement>) => void'
