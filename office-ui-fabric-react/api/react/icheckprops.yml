### YamlMime:TSType
name: ICheckProps
uid: '@fluentui/react!ICheckProps:interface'
package: '@fluentui/react!'
fullName: ICheckProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: alwaysShowCheck
    uid: '@fluentui/react!ICheckProps#alwaysShowCheck:member'
    package: '@fluentui/react!'
    fullName: alwaysShowCheck
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Not used
    syntax:
      content: 'alwaysShowCheck?: boolean;'
      return:
        type: boolean
  - name: checked
    uid: '@fluentui/react!ICheckProps#checked:member'
    package: '@fluentui/react!'
    fullName: checked
    summary: Whether the component is currently checked.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'checked?: boolean;'
      return:
        type: boolean
  - name: className
    uid: '@fluentui/react!ICheckProps#className:member'
    package: '@fluentui/react!'
    fullName: className
    summary: Additional css class to apply to the Check
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: '@fluentui/react!ICheckProps#componentRef:member'
    package: '@fluentui/react!'
    fullName: componentRef
    summary: Gets the component ref.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<ICheckProps>;'
      return:
        type: IRefObject&lt;ICheckProps&gt;
  - name: styles
    uid: '@fluentui/react!ICheckProps#styles:member'
    package: '@fluentui/react!'
    fullName: styles
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ICheckStyleProps, ICheckStyles>;'
      return:
        type: 'IStyleFunctionOrObject&lt;ICheckStyleProps, ICheckStyles&gt;'
  - name: theme
    uid: '@fluentui/react!ICheckProps#theme:member'
    package: '@fluentui/react!'
    fullName: theme
    summary: Theme provided by HOC.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
  - name: useFastIcons
    uid: '@fluentui/react!ICheckProps#useFastIcons:member'
    package: '@fluentui/react!'
    fullName: useFastIcons
    summary: >-
      Whether to use fast icon components. The icons can't be targeted by
      customization but are still customizable via class names.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'useFastIcons?: boolean;'
      return:
        type: boolean
extends: 'React.RefAttributes&lt;HTMLDivElement&gt; '
