### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!'
    name: '@fluentui/react-next'
    fullName: '@fluentui/react-next'
    langs:
      - typeScript
    type: package
    children:
      - '@fluentui/react-next!BaseExtendedPeoplePicker:class'
      - '@fluentui/react-next!BaseExtendedPicker:class'
      - '@fluentui/react-next!BaseFloatingPeoplePicker:class'
      - '@fluentui/react-next!BaseFloatingPicker:class'
      - '@fluentui/react-next!BasePeopleSelectedItemsList:class'
      - '@fluentui/react-next!BaseSelectedItemsList:class'
      - '@fluentui/react-next!BreadcrumbBase:class'
      - '@fluentui/react-next!canAnyMenuItemsCheck:function(1)'
      - '@fluentui/react-next!ContextualMenuItemBase:class'
      - '@fluentui/react-next!ContextualMenuItemType:enum'
      - '@fluentui/react-next!createItem:function(1)'
      - '@fluentui/react-next!ExtendedPeoplePicker:class'
      - '@fluentui/react-next!ExtendedSelectedItem:class'
      - '@fluentui/react-next!FloatingPeoplePicker:class'
      - '@fluentui/react-next!FocusTrapZone:class'
      - '@fluentui/react-next!getPersonaInitialsColor:function(1)'
      - '@fluentui/react-next!getSubmenuItems:function(1)'
      - '@fluentui/react-next!IAccessiblePopupProps:interface'
      - '@fluentui/react-next!IBaseExtendedPicker:interface'
      - '@fluentui/react-next!IBaseExtendedPickerProps:interface'
      - '@fluentui/react-next!IBaseExtendedPickerState:interface'
      - '@fluentui/react-next!IBaseFloatingPicker:interface'
      - '@fluentui/react-next!IBaseFloatingPickerProps:interface'
      - '@fluentui/react-next!IBaseFloatingPickerState:interface'
      - '@fluentui/react-next!IBaseSelectedItemsList:interface'
      - '@fluentui/react-next!IBaseSelectedItemsListProps:interface'
      - '@fluentui/react-next!IBaseSelectedItemsListState:interface'
      - '@fluentui/react-next!IBreadcrumb:interface'
      - '@fluentui/react-next!IBreadcrumbData:interface'
      - '@fluentui/react-next!IBreadcrumbItem:interface'
      - '@fluentui/react-next!IBreadcrumbProps:interface'
      - '@fluentui/react-next!IBreadcrumbStyleProps:interface'
      - '@fluentui/react-next!IBreadcrumbStyles:interface'
      - '@fluentui/react-next!IButtonGrid:interface'
      - '@fluentui/react-next!IButtonGridCellProps:interface'
      - '@fluentui/react-next!IButtonGridProps:interface'
      - '@fluentui/react-next!IButtonGridStyleProps:interface'
      - '@fluentui/react-next!IButtonGridStyles:interface'
      - '@fluentui/react-next!ICalloutContentStyleProps:interface'
      - '@fluentui/react-next!ICalloutContentStyles:interface'
      - '@fluentui/react-next!ICalloutProps:interface'
      - '@fluentui/react-next!ICircle:interface'
      - '@fluentui/react-next!ICoachmark:interface'
      - '@fluentui/react-next!ICoachmarkProps:interface'
      - '@fluentui/react-next!ICoachmarkStyleProps:interface'
      - '@fluentui/react-next!ICoachmarkStyles:interface'
      - '@fluentui/react-next!IColorCellProps:interface'
      - '@fluentui/react-next!IColorPickerGridCellProps:interface'
      - '@fluentui/react-next!IColorPickerGridCellStyleProps:interface'
      - '@fluentui/react-next!IColorPickerGridCellStyles:interface'
      - '@fluentui/react-next!IComboBox:interface'
      - '@fluentui/react-next!IComboBoxOption:interface'
      - '@fluentui/react-next!IComboBoxOptionStyles:interface'
      - '@fluentui/react-next!IComboBoxProps:interface'
      - '@fluentui/react-next!IComboBoxState:interface'
      - '@fluentui/react-next!IComboBoxStyles:interface'
      - '@fluentui/react-next!IContextualMenu:interface'
      - '@fluentui/react-next!IContextualMenuItem:interface'
      - '@fluentui/react-next!IContextualMenuItemProps:interface'
      - '@fluentui/react-next!IContextualMenuItemRenderFunctions:interface'
      - '@fluentui/react-next!IContextualMenuItemRenderProps:interface'
      - '@fluentui/react-next!IContextualMenuItemStyleProps:interface'
      - '@fluentui/react-next!IContextualMenuItemStyles:interface'
      - '@fluentui/react-next!IContextualMenuListProps:interface'
      - '@fluentui/react-next!IContextualMenuProps:interface'
      - '@fluentui/react-next!IContextualMenuRenderItem:interface'
      - '@fluentui/react-next!IContextualMenuSection:interface'
      - '@fluentui/react-next!IContextualMenuState:interface'
      - '@fluentui/react-next!IContextualMenuStyleProps:interface'
      - '@fluentui/react-next!IContextualMenuStyles:interface'
      - '@fluentui/react-next!IContextualMenuSubComponentStyles:interface'
      - '@fluentui/react-next!IDialogState:interface'
      - '@fluentui/react-next!IDividerAsProps:interface'
      - '@fluentui/react-next!IDragOptions:interface'
      - '@fluentui/react-next!IDropdown:interface'
      - '@fluentui/react-next!IDropdownOption:interface'
      - '@fluentui/react-next!IDropdownProps:interface'
      - '@fluentui/react-next!IDropdownStyles:interface'
      - '@fluentui/react-next!IDropdownSubComponentStyles:interface'
      - '@fluentui/react-next!IEditingSelectedPeopleItemProps:interface'
      - '@fluentui/react-next!IEditingSelectedPeopleItemStyles:interface'
      - '@fluentui/react-next!IEditingSelectedPeopleItemStylesProps:interface'
      - '@fluentui/react-next!IEntityRect:interface'
      - '@fluentui/react-next!IExtendedPeoplePickerProps:interface'
      - '@fluentui/react-next!IExtendedPersonaProps:interface'
      - '@fluentui/react-next!IFabricProps:interface'
      - '@fluentui/react-next!IFabricStyleProps:interface'
      - '@fluentui/react-next!IFabricStyles:interface'
      - '@fluentui/react-next!IFocusTrapCalloutProps:interface'
      - '@fluentui/react-next!IFocusTrapZone:interface'
      - '@fluentui/react-next!IFocusTrapZoneProps:interface'
      - '@fluentui/react-next!IGap:interface'
      - '@fluentui/react-next!IImage:interface'
      - '@fluentui/react-next!IImageProps:interface'
      - '@fluentui/react-next!IImageState:interface'
      - '@fluentui/react-next!IImageStyleProps:interface'
      - '@fluentui/react-next!IImageStyles:interface'
      - '@fluentui/react-next!ILine:interface'
      - '@fluentui/react-next!ImageCoverStyle:enum'
      - '@fluentui/react-next!ImageFit:enum'
      - '@fluentui/react-next!ImageLoadState:enum'
      - '@fluentui/react-next!IMaskedTextField:interface'
      - '@fluentui/react-next!IMaskedTextFieldProps:interface'
      - '@fluentui/react-next!IMenuItemStyles:interface'
      - '@fluentui/react-next!IMessageBar:interface'
      - '@fluentui/react-next!IMessageBarProps:interface'
      - '@fluentui/react-next!IMessageBarStyleProps:interface'
      - '@fluentui/react-next!IMessageBarStyles:interface'
      - '@fluentui/react-next!IModal:interface'
      - '@fluentui/react-next!IModalProps:interface'
      - '@fluentui/react-next!IModalStyles:interface'
      - '@fluentui/react-next!IOnRenderComboBoxLabelProps:interface'
      - '@fluentui/react-next!IOverflowSet:interface'
      - '@fluentui/react-next!IOverflowSetItemProps:interface'
      - '@fluentui/react-next!IOverflowSetProps:interface'
      - '@fluentui/react-next!IOverflowSetStyles:interface'
      - '@fluentui/react-next!IPeopleFloatingPickerProps:interface'
      - '@fluentui/react-next!IPeoplePickerItemProps:interface'
      - '@fluentui/react-next!IPeoplePickerItemState:interface'
      - '@fluentui/react-next!IPersona:interface'
      - '@fluentui/react-next!IPersonaCoinProps:interface'
      - '@fluentui/react-next!IPersonaCoinStyleProps:interface'
      - '@fluentui/react-next!IPersonaCoinStyles:interface'
      - '@fluentui/react-next!IPersonaPresenceProps:interface'
      - '@fluentui/react-next!IPersonaPresenceStyles:interface'
      - '@fluentui/react-next!IPersonaProps:interface'
      - '@fluentui/react-next!IPersonaSharedProps:interface'
      - '@fluentui/react-next!IPersonaStyleProps:interface'
      - '@fluentui/react-next!IPersonaStyles:interface'
      - '@fluentui/react-next!IPopupProps:interface'
      - '@fluentui/react-next!IPositioningContainer:interface'
      - '@fluentui/react-next!IPositioningContainerProps:interface'
      - '@fluentui/react-next!IRating:interface'
      - '@fluentui/react-next!IRatingProps:interface'
      - '@fluentui/react-next!IRatingStyleProps:interface'
      - '@fluentui/react-next!IRatingStyles:interface'
      - '@fluentui/react-next!IResizeGroup:interface'
      - '@fluentui/react-next!IResizeGroupProps:interface'
      - '@fluentui/react-next!IResizeGroupState:interface'
      - '@fluentui/react-next!IResizeGroupStyleProps:interface'
      - '@fluentui/react-next!IResizeGroupStyles:interface'
      - '@fluentui/react-next!ISearchBox:interface'
      - '@fluentui/react-next!ISearchBoxProps:interface'
      - '@fluentui/react-next!ISearchBoxStyleProps:interface'
      - '@fluentui/react-next!ISearchBoxStyles:interface'
      - '@fluentui/react-next!ISelectedItemProps:interface'
      - '@fluentui/react-next!ISelectedPeopleItemProps:interface'
      - '@fluentui/react-next!ISelectedPeopleProps:interface'
      - '@fluentui/react-next!IShimmerCircle:interface'
      - '@fluentui/react-next!IShimmerCircleProps:interface'
      - '@fluentui/react-next!IShimmerCircleStyles:interface'
      - '@fluentui/react-next!IShimmerColors:interface'
      - '@fluentui/react-next!IShimmerElement:interface'
      - '@fluentui/react-next!IShimmerElementsGroup:interface'
      - '@fluentui/react-next!IShimmerElementsGroupProps:interface'
      - '@fluentui/react-next!IShimmerElementsGroupStyleProps:interface'
      - '@fluentui/react-next!IShimmerElementsGroupStyles:interface'
      - '@fluentui/react-next!IShimmerGap:interface'
      - '@fluentui/react-next!IShimmerGapProps:interface'
      - '@fluentui/react-next!IShimmerGapStyles:interface'
      - '@fluentui/react-next!IShimmerLine:interface'
      - '@fluentui/react-next!IShimmerLineProps:interface'
      - '@fluentui/react-next!IShimmerLineStyles:interface'
      - '@fluentui/react-next!IShimmerProps:interface'
      - '@fluentui/react-next!IShimmerStyleProps:interface'
      - '@fluentui/react-next!IShimmerStyles:interface'
      - '@fluentui/react-next!ISpinButton:interface'
      - '@fluentui/react-next!ISpinButtonProps:interface'
      - '@fluentui/react-next!ISpinButtonStyleProps:interface'
      - '@fluentui/react-next!ISpinButtonStyles:interface'
      - '@fluentui/react-next!ISuggestionsControlProps:interface'
      - '@fluentui/react-next!ISuggestionsControlState:interface'
      - '@fluentui/react-next!ISuggestionsCoreProps:interface'
      - '@fluentui/react-next!ISuggestionsHeaderFooterItemProps:interface'
      - '@fluentui/react-next!ISuggestionsHeaderFooterProps:interface'
      - '@fluentui/react-next!ISwatchColorPickerProps:interface'
      - '@fluentui/react-next!ISwatchColorPickerStyleProps:interface'
      - '@fluentui/react-next!ISwatchColorPickerStyles:interface'
      - '@fluentui/react-next!ITextField:interface'
      - '@fluentui/react-next!ITextFieldProps:interface'
      - '@fluentui/react-next!ITextFieldStyles:interface'
      - '@fluentui/react-next!ITextFieldSubComponentStyles:interface'
      - '@fluentui/react-next!KeyboardSpinDirection:enum'
      - '@fluentui/react-next!MessageBarType:enum'
      - '@fluentui/react-next!ModalBase:class'
      - '@fluentui/react-next!PersonaInitialsColor:enum'
      - '@fluentui/react-next!PersonaPresence:enum'
      - '@fluentui/react-next!PersonaSize:enum'
      - '@fluentui/react-next!RatingSize:enum'
      - '@fluentui/react-next!ResizeGroupDirection:enum'
      - '@fluentui/react-next!SelectedPeopleList:class'
      - '@fluentui/react-next!ShimmerElementsDefaultHeights:enum'
      - '@fluentui/react-next!ShimmerElementType:enum'
      - '@fluentui/react-next!SuggestionItemType:enum'
      - '@fluentui/react-next!SuggestionsControl:class'
      - '@fluentui/react-next!SuggestionsCore:class'
      - '@fluentui/react-next!SuggestionsHeaderFooterItem:class'
      - '@fluentui/react-next!SuggestionsStore:class'
      - '@fluentui/react-next!TextFieldBase:class'
      - '@fluentui/react-next!useHeightOffset:function(1)'
      - '@fluentui/react-next!VirtualizedComboBox:class'
  - uid: '@fluentui/react-next!canAnyMenuItemsCheck:function(1)'
    summary: Returns true if a list of menu items can contain a checkbox
    name: canAnyMenuItemsCheck(items)
    fullName: canAnyMenuItemsCheck(items)
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export declare function canAnyMenuItemsCheck(items: IContextualMenuItem[]): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: items
          description: ''
          type:
            - 'IContextualMenuItem[]'
  - uid: '@fluentui/react-next!createItem:function(1)'
    name: 'createItem(name, isValid)'
    fullName: 'createItem(name, isValid)'
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export declare function createItem(name: string, isValid: boolean): ISuggestionModel<IPersonaProps>;'
      return:
        type:
          - ISuggestionModel<IPersonaProps>
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
        - id: isValid
          description: ''
          type:
            - boolean
  - uid: '@fluentui/react-next!getPersonaInitialsColor:function(1)'
    summary: >-
      Gets the hex color string (prefixed with \#) for the given persona props. This is the logic used internally by the
      Persona control.
    name: getPersonaInitialsColor(props)
    fullName: getPersonaInitialsColor(props)
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export declare function getPersonaInitialsColor(props: Pick<IPersonaProps, 'primaryText' | 'text' |
        'initialsColor'>): string;
      return:
        type:
          - string
        description: 'Hex color string prefixed with \#'
      parameters:
        - id: props
          description: Current persona props
          type:
            - 'Pick<IPersonaProps, ''primaryText'' | ''text'' | ''initialsColor''>'
  - uid: '@fluentui/react-next!getSubmenuItems:function(1)'
    name: getSubmenuItems(item)
    fullName: getSubmenuItems(item)
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export declare function getSubmenuItems(item: IContextualMenuItem): IContextualMenuItem[] | undefined;'
      return:
        type:
          - 'IContextualMenuItem[] | undefined'
        description: ''
      parameters:
        - id: item
          description: ''
          type:
            - IContextualMenuItem
  - uid: '@fluentui/react-next!useHeightOffset:function(1)'
    name: 'useHeightOffset({ finalHeight }, contentHost)'
    fullName: 'useHeightOffset({ finalHeight }, contentHost)'
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export declare function useHeightOffset({ finalHeight }: IPositioningContainerProps, contentHost:
        React.RefObject<HTMLDivElement | null>): number;
      return:
        type:
          - number
        description: ''
      parameters:
        - id: '{ finalHeight }'
          description: ''
          type:
            - IPositioningContainerProps
        - id: contentHost
          description: ''
          type:
            - React.RefObject<HTMLDivElement | null>
references:
  - uid: '@fluentui/react-next!BaseExtendedPeoplePicker:class'
    name: BaseExtendedPeoplePicker
  - uid: '@fluentui/react-next!BaseExtendedPicker:class'
    name: BaseExtendedPicker
  - uid: '@fluentui/react-next!BaseFloatingPeoplePicker:class'
    name: BaseFloatingPeoplePicker
  - uid: '@fluentui/react-next!BaseFloatingPicker:class'
    name: BaseFloatingPicker
  - uid: '@fluentui/react-next!BasePeopleSelectedItemsList:class'
    name: BasePeopleSelectedItemsList
  - uid: '@fluentui/react-next!BaseSelectedItemsList:class'
    name: BaseSelectedItemsList
  - uid: '@fluentui/react-next!BreadcrumbBase:class'
    name: BreadcrumbBase
  - uid: '@fluentui/react-next!ContextualMenuItemBase:class'
    name: ContextualMenuItemBase
  - uid: '@fluentui/react-next!ContextualMenuItemType:enum'
    name: ContextualMenuItemType
  - uid: '@fluentui/react-next!ExtendedPeoplePicker:class'
    name: ExtendedPeoplePicker
  - uid: '@fluentui/react-next!ExtendedSelectedItem:class'
    name: ExtendedSelectedItem
  - uid: '@fluentui/react-next!FloatingPeoplePicker:class'
    name: FloatingPeoplePicker
  - uid: '@fluentui/react-next!FocusTrapZone:class'
    name: FocusTrapZone
  - uid: '@fluentui/react-next!IAccessiblePopupProps:interface'
    name: IAccessiblePopupProps
  - uid: '@fluentui/react-next!IBaseExtendedPicker:interface'
    name: IBaseExtendedPicker
  - uid: '@fluentui/react-next!IBaseExtendedPickerProps:interface'
    name: IBaseExtendedPickerProps
  - uid: '@fluentui/react-next!IBaseExtendedPickerState:interface'
    name: IBaseExtendedPickerState
  - uid: '@fluentui/react-next!IBaseFloatingPicker:interface'
    name: IBaseFloatingPicker
  - uid: '@fluentui/react-next!IBaseFloatingPickerProps:interface'
    name: IBaseFloatingPickerProps
  - uid: '@fluentui/react-next!IBaseFloatingPickerState:interface'
    name: IBaseFloatingPickerState
  - uid: '@fluentui/react-next!IBaseSelectedItemsList:interface'
    name: IBaseSelectedItemsList
  - uid: '@fluentui/react-next!IBaseSelectedItemsListProps:interface'
    name: IBaseSelectedItemsListProps
  - uid: '@fluentui/react-next!IBaseSelectedItemsListState:interface'
    name: IBaseSelectedItemsListState
  - uid: '@fluentui/react-next!IBreadcrumb:interface'
    name: IBreadcrumb
  - uid: '@fluentui/react-next!IBreadcrumbData:interface'
    name: IBreadcrumbData
  - uid: '@fluentui/react-next!IBreadcrumbItem:interface'
    name: IBreadcrumbItem
  - uid: '@fluentui/react-next!IBreadcrumbProps:interface'
    name: IBreadcrumbProps
  - uid: '@fluentui/react-next!IBreadcrumbStyleProps:interface'
    name: IBreadcrumbStyleProps
  - uid: '@fluentui/react-next!IBreadcrumbStyles:interface'
    name: IBreadcrumbStyles
  - uid: '@fluentui/react-next!IButtonGrid:interface'
    name: IButtonGrid
  - uid: '@fluentui/react-next!IButtonGridCellProps:interface'
    name: IButtonGridCellProps
  - uid: '@fluentui/react-next!IButtonGridProps:interface'
    name: IButtonGridProps
  - uid: '@fluentui/react-next!IButtonGridStyleProps:interface'
    name: IButtonGridStyleProps
  - uid: '@fluentui/react-next!IButtonGridStyles:interface'
    name: IButtonGridStyles
  - uid: '@fluentui/react-next!ICalloutContentStyleProps:interface'
    name: ICalloutContentStyleProps
  - uid: '@fluentui/react-next!ICalloutContentStyles:interface'
    name: ICalloutContentStyles
  - uid: '@fluentui/react-next!ICalloutProps:interface'
    name: ICalloutProps
  - uid: '@fluentui/react-next!ICircle:interface'
    name: ICircle
  - uid: '@fluentui/react-next!ICoachmark:interface'
    name: ICoachmark
  - uid: '@fluentui/react-next!ICoachmarkProps:interface'
    name: ICoachmarkProps
  - uid: '@fluentui/react-next!ICoachmarkStyleProps:interface'
    name: ICoachmarkStyleProps
  - uid: '@fluentui/react-next!ICoachmarkStyles:interface'
    name: ICoachmarkStyles
  - uid: '@fluentui/react-next!IColorCellProps:interface'
    name: IColorCellProps
  - uid: '@fluentui/react-next!IColorPickerGridCellProps:interface'
    name: IColorPickerGridCellProps
  - uid: '@fluentui/react-next!IColorPickerGridCellStyleProps:interface'
    name: IColorPickerGridCellStyleProps
  - uid: '@fluentui/react-next!IColorPickerGridCellStyles:interface'
    name: IColorPickerGridCellStyles
  - uid: '@fluentui/react-next!IComboBox:interface'
    name: IComboBox
  - uid: '@fluentui/react-next!IComboBoxOption:interface'
    name: IComboBoxOption
  - uid: '@fluentui/react-next!IComboBoxOptionStyles:interface'
    name: IComboBoxOptionStyles
  - uid: '@fluentui/react-next!IComboBoxProps:interface'
    name: IComboBoxProps
  - uid: '@fluentui/react-next!IComboBoxState:interface'
    name: IComboBoxState
  - uid: '@fluentui/react-next!IComboBoxStyles:interface'
    name: IComboBoxStyles
  - uid: '@fluentui/react-next!IContextualMenu:interface'
    name: IContextualMenu
  - uid: '@fluentui/react-next!IContextualMenuItem:interface'
    name: IContextualMenuItem
  - uid: '@fluentui/react-next!IContextualMenuItemProps:interface'
    name: IContextualMenuItemProps
  - uid: '@fluentui/react-next!IContextualMenuItemRenderFunctions:interface'
    name: IContextualMenuItemRenderFunctions
  - uid: '@fluentui/react-next!IContextualMenuItemRenderProps:interface'
    name: IContextualMenuItemRenderProps
  - uid: '@fluentui/react-next!IContextualMenuItemStyleProps:interface'
    name: IContextualMenuItemStyleProps
  - uid: '@fluentui/react-next!IContextualMenuItemStyles:interface'
    name: IContextualMenuItemStyles
  - uid: '@fluentui/react-next!IContextualMenuListProps:interface'
    name: IContextualMenuListProps
  - uid: '@fluentui/react-next!IContextualMenuProps:interface'
    name: IContextualMenuProps
  - uid: '@fluentui/react-next!IContextualMenuRenderItem:interface'
    name: IContextualMenuRenderItem
  - uid: '@fluentui/react-next!IContextualMenuSection:interface'
    name: IContextualMenuSection
  - uid: '@fluentui/react-next!IContextualMenuState:interface'
    name: IContextualMenuState
  - uid: '@fluentui/react-next!IContextualMenuStyleProps:interface'
    name: IContextualMenuStyleProps
  - uid: '@fluentui/react-next!IContextualMenuStyles:interface'
    name: IContextualMenuStyles
  - uid: '@fluentui/react-next!IContextualMenuSubComponentStyles:interface'
    name: IContextualMenuSubComponentStyles
  - uid: '@fluentui/react-next!IDialogState:interface'
    name: IDialogState
  - uid: '@fluentui/react-next!IDividerAsProps:interface'
    name: IDividerAsProps
  - uid: '@fluentui/react-next!IDragOptions:interface'
    name: IDragOptions
  - uid: '@fluentui/react-next!IDropdown:interface'
    name: IDropdown
  - uid: '@fluentui/react-next!IDropdownOption:interface'
    name: IDropdownOption
  - uid: '@fluentui/react-next!IDropdownProps:interface'
    name: IDropdownProps
  - uid: '@fluentui/react-next!IDropdownStyles:interface'
    name: IDropdownStyles
  - uid: '@fluentui/react-next!IDropdownSubComponentStyles:interface'
    name: IDropdownSubComponentStyles
  - uid: '@fluentui/react-next!IEditingSelectedPeopleItemProps:interface'
    name: IEditingSelectedPeopleItemProps
  - uid: '@fluentui/react-next!IEditingSelectedPeopleItemStyles:interface'
    name: IEditingSelectedPeopleItemStyles
  - uid: '@fluentui/react-next!IEditingSelectedPeopleItemStylesProps:interface'
    name: IEditingSelectedPeopleItemStylesProps
  - uid: '@fluentui/react-next!IEntityRect:interface'
    name: IEntityRect
  - uid: '@fluentui/react-next!IExtendedPeoplePickerProps:interface'
    name: IExtendedPeoplePickerProps
  - uid: '@fluentui/react-next!IExtendedPersonaProps:interface'
    name: IExtendedPersonaProps
  - uid: '@fluentui/react-next!IFabricProps:interface'
    name: IFabricProps
  - uid: '@fluentui/react-next!IFabricStyleProps:interface'
    name: IFabricStyleProps
  - uid: '@fluentui/react-next!IFabricStyles:interface'
    name: IFabricStyles
  - uid: '@fluentui/react-next!IFocusTrapCalloutProps:interface'
    name: IFocusTrapCalloutProps
  - uid: '@fluentui/react-next!IFocusTrapZone:interface'
    name: IFocusTrapZone
  - uid: '@fluentui/react-next!IFocusTrapZoneProps:interface'
    name: IFocusTrapZoneProps
  - uid: '@fluentui/react-next!IGap:interface'
    name: IGap
  - uid: '@fluentui/react-next!IImage:interface'
    name: IImage
  - uid: '@fluentui/react-next!IImageProps:interface'
    name: IImageProps
  - uid: '@fluentui/react-next!IImageState:interface'
    name: IImageState
  - uid: '@fluentui/react-next!IImageStyleProps:interface'
    name: IImageStyleProps
  - uid: '@fluentui/react-next!IImageStyles:interface'
    name: IImageStyles
  - uid: '@fluentui/react-next!ILine:interface'
    name: ILine
  - uid: '@fluentui/react-next!ImageCoverStyle:enum'
    name: ImageCoverStyle
  - uid: '@fluentui/react-next!ImageFit:enum'
    name: ImageFit
  - uid: '@fluentui/react-next!ImageLoadState:enum'
    name: ImageLoadState
  - uid: '@fluentui/react-next!IMaskedTextField:interface'
    name: IMaskedTextField
  - uid: '@fluentui/react-next!IMaskedTextFieldProps:interface'
    name: IMaskedTextFieldProps
  - uid: '@fluentui/react-next!IMenuItemStyles:interface'
    name: IMenuItemStyles
  - uid: '@fluentui/react-next!IMessageBar:interface'
    name: IMessageBar
  - uid: '@fluentui/react-next!IMessageBarProps:interface'
    name: IMessageBarProps
  - uid: '@fluentui/react-next!IMessageBarStyleProps:interface'
    name: IMessageBarStyleProps
  - uid: '@fluentui/react-next!IMessageBarStyles:interface'
    name: IMessageBarStyles
  - uid: '@fluentui/react-next!IModal:interface'
    name: IModal
  - uid: '@fluentui/react-next!IModalProps:interface'
    name: IModalProps
  - uid: '@fluentui/react-next!IModalStyles:interface'
    name: IModalStyles
  - uid: '@fluentui/react-next!IOnRenderComboBoxLabelProps:interface'
    name: IOnRenderComboBoxLabelProps
  - uid: '@fluentui/react-next!IOverflowSet:interface'
    name: IOverflowSet
  - uid: '@fluentui/react-next!IOverflowSetItemProps:interface'
    name: IOverflowSetItemProps
  - uid: '@fluentui/react-next!IOverflowSetProps:interface'
    name: IOverflowSetProps
  - uid: '@fluentui/react-next!IOverflowSetStyles:interface'
    name: IOverflowSetStyles
  - uid: '@fluentui/react-next!IPeopleFloatingPickerProps:interface'
    name: IPeopleFloatingPickerProps
  - uid: '@fluentui/react-next!IPeoplePickerItemProps:interface'
    name: IPeoplePickerItemProps
  - uid: '@fluentui/react-next!IPeoplePickerItemState:interface'
    name: IPeoplePickerItemState
  - uid: '@fluentui/react-next!IPersona:interface'
    name: IPersona
  - uid: '@fluentui/react-next!IPersonaCoinProps:interface'
    name: IPersonaCoinProps
  - uid: '@fluentui/react-next!IPersonaCoinStyleProps:interface'
    name: IPersonaCoinStyleProps
  - uid: '@fluentui/react-next!IPersonaCoinStyles:interface'
    name: IPersonaCoinStyles
  - uid: '@fluentui/react-next!IPersonaPresenceProps:interface'
    name: IPersonaPresenceProps
  - uid: '@fluentui/react-next!IPersonaPresenceStyles:interface'
    name: IPersonaPresenceStyles
  - uid: '@fluentui/react-next!IPersonaProps:interface'
    name: IPersonaProps
  - uid: '@fluentui/react-next!IPersonaSharedProps:interface'
    name: IPersonaSharedProps
  - uid: '@fluentui/react-next!IPersonaStyleProps:interface'
    name: IPersonaStyleProps
  - uid: '@fluentui/react-next!IPersonaStyles:interface'
    name: IPersonaStyles
  - uid: '@fluentui/react-next!IPopupProps:interface'
    name: IPopupProps
  - uid: '@fluentui/react-next!IPositioningContainer:interface'
    name: IPositioningContainer
  - uid: '@fluentui/react-next!IPositioningContainerProps:interface'
    name: IPositioningContainerProps
  - uid: '@fluentui/react-next!IRating:interface'
    name: IRating
  - uid: '@fluentui/react-next!IRatingProps:interface'
    name: IRatingProps
  - uid: '@fluentui/react-next!IRatingStyleProps:interface'
    name: IRatingStyleProps
  - uid: '@fluentui/react-next!IRatingStyles:interface'
    name: IRatingStyles
  - uid: '@fluentui/react-next!IResizeGroup:interface'
    name: IResizeGroup
  - uid: '@fluentui/react-next!IResizeGroupProps:interface'
    name: IResizeGroupProps
  - uid: '@fluentui/react-next!IResizeGroupState:interface'
    name: IResizeGroupState
  - uid: '@fluentui/react-next!IResizeGroupStyleProps:interface'
    name: IResizeGroupStyleProps
  - uid: '@fluentui/react-next!IResizeGroupStyles:interface'
    name: IResizeGroupStyles
  - uid: '@fluentui/react-next!ISearchBox:interface'
    name: ISearchBox
  - uid: '@fluentui/react-next!ISearchBoxProps:interface'
    name: ISearchBoxProps
  - uid: '@fluentui/react-next!ISearchBoxStyleProps:interface'
    name: ISearchBoxStyleProps
  - uid: '@fluentui/react-next!ISearchBoxStyles:interface'
    name: ISearchBoxStyles
  - uid: '@fluentui/react-next!ISelectedItemProps:interface'
    name: ISelectedItemProps
  - uid: '@fluentui/react-next!ISelectedPeopleItemProps:interface'
    name: ISelectedPeopleItemProps
  - uid: '@fluentui/react-next!ISelectedPeopleProps:interface'
    name: ISelectedPeopleProps
  - uid: '@fluentui/react-next!IShimmerCircle:interface'
    name: IShimmerCircle
  - uid: '@fluentui/react-next!IShimmerCircleProps:interface'
    name: IShimmerCircleProps
  - uid: '@fluentui/react-next!IShimmerCircleStyles:interface'
    name: IShimmerCircleStyles
  - uid: '@fluentui/react-next!IShimmerColors:interface'
    name: IShimmerColors
  - uid: '@fluentui/react-next!IShimmerElement:interface'
    name: IShimmerElement
  - uid: '@fluentui/react-next!IShimmerElementsGroup:interface'
    name: IShimmerElementsGroup
  - uid: '@fluentui/react-next!IShimmerElementsGroupProps:interface'
    name: IShimmerElementsGroupProps
  - uid: '@fluentui/react-next!IShimmerElementsGroupStyleProps:interface'
    name: IShimmerElementsGroupStyleProps
  - uid: '@fluentui/react-next!IShimmerElementsGroupStyles:interface'
    name: IShimmerElementsGroupStyles
  - uid: '@fluentui/react-next!IShimmerGap:interface'
    name: IShimmerGap
  - uid: '@fluentui/react-next!IShimmerGapProps:interface'
    name: IShimmerGapProps
  - uid: '@fluentui/react-next!IShimmerGapStyles:interface'
    name: IShimmerGapStyles
  - uid: '@fluentui/react-next!IShimmerLine:interface'
    name: IShimmerLine
  - uid: '@fluentui/react-next!IShimmerLineProps:interface'
    name: IShimmerLineProps
  - uid: '@fluentui/react-next!IShimmerLineStyles:interface'
    name: IShimmerLineStyles
  - uid: '@fluentui/react-next!IShimmerProps:interface'
    name: IShimmerProps
  - uid: '@fluentui/react-next!IShimmerStyleProps:interface'
    name: IShimmerStyleProps
  - uid: '@fluentui/react-next!IShimmerStyles:interface'
    name: IShimmerStyles
  - uid: '@fluentui/react-next!ISpinButton:interface'
    name: ISpinButton
  - uid: '@fluentui/react-next!ISpinButtonProps:interface'
    name: ISpinButtonProps
  - uid: '@fluentui/react-next!ISpinButtonStyleProps:interface'
    name: ISpinButtonStyleProps
  - uid: '@fluentui/react-next!ISpinButtonStyles:interface'
    name: ISpinButtonStyles
  - uid: '@fluentui/react-next!ISuggestionsControlProps:interface'
    name: ISuggestionsControlProps
  - uid: '@fluentui/react-next!ISuggestionsControlState:interface'
    name: ISuggestionsControlState
  - uid: '@fluentui/react-next!ISuggestionsCoreProps:interface'
    name: ISuggestionsCoreProps
  - uid: '@fluentui/react-next!ISuggestionsHeaderFooterItemProps:interface'
    name: ISuggestionsHeaderFooterItemProps
  - uid: '@fluentui/react-next!ISuggestionsHeaderFooterProps:interface'
    name: ISuggestionsHeaderFooterProps
  - uid: '@fluentui/react-next!ISwatchColorPickerProps:interface'
    name: ISwatchColorPickerProps
  - uid: '@fluentui/react-next!ISwatchColorPickerStyleProps:interface'
    name: ISwatchColorPickerStyleProps
  - uid: '@fluentui/react-next!ISwatchColorPickerStyles:interface'
    name: ISwatchColorPickerStyles
  - uid: '@fluentui/react-next!ITextField:interface'
    name: ITextField
  - uid: '@fluentui/react-next!ITextFieldProps:interface'
    name: ITextFieldProps
  - uid: '@fluentui/react-next!ITextFieldStyles:interface'
    name: ITextFieldStyles
  - uid: '@fluentui/react-next!ITextFieldSubComponentStyles:interface'
    name: ITextFieldSubComponentStyles
  - uid: '@fluentui/react-next!KeyboardSpinDirection:enum'
    name: KeyboardSpinDirection
  - uid: '@fluentui/react-next!MessageBarType:enum'
    name: MessageBarType
  - uid: '@fluentui/react-next!ModalBase:class'
    name: ModalBase
  - uid: '@fluentui/react-next!PersonaInitialsColor:enum'
    name: PersonaInitialsColor
  - uid: '@fluentui/react-next!PersonaPresence:enum'
    name: PersonaPresence
  - uid: '@fluentui/react-next!PersonaSize:enum'
    name: PersonaSize
  - uid: '@fluentui/react-next!RatingSize:enum'
    name: RatingSize
  - uid: '@fluentui/react-next!ResizeGroupDirection:enum'
    name: ResizeGroupDirection
  - uid: '@fluentui/react-next!SelectedPeopleList:class'
    name: SelectedPeopleList
  - uid: '@fluentui/react-next!ShimmerElementsDefaultHeights:enum'
    name: ShimmerElementsDefaultHeights
  - uid: '@fluentui/react-next!ShimmerElementType:enum'
    name: ShimmerElementType
  - uid: '@fluentui/react-next!SuggestionItemType:enum'
    name: SuggestionItemType
  - uid: '@fluentui/react-next!SuggestionsControl:class'
    name: SuggestionsControl
  - uid: '@fluentui/react-next!SuggestionsCore:class'
    name: SuggestionsCore
  - uid: '@fluentui/react-next!SuggestionsHeaderFooterItem:class'
    name: SuggestionsHeaderFooterItem
  - uid: '@fluentui/react-next!SuggestionsStore:class'
    name: SuggestionsStore
  - uid: '@fluentui/react-next!TextFieldBase:class'
    name: TextFieldBase
  - uid: '@fluentui/react-next!VirtualizedComboBox:class'
    name: VirtualizedComboBox
