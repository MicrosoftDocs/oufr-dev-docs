### YamlMime:TSType
name: BasePicker
uid: 'office-ui-fabric-react!BasePicker:class'
package: office-ui-fabric-react!
fullName: BasePicker
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: (constructor)(basePickerProps)
    uid: 'office-ui-fabric-react!BasePicker:constructor(1)'
    package: office-ui-fabric-react!
    fullName: (constructor)(basePickerProps)
    summary: Constructs a new instance of the `BasePicker` class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constructor(basePickerProps: P);'
      parameters:
        - id: basePickerProps
          description: ''
          type: P
properties:
  - name: _ariaMap
    uid: 'office-ui-fabric-react!BasePicker#_ariaMap:member'
    package: office-ui-fabric-react!
    fullName: _ariaMap
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected _ariaMap: IPickerAriaIds;'
      return:
        type: IPickerAriaIds
  - name: _shouldFocusZoneEnterInnerZone
    uid: 'office-ui-fabric-react!BasePicker#_shouldFocusZoneEnterInnerZone:member'
    package: office-ui-fabric-react!
    fullName: _shouldFocusZoneEnterInnerZone
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected _shouldFocusZoneEnterInnerZone: (ev:
        React.KeyboardEvent<HTMLElement>) => boolean;
      return:
        type: '(ev: React.KeyboardEvent&lt;HTMLElement&gt;) =&gt; boolean'
  - name: addItem
    uid: 'office-ui-fabric-react!BasePicker#addItem:member'
    package: office-ui-fabric-react!
    fullName: addItem
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected addItem: (item: T) => void;'
      return:
        type: '(item: T) =&gt; void'
  - name: addItemByIndex
    uid: 'office-ui-fabric-react!BasePicker#addItemByIndex:member'
    package: office-ui-fabric-react!
    fullName: addItemByIndex
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected addItemByIndex: (index: number) => void;'
      return:
        type: '(index: number) =&gt; void'
  - name: completeSelection
    uid: 'office-ui-fabric-react!BasePicker#completeSelection:member'
    package: office-ui-fabric-react!
    fullName: completeSelection
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected completeSelection: (item: T) => void;'
      return:
        type: '(item: T) =&gt; void'
  - name: currentPromise
    uid: 'office-ui-fabric-react!BasePicker#currentPromise:member'
    package: office-ui-fabric-react!
    fullName: currentPromise
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected currentPromise: PromiseLike<any> | undefined;'
      return:
        type: PromiseLike&lt;any&gt; | undefined
  - name: dismissSuggestions
    uid: 'office-ui-fabric-react!BasePicker#dismissSuggestions:member'
    package: office-ui-fabric-react!
    fullName: dismissSuggestions
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dismissSuggestions: (ev?: any) => void;'
      return:
        type: '(ev?: any) =&gt; void'
  - name: focusZone
    uid: 'office-ui-fabric-react!BasePicker#focusZone:member'
    package: office-ui-fabric-react!
    fullName: focusZone
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected focusZone: React.RefObject<IFocusZone>;'
      return:
        type: React.RefObject&lt;IFocusZone&gt;
  - name: input
    uid: 'office-ui-fabric-react!BasePicker#input:member'
    package: office-ui-fabric-react!
    fullName: input
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected input: React.RefObject<IAutofill>;'
      return:
        type: React.RefObject&lt;IAutofill&gt;
  - name: items
    uid: 'office-ui-fabric-react!BasePicker#items:member'
    package: office-ui-fabric-react!
    fullName: items
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: T[];'
      return:
        type: 'T[]'
  - name: onBlur
    uid: 'office-ui-fabric-react!BasePicker#onBlur:member'
    package: office-ui-fabric-react!
    fullName: onBlur
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected onBlur: (ev: React.FocusEvent<HTMLElement | Autofill>) =>
        void;
      return:
        type: '(ev: React.FocusEvent&lt;HTMLElement | Autofill&gt;) =&gt; void'
  - name: onClick
    uid: 'office-ui-fabric-react!BasePicker#onClick:member'
    package: office-ui-fabric-react!
    fullName: onClick
    summary: >-
      Reveals suggestions any time the user clicks on the input element without
      shifting focus.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected onClick: (ev: React.MouseEvent<HTMLInputElement, MouseEvent>)
        => void;
      return:
        type: '(ev: React.MouseEvent&lt;HTMLInputElement, MouseEvent&gt;) =&gt; void'
  - name: onGetMoreResults
    uid: 'office-ui-fabric-react!BasePicker#onGetMoreResults:member'
    package: office-ui-fabric-react!
    fullName: onGetMoreResults
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onGetMoreResults: () => void;'
      return:
        type: () =&gt; void
  - name: onInputBlur
    uid: 'office-ui-fabric-react!BasePicker#onInputBlur:member'
    package: office-ui-fabric-react!
    fullName: onInputBlur
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected onInputBlur: (ev: React.FocusEvent<HTMLInputElement |
        Autofill>) => void;
      return:
        type: '(ev: React.FocusEvent&lt;HTMLInputElement | Autofill&gt;) =&gt; void'
  - name: onInputChange
    uid: 'office-ui-fabric-react!BasePicker#onInputChange:member'
    package: office-ui-fabric-react!
    fullName: onInputChange
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onInputChange: (value: string) => void;'
      return:
        type: '(value: string) =&gt; void'
  - name: onInputFocus
    uid: 'office-ui-fabric-react!BasePicker#onInputFocus:member'
    package: office-ui-fabric-react!
    fullName: onInputFocus
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected onInputFocus: (ev: React.FocusEvent<HTMLInputElement |
        Autofill>) => void;
      return:
        type: '(ev: React.FocusEvent&lt;HTMLInputElement | Autofill&gt;) =&gt; void'
  - name: onItemChange
    uid: 'office-ui-fabric-react!BasePicker#onItemChange:member'
    package: office-ui-fabric-react!
    fullName: onItemChange
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onItemChange: (changedItem: T, index: number) => void;'
      return:
        type: '(changedItem: T, index: number) =&gt; void'
  - name: onKeyDown
    uid: 'office-ui-fabric-react!BasePicker#onKeyDown:member'
    package: office-ui-fabric-react!
    fullName: onKeyDown
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onKeyDown: (ev: React.KeyboardEvent<HTMLElement>) => void;'
      return:
        type: '(ev: React.KeyboardEvent&lt;HTMLElement&gt;) =&gt; void'
  - name: onSuggestionClick
    uid: 'office-ui-fabric-react!BasePicker#onSuggestionClick:member'
    package: office-ui-fabric-react!
    fullName: onSuggestionClick
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected onSuggestionClick: (ev: React.MouseEvent<HTMLElement,
        MouseEvent>, item: any, index: number) => void;
      return:
        type: >-
          (ev: React.MouseEvent&lt;HTMLElement, MouseEvent&gt;, item: any,
          index: number) =&gt; void
  - name: onSuggestionRemove
    uid: 'office-ui-fabric-react!BasePicker#onSuggestionRemove:member'
    package: office-ui-fabric-react!
    fullName: onSuggestionRemove
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected onSuggestionRemove: (ev: React.MouseEvent<HTMLElement,
        MouseEvent>, item: T, index: number) => void;
      return:
        type: >-
          (ev: React.MouseEvent&lt;HTMLElement, MouseEvent&gt;, item: T, index:
          number) =&gt; void
  - name: refocusSuggestions
    uid: 'office-ui-fabric-react!BasePicker#refocusSuggestions:member'
    package: office-ui-fabric-react!
    fullName: refocusSuggestions
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'refocusSuggestions: (keyCode: number) => void;'
      return:
        type: '(keyCode: number) =&gt; void'
  - name: removeItem
    uid: 'office-ui-fabric-react!BasePicker#removeItem:member'
    package: office-ui-fabric-react!
    fullName: removeItem
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected removeItem: (item: IPickerItemProps<T>, focusNextItem?:
        boolean | undefined) => void;
      return:
        type: >-
          (item: IPickerItemProps&lt;T&gt;, focusNextItem?: boolean | undefined)
          =&gt; void
  - name: removeItems
    uid: 'office-ui-fabric-react!BasePicker#removeItems:member'
    package: office-ui-fabric-react!
    fullName: removeItems
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected removeItems: (itemsToRemove: any[]) => void;'
      return:
        type: '(itemsToRemove: any[]) =&gt; void'
  - name: root
    uid: 'office-ui-fabric-react!BasePicker#root:member'
    package: office-ui-fabric-react!
    fullName: root
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected root: React.RefObject<HTMLDivElement>;'
      return:
        type: React.RefObject&lt;HTMLDivElement&gt;
  - name: selection
    uid: 'office-ui-fabric-react!BasePicker#selection:member'
    package: office-ui-fabric-react!
    fullName: selection
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected selection: Selection;'
      return:
        type: '<xref uid="@fluentui/utilities!Selection:class" />'
  - name: suggestionElement
    uid: 'office-ui-fabric-react!BasePicker#suggestionElement:member'
    package: office-ui-fabric-react!
    fullName: suggestionElement
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected suggestionElement: React.RefObject<ISuggestions<T>>;'
      return:
        type: React.RefObject&lt;ISuggestions&lt;T&gt;&gt;
  - name: SuggestionOfProperType
    uid: 'office-ui-fabric-react!BasePicker#SuggestionOfProperType:member'
    package: office-ui-fabric-react!
    fullName: SuggestionOfProperType
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: this is no longer necessary as typescript now supports generic elements
    syntax:
      content: >-
        protected SuggestionOfProperType: new (props: ISuggestionsProps<T>) =>
        Suggestions<T>;
      return:
        type: 'new (props: ISuggestionsProps&lt;T&gt;) =&gt; Suggestions&lt;T&gt;'
  - name: suggestionStore
    uid: 'office-ui-fabric-react!BasePicker#suggestionStore:member'
    package: office-ui-fabric-react!
    fullName: suggestionStore
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected suggestionStore: SuggestionsController<T>;'
      return:
        type: SuggestionsController&lt;T&gt;
methods:
  - name: canAddItems()
    uid: 'office-ui-fabric-react!BasePicker#canAddItems:member(1)'
    package: office-ui-fabric-react!
    fullName: canAddItems()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected canAddItems(): boolean;'
      return:
        type: boolean
        description: ''
  - name: completeSuggestion(forceComplete)
    uid: 'office-ui-fabric-react!BasePicker#completeSuggestion:member(1)'
    package: office-ui-fabric-react!
    fullName: completeSuggestion(forceComplete)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'completeSuggestion(forceComplete?: boolean): void;'
      parameters:
        - id: forceComplete
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: componentDidMount()
    uid: 'office-ui-fabric-react!BasePicker#componentDidMount:member(1)'
    package: office-ui-fabric-react!
    fullName: componentDidMount()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type: void
        description: ''
  - name: 'componentDidUpdate(oldProps, oldState)'
    uid: 'office-ui-fabric-react!BasePicker#componentDidUpdate:member(1)'
    package: office-ui-fabric-react!
    fullName: 'componentDidUpdate(oldProps, oldState)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentDidUpdate(oldProps: P, oldState: IBasePickerState): void;'
      parameters:
        - id: oldProps
          description: ''
          type: P
        - id: oldState
          description: ''
          type: IBasePickerState
      return:
        type: void
        description: ''
  - name: componentWillUnmount()
    uid: 'office-ui-fabric-react!BasePicker#componentWillUnmount:member(1)'
    package: office-ui-fabric-react!
    fullName: componentWillUnmount()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type: void
        description: ''
  - name: focus()
    uid: 'office-ui-fabric-react!BasePicker#focus:member(1)'
    package: office-ui-fabric-react!
    fullName: focus()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'focus(): void;'
      return:
        type: void
        description: ''
  - name: focusInput()
    uid: 'office-ui-fabric-react!BasePicker#focusInput:member(1)'
    package: office-ui-fabric-react!
    fullName: focusInput()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'focusInput(): void;'
      return:
        type: void
        description: ''
  - name: getActiveDescendant()
    uid: 'office-ui-fabric-react!BasePicker#getActiveDescendant:member(1)'
    package: office-ui-fabric-react!
    fullName: getActiveDescendant()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected getActiveDescendant(): string | undefined;'
      return:
        type: string | undefined
        description: ''
  - name: getDerivedStateFromProps(newProps)
    uid: 'office-ui-fabric-react!BasePicker.getDerivedStateFromProps:member(1)'
    package: office-ui-fabric-react!
    fullName: getDerivedStateFromProps(newProps)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        static getDerivedStateFromProps(newProps: IBasePickerProps<any>): {
                items: any[];
            } | null;
      parameters:
        - id: newProps
          description: ''
          type: IBasePickerProps&lt;any&gt;
      return:
        type: |-
          {
                  items: any[];
              } | null
        description: ''
  - name: getSuggestionsAlert(suggestionAlertClassName)
    uid: 'office-ui-fabric-react!BasePicker#getSuggestionsAlert:member(1)'
    package: office-ui-fabric-react!
    fullName: getSuggestionsAlert(suggestionAlertClassName)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected getSuggestionsAlert(suggestionAlertClassName?: string):
        JSX.Element | undefined;
      parameters:
        - id: suggestionAlertClassName
          description: ''
          type: string
      return:
        type: JSX.Element | undefined
        description: ''
  - name: onBackspace(ev)
    uid: 'office-ui-fabric-react!BasePicker#onBackspace:member(1)'
    package: office-ui-fabric-react!
    fullName: onBackspace(ev)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onBackspace(ev: React.KeyboardEvent<HTMLElement>): void;'
      parameters:
        - id: ev
          description: ''
          type: React.KeyboardEvent&lt;HTMLElement&gt;
      return:
        type: void
        description: ''
  - name: onChange(items)
    uid: 'office-ui-fabric-react!BasePicker#onChange:member(1)'
    package: office-ui-fabric-react!
    fullName: onChange(items)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onChange(items?: T[]): void;'
      parameters:
        - id: items
          description: ''
          type: 'T[]'
      return:
        type: void
        description: ''
  - name: onEmptyInputFocus()
    uid: 'office-ui-fabric-react!BasePicker#onEmptyInputFocus:member(1)'
    package: office-ui-fabric-react!
    fullName: onEmptyInputFocus()
    summary: >-
      Only to be called when there is nothing in the input. Checks to see if the
      consumer has provided a function to resolve suggestions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onEmptyInputFocus(): void;'
      return:
        type: void
        description: ''
  - name: onSelectionChange()
    uid: 'office-ui-fabric-react!BasePicker#onSelectionChange:member(1)'
    package: office-ui-fabric-react!
    fullName: onSelectionChange()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onSelectionChange(): void;'
      return:
        type: void
        description: ''
  - name: onSuggestionSelect()
    uid: 'office-ui-fabric-react!BasePicker#onSuggestionSelect:member(1)'
    package: office-ui-fabric-react!
    fullName: onSuggestionSelect()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected onSuggestionSelect(): void;'
      return:
        type: void
        description: ''
  - name: render()
    uid: 'office-ui-fabric-react!BasePicker#render:member(1)'
    package: office-ui-fabric-react!
    fullName: render()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type: JSX.Element
        description: ''
  - name: renderItems()
    uid: 'office-ui-fabric-react!BasePicker#renderItems:member(1)'
    package: office-ui-fabric-react!
    fullName: renderItems()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected renderItems(): JSX.Element[];'
      return:
        type: 'JSX.Element[]'
        description: ''
  - name: renderSuggestions()
    uid: 'office-ui-fabric-react!BasePicker#renderSuggestions:member(1)'
    package: office-ui-fabric-react!
    fullName: renderSuggestions()
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected renderSuggestions(): JSX.Element | null;'
      return:
        type: JSX.Element | null
        description: ''
  - name: resetFocus(index)
    uid: 'office-ui-fabric-react!BasePicker#resetFocus:member(1)'
    package: office-ui-fabric-react!
    fullName: resetFocus(index)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected resetFocus(index?: number): void;'
      parameters:
        - id: index
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: 'resolveNewValue(updatedValue, suggestions)'
    uid: 'office-ui-fabric-react!BasePicker#resolveNewValue:member(1)'
    package: office-ui-fabric-react!
    fullName: 'resolveNewValue(updatedValue, suggestions)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected resolveNewValue(updatedValue: string, suggestions: T[]): void;'
      parameters:
        - id: updatedValue
          description: ''
          type: string
        - id: suggestions
          description: ''
          type: 'T[]'
      return:
        type: void
        description: ''
  - name: updateSuggestions(suggestions)
    uid: 'office-ui-fabric-react!BasePicker#updateSuggestions:member(1)'
    package: office-ui-fabric-react!
    fullName: updateSuggestions(suggestions)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected updateSuggestions(suggestions: any[]): void;'
      parameters:
        - id: suggestions
          description: ''
          type: 'any[]'
      return:
        type: void
        description: ''
  - name: 'updateSuggestionsList(suggestions, updatedValue)'
    uid: 'office-ui-fabric-react!BasePicker#updateSuggestionsList:member(1)'
    package: office-ui-fabric-react!
    fullName: 'updateSuggestionsList(suggestions, updatedValue)'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>,
        updatedValue?: string): void;
      parameters:
        - id: suggestions
          description: ''
          type: 'T[] | PromiseLike&lt;T[]&gt;'
        - id: updatedValue
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: updateValue(updatedValue)
    uid: 'office-ui-fabric-react!BasePicker#updateValue:member(1)'
    package: office-ui-fabric-react!
    fullName: updateValue(updatedValue)
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protected updateValue(updatedValue: string): void;'
      parameters:
        - id: updatedValue
          description: ''
          type: string
      return:
        type: void
        description: ''
extends: 'React.Component&lt;P, IBasePickerState&gt; '
