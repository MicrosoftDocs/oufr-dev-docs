### YamlMime:TSType
name: IMarqueeSelectionProps
uid: '@fluentui/react-internal!IMarqueeSelectionProps:interface'
package: '@fluentui/react-internal!'
fullName: IMarqueeSelectionProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: className
    uid: '@fluentui/react-internal!IMarqueeSelectionProps#className:member'
    package: '@fluentui/react-internal!'
    fullName: className
    summary: Additional CSS class(es) to apply to the MarqueeSelection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: '@fluentui/react-internal!IMarqueeSelectionProps#componentRef:member'
    package: '@fluentui/react-internal!'
    fullName: componentRef
    summary: >-
      Optional callback to access the IMarqueeSelection interface. Use this
      instead of ref for accessing the public methods and properties of the
      component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IMarqueeSelection>;'
      return:
        type: IRefObject&lt;IMarqueeSelection&gt;
  - name: isDraggingConstrainedToRoot
    uid: >-
      @fluentui/react-internal!IMarqueeSelectionProps#isDraggingConstrainedToRoot:member
    package: '@fluentui/react-internal!'
    fullName: isDraggingConstrainedToRoot
    summary: >-
      Optional flag to restrict the drag rect to the root element, instead of
      allowing the drag rect to start outside of the root element boundaries.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isDraggingConstrainedToRoot?: boolean;'
      return:
        type: boolean
  - name: isEnabled
    uid: '@fluentui/react-internal!IMarqueeSelectionProps#isEnabled:member'
    package: '@fluentui/react-internal!'
    fullName: isEnabled
    summary: >-
      Optional flag to control the enabled state of marquee selection. This
      allows you to render it and have events all ready to go, but conditionally
      disable it. That way transitioning between enabled/disabled generate no
      difference in the DOM.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isEnabled?: boolean;'
      return:
        type: boolean
  - name: onShouldStartSelection
    uid: >-
      @fluentui/react-internal!IMarqueeSelectionProps#onShouldStartSelection:member
    package: '@fluentui/react-internal!'
    fullName: onShouldStartSelection
    summary: >-
      Optional callback that is called, when the mouse down event occurs, in
      order to determine if we should start a marquee selection. If true is
      returned, we will cancel the mousedown event to prevent upstream mousedown
      handlers from executing.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onShouldStartSelection?: (ev: MouseEvent) => boolean;'
      return:
        type: '(ev: MouseEvent) =&gt; boolean'
  - name: rootProps
    uid: '@fluentui/react-internal!IMarqueeSelectionProps#rootProps:member'
    package: '@fluentui/react-internal!'
    fullName: rootProps
    summary: Optional props to mix into the root DIV element.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rootProps?: React.HTMLAttributes<HTMLDivElement>;'
      return:
        type: React.HTMLAttributes&lt;HTMLDivElement&gt;
  - name: selection
    uid: '@fluentui/react-internal!IMarqueeSelectionProps#selection:member'
    package: '@fluentui/react-internal!'
    fullName: selection
    summary: The selection object to interact with when updating selection changes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selection: ISelection;'
      return:
        type: '<xref uid="@fluentui/utilities!ISelection:interface" />'
  - name: styles
    uid: '@fluentui/react-internal!IMarqueeSelectionProps#styles:member'
    package: '@fluentui/react-internal!'
    fullName: styles
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunction<IMarqueeSelectionStyleProps,
        IMarqueeSelectionStyles>;
      return:
        type: >-
          IStyleFunction&lt;IMarqueeSelectionStyleProps,
          IMarqueeSelectionStyles&gt;
  - name: theme
    uid: '@fluentui/react-internal!IMarqueeSelectionProps#theme:member'
    package: '@fluentui/react-internal!'
    fullName: theme
    summary: Theme (provided through customization.)
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
extends: 'React.HTMLAttributes&lt;HTMLDivElement&gt; '
