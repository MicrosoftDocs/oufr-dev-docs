### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!ISpinButtonProps:interface'
    name: ISpinButtonProps
    fullName: ISpinButtonProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'React.HTMLAttributes<HTMLDivElement> '
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!ISpinButtonProps#ariaDescribedBy:member'
      - '@fluentui/react-next!ISpinButtonProps#ariaLabel:member'
      - '@fluentui/react-next!ISpinButtonProps#ariaPositionInSet:member'
      - '@fluentui/react-next!ISpinButtonProps#ariaSetSize:member'
      - '@fluentui/react-next!ISpinButtonProps#ariaValueNow:member'
      - '@fluentui/react-next!ISpinButtonProps#ariaValueText:member'
      - '@fluentui/react-next!ISpinButtonProps#className:member'
      - '@fluentui/react-next!ISpinButtonProps#componentRef:member'
      - '@fluentui/react-next!ISpinButtonProps#decrementButtonAriaLabel:member'
      - '@fluentui/react-next!ISpinButtonProps#decrementButtonIcon:member'
      - '@fluentui/react-next!ISpinButtonProps#defaultValue:member'
      - '@fluentui/react-next!ISpinButtonProps#disabled:member'
      - '@fluentui/react-next!ISpinButtonProps#downArrowButtonStyles:member'
      - '@fluentui/react-next!ISpinButtonProps#iconButtonProps:member'
      - '@fluentui/react-next!ISpinButtonProps#iconProps:member'
      - '@fluentui/react-next!ISpinButtonProps#incrementButtonAriaLabel:member'
      - '@fluentui/react-next!ISpinButtonProps#incrementButtonIcon:member'
      - '@fluentui/react-next!ISpinButtonProps#inputProps:member'
      - '@fluentui/react-next!ISpinButtonProps#keytipProps:member'
      - '@fluentui/react-next!ISpinButtonProps#label:member'
      - '@fluentui/react-next!ISpinButtonProps#labelPosition:member'
      - '@fluentui/react-next!ISpinButtonProps#max:member'
      - '@fluentui/react-next!ISpinButtonProps#min:member'
      - '@fluentui/react-next!ISpinButtonProps#onBlur:member'
      - '@fluentui/react-next!ISpinButtonProps#onDecrement:member'
      - '@fluentui/react-next!ISpinButtonProps#onFocus:member'
      - '@fluentui/react-next!ISpinButtonProps#onIncrement:member'
      - '@fluentui/react-next!ISpinButtonProps#onValidate:member'
      - '@fluentui/react-next!ISpinButtonProps#precision:member'
      - '@fluentui/react-next!ISpinButtonProps#step:member'
      - '@fluentui/react-next!ISpinButtonProps#styles:member'
      - '@fluentui/react-next!ISpinButtonProps#theme:member'
      - '@fluentui/react-next!ISpinButtonProps#title:member'
      - '@fluentui/react-next!ISpinButtonProps#upArrowButtonStyles:member'
      - '@fluentui/react-next!ISpinButtonProps#value:member'
  - uid: '@fluentui/react-next!ISpinButtonProps#ariaDescribedBy:member'
    summary: 'ID of a label which describes the control, if not using the default label.'
    name: ariaDescribedBy
    fullName: ariaDescribedBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaDescribedBy?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISpinButtonProps#ariaLabel:member'
    summary: A description of the control for the benefit of screen reader users.
    name: ariaLabel
    fullName: ariaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISpinButtonProps#ariaPositionInSet:member'
    summary: The position in the parent set (if in a set).
    name: ariaPositionInSet
    fullName: ariaPositionInSet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaPositionInSet?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISpinButtonProps#ariaSetSize:member'
    summary: The total size of the parent set (if in a set).
    name: ariaSetSize
    fullName: ariaSetSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaSetSize?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISpinButtonProps#ariaValueNow:member'
    summary: >-
      Sets the control's aria-valuenow. This is the numeric form of `value`<!-- -->. Providing this only makes sense
      when using as a controlled component.
    name: ariaValueNow
    fullName: ariaValueNow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaValueNow?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISpinButtonProps#ariaValueText:member'
    name: ariaValueText
    fullName: ariaValueText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ariaValueText?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISpinButtonProps#className:member'
    summary: Custom className for the control.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISpinButtonProps#componentRef:member'
    summary: Gets the component ref.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<ISpinButton>;'
      return:
        type:
          - IRefObject<ISpinButton>
  - uid: '@fluentui/react-next!ISpinButtonProps#decrementButtonAriaLabel:member'
    summary: Accessible label text for the decrement button (for screen reader users).
    name: decrementButtonAriaLabel
    fullName: decrementButtonAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'decrementButtonAriaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISpinButtonProps#decrementButtonIcon:member'
    summary: Custom props for the decrement button.
    name: decrementButtonIcon
    fullName: decrementButtonIcon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'decrementButtonIcon?: IIconProps;'
      return:
        type:
          - 'office-ui-fabric-react!IIconProps:interface'
  - uid: '@fluentui/react-next!ISpinButtonProps#defaultValue:member'
    summary: >-
      Initial value of the control. Updates to this prop will not be respected.


      Use this if you intend for the SpinButton to be an uncontrolled component which maintains its own value. Mutually
      exclusive with `value`<!-- -->.
    name: defaultValue
    fullName: defaultValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultValue?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISpinButtonProps#disabled:member'
    summary: Whether or not the control is disabled.
    name: disabled
    fullName: disabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'disabled?: boolean;'
      return:
        type:
          - boolean
  - uid: '@fluentui/react-next!ISpinButtonProps#downArrowButtonStyles:member'
    summary: >-
      Custom styles for the down arrow button.


      Note: The buttons are in a checked state when arrow keys are used to incremenent/decrement the SpinButton. Use
      `rootChecked` instead of `rootPressed` for styling when that is the case.
    name: downArrowButtonStyles
    fullName: downArrowButtonStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'downArrowButtonStyles?: Partial<IButtonStyles>;'
      return:
        type:
          - Partial<IButtonStyles>
  - uid: '@fluentui/react-next!ISpinButtonProps#iconButtonProps:member'
    summary: Additional props for the up and down arrow buttons.
    name: iconButtonProps
    fullName: iconButtonProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'iconButtonProps?: IButtonProps;'
      return:
        type:
          - 'office-ui-fabric-react!IButtonProps:interface'
  - uid: '@fluentui/react-next!ISpinButtonProps#iconProps:member'
    summary: Props for an icon to display alongside the control's label.
    name: iconProps
    fullName: iconProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'iconProps?: IIconProps;'
      return:
        type:
          - 'office-ui-fabric-react!IIconProps:interface'
  - uid: '@fluentui/react-next!ISpinButtonProps#incrementButtonAriaLabel:member'
    summary: Accessible label text for the increment button (for screen reader users).
    name: incrementButtonAriaLabel
    fullName: incrementButtonAriaLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'incrementButtonAriaLabel?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISpinButtonProps#incrementButtonIcon:member'
    summary: Custom props for the increment button.
    name: incrementButtonIcon
    fullName: incrementButtonIcon
    langs:
      - typeScript
    type: property
    syntax:
      content: 'incrementButtonIcon?: IIconProps;'
      return:
        type:
          - 'office-ui-fabric-react!IIconProps:interface'
  - uid: '@fluentui/react-next!ISpinButtonProps#inputProps:member'
    summary: Additional props for the input field.
    name: inputProps
    fullName: inputProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'inputProps?: React.InputHTMLAttributes<HTMLElement | HTMLInputElement>;'
      return:
        type:
          - React.InputHTMLAttributes<HTMLElement | HTMLInputElement>
  - uid: '@fluentui/react-next!ISpinButtonProps#keytipProps:member'
    summary: Keytip for the control.
    name: keytipProps
    fullName: keytipProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'keytipProps?: IKeytipProps;'
      return:
        type:
          - 'office-ui-fabric-react!IKeytipProps:interface'
  - uid: '@fluentui/react-next!ISpinButtonProps#label:member'
    summary: Descriptive label for the control.
    name: label
    fullName: label
    langs:
      - typeScript
    type: property
    syntax:
      content: 'label?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISpinButtonProps#labelPosition:member'
    summary: Where to position the control's label.
    name: labelPosition
    fullName: labelPosition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'labelPosition?: Position;'
      return:
        type:
          - 'office-ui-fabric-react!Position:enum'
  - uid: '@fluentui/react-next!ISpinButtonProps#max:member'
    summary: Max value of the control.
    name: max
    fullName: max
    langs:
      - typeScript
    type: property
    syntax:
      content: 'max?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISpinButtonProps#min:member'
    summary: Min value of the control.
    name: min
    fullName: min
    langs:
      - typeScript
    type: property
    syntax:
      content: 'min?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISpinButtonProps#onBlur:member'
    summary: Callback for when the control loses focus.
    name: onBlur
    fullName: onBlur
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onBlur?: React.FocusEventHandler<HTMLInputElement>;'
      return:
        type:
          - React.FocusEventHandler<HTMLInputElement>
  - uid: '@fluentui/react-next!ISpinButtonProps#onDecrement:member'
    summary: Callback for when the decrement button or down arrow key is pressed.
    name: onDecrement
    fullName: onDecrement
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onDecrement?: (value: string) => string | void;'
      return:
        type:
          - '(value: string) => string | void'
  - uid: '@fluentui/react-next!ISpinButtonProps#onFocus:member'
    summary: Callback for when the user focuses the control.
    name: onFocus
    fullName: onFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onFocus?: React.FocusEventHandler<HTMLInputElement>;'
      return:
        type:
          - React.FocusEventHandler<HTMLInputElement>
  - uid: '@fluentui/react-next!ISpinButtonProps#onIncrement:member'
    summary: Callback for when the increment button or up arrow key is pressed.
    name: onIncrement
    fullName: onIncrement
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onIncrement?: (value: string) => string | void;'
      return:
        type:
          - '(value: string) => string | void'
  - uid: '@fluentui/react-next!ISpinButtonProps#onValidate:member'
    summary: Callback for when the entered value should be validated.
    name: onValidate
    fullName: onValidate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onValidate?: (value: string, event?: React.SyntheticEvent<HTMLElement>) => string | void;'
      return:
        type:
          - '(value: string, event?: React.SyntheticEvent<HTMLElement>) => string | void'
  - uid: '@fluentui/react-next!ISpinButtonProps#precision:member'
    summary: >-
      How many decimal places the value should be rounded to.


      The default is calculated based on the precision of `step`<!-- -->: i.e. if step = 1, precision = 0. step =
      0.0089, precision = 4. step = 300, precision = 2. step = 23.00, precision = 2.
    name: precision
    fullName: precision
    langs:
      - typeScript
    type: property
    syntax:
      content: 'precision?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISpinButtonProps#step:member'
    summary: >-
      Difference between two adjacent values of the control. This value is used to calculate the precision of the input
      if no `precision` is given. The precision calculated this way will always be &gt;<!-- -->= 0.
    name: step
    fullName: step
    langs:
      - typeScript
    type: property
    syntax:
      content: 'step?: number;'
      return:
        type:
          - number
  - uid: '@fluentui/react-next!ISpinButtonProps#styles:member'
    summary: Custom styling for individual elements within the control.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ISpinButtonStyleProps, ISpinButtonStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<ISpinButtonStyleProps, ISpinButtonStyles>'
  - uid: '@fluentui/react-next!ISpinButtonProps#theme:member'
    summary: Theme provided by HOC.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - ITheme
  - uid: '@fluentui/react-next!ISpinButtonProps#title:member'
    summary: 'A more descriptive title for the control, visible on its tooltip.'
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'title?: string;'
      return:
        type:
          - string
  - uid: '@fluentui/react-next!ISpinButtonProps#upArrowButtonStyles:member'
    summary: >-
      Custom styles for the up arrow button.


      Note: The buttons are in a checked state when arrow keys are used to incremenent/decrement the SpinButton. Use
      `rootChecked` instead of `rootPressed` for styling when that is the case.
    name: upArrowButtonStyles
    fullName: upArrowButtonStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'upArrowButtonStyles?: Partial<IButtonStyles>;'
      return:
        type:
          - Partial<IButtonStyles>
  - uid: '@fluentui/react-next!ISpinButtonProps#value:member'
    summary: >-
      Current value of the control.


      Use this if you intend to pass in a new value as a result of change events. Mutually exclusive with
      `defaultValue`<!-- -->.
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value?: string;'
      return:
        type:
          - string
