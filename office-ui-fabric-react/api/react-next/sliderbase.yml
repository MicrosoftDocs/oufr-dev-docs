### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!SliderBase:class'
    name: SliderBase
    fullName: SliderBase
    langs:
      - typeScript
    type: class
    extends:
      - 'React.Component<ISliderProps, ISliderState> '
    implements:
      - 'ISlider '
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!SliderBase:constructor(1)'
      - '@fluentui/react-next!SliderBase#componentWillUnmount:member(1)'
      - '@fluentui/react-next!SliderBase.defaultProps:member'
      - '@fluentui/react-next!SliderBase#focus:member(1)'
      - '@fluentui/react-next!SliderBase#render:member(1)'
      - '@fluentui/react-next!SliderBase#value:member'
  - uid: '@fluentui/react-next!SliderBase:constructor(1)'
    summary: Constructs a new instance of the `SliderBase` class
    name: (constructor)(props)
    fullName: (constructor)(props)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(props: ISliderProps);'
      parameters:
        - id: props
          description: ''
          type:
            - ISliderProps
  - uid: '@fluentui/react-next!SliderBase#componentWillUnmount:member(1)'
    name: componentWillUnmount()
    fullName: componentWillUnmount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentWillUnmount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-next!SliderBase.defaultProps:member'
    name: defaultProps
    fullName: defaultProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'static defaultProps: ISliderProps;'
      return:
        type:
          - ISliderProps
  - uid: '@fluentui/react-next!SliderBase#focus:member(1)'
    name: focus()
    fullName: focus()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focus(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-next!SliderBase#render:member(1)'
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): React.ReactElement<{}>;'
      return:
        type:
          - 'React.ReactElement<{}>'
        description: ''
  - uid: '@fluentui/react-next!SliderBase#value:member'
    summary: >-
      This should be the only place where value is gotten from. It ensures that the component behaves consistently
      whether controlled or uncontrolled.
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: number | undefined;'
      return:
        type:
          - number | undefined
