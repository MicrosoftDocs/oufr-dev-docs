### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!VirtualizedComboBox:class'
    name: VirtualizedComboBox
    fullName: VirtualizedComboBox
    langs:
      - typeScript
    type: class
    extends:
      - 'React.Component<IComboBoxProps, {}> '
    implements:
      - 'IComboBox '
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!VirtualizedComboBox#_onRenderList:member'
      - '@fluentui/react-next!VirtualizedComboBox#_onScrollToItem:member'
      - '@fluentui/react-next!VirtualizedComboBox:constructor(1)'
      - '@fluentui/react-next!VirtualizedComboBox#dismissMenu:member(1)'
      - '@fluentui/react-next!VirtualizedComboBox#focus:member(1)'
      - '@fluentui/react-next!VirtualizedComboBox#render:member(1)'
      - '@fluentui/react-next!VirtualizedComboBox#selectedOptions:member'
  - uid: '@fluentui/react-next!VirtualizedComboBox#_onRenderList:member'
    name: _onRenderList
    fullName: _onRenderList
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected _onRenderList: (props: IComboBoxProps) => JSX.Element;'
      return:
        type:
          - '(props: IComboBoxProps) => JSX.Element'
  - uid: '@fluentui/react-next!VirtualizedComboBox#_onScrollToItem:member'
    name: _onScrollToItem
    fullName: _onScrollToItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected _onScrollToItem: (itemIndex: number) => void;'
      return:
        type:
          - '(itemIndex: number) => void'
  - uid: '@fluentui/react-next!VirtualizedComboBox:constructor(1)'
    summary: Constructs a new instance of the `VirtualizedComboBox` class
    name: (constructor)(props)
    fullName: (constructor)(props)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(props: IComboBoxProps);'
      parameters:
        - id: props
          description: ''
          type:
            - IComboBoxProps
  - uid: '@fluentui/react-next!VirtualizedComboBox#dismissMenu:member(1)'
    name: dismissMenu()
    fullName: dismissMenu()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'dismissMenu(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-next!VirtualizedComboBox#focus:member(1)'
    name: 'focus(shouldOpenOnFocus, useFocusAsync)'
    fullName: 'focus(shouldOpenOnFocus, useFocusAsync)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focus(shouldOpenOnFocus?: boolean, useFocusAsync?: boolean): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: shouldOpenOnFocus
          description: ''
          type:
            - boolean
        - id: useFocusAsync
          description: ''
          type:
            - boolean
  - uid: '@fluentui/react-next!VirtualizedComboBox#render:member(1)'
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
  - uid: '@fluentui/react-next!VirtualizedComboBox#selectedOptions:member'
    summary: All selected options
    name: selectedOptions
    fullName: selectedOptions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly selectedOptions: IComboBoxOption[];'
      return:
        type:
          - 'IComboBoxOption[]'
