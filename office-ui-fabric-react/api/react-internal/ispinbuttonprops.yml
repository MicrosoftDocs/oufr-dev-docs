### YamlMime:TSType
name: ISpinButtonProps
uid: '@fluentui/react-internal!ISpinButtonProps:interface'
package: '@fluentui/react-internal!'
fullName: ISpinButtonProps
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: ariaDescribedBy
    uid: '@fluentui/react-internal!ISpinButtonProps#ariaDescribedBy:member'
    package: '@fluentui/react-internal!'
    fullName: ariaDescribedBy
    summary: 'ID of a label which describes the control, if not using the default label.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaDescribedBy?: string;'
      return:
        type: string
  - name: ariaLabel
    uid: '@fluentui/react-internal!ISpinButtonProps#ariaLabel:member'
    package: '@fluentui/react-internal!'
    fullName: ariaLabel
    summary: A description of the control for the benefit of screen reader users.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaLabel?: string;'
      return:
        type: string
  - name: ariaPositionInSet
    uid: '@fluentui/react-internal!ISpinButtonProps#ariaPositionInSet:member'
    package: '@fluentui/react-internal!'
    fullName: ariaPositionInSet
    summary: The position in the parent set (if in a set).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaPositionInSet?: number;'
      return:
        type: number
  - name: ariaSetSize
    uid: '@fluentui/react-internal!ISpinButtonProps#ariaSetSize:member'
    package: '@fluentui/react-internal!'
    fullName: ariaSetSize
    summary: The total size of the parent set (if in a set).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaSetSize?: number;'
      return:
        type: number
  - name: ariaValueNow
    uid: '@fluentui/react-internal!ISpinButtonProps#ariaValueNow:member'
    package: '@fluentui/react-internal!'
    fullName: ariaValueNow
    summary: >-
      Sets the control's aria-valuenow. This is the numeric form of `value`<!--
      -->. Providing this only makes sense when using as a controlled component.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaValueNow?: number;'
      return:
        type: number
  - name: ariaValueText
    uid: '@fluentui/react-internal!ISpinButtonProps#ariaValueText:member'
    package: '@fluentui/react-internal!'
    fullName: ariaValueText
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ariaValueText?: string;'
      return:
        type: string
  - name: className
    uid: '@fluentui/react-internal!ISpinButtonProps#className:member'
    package: '@fluentui/react-internal!'
    fullName: className
    summary: Custom className for the control.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string;'
      return:
        type: string
  - name: componentRef
    uid: '@fluentui/react-internal!ISpinButtonProps#componentRef:member'
    package: '@fluentui/react-internal!'
    fullName: componentRef
    summary: Gets the component ref.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<ISpinButton>;'
      return:
        type: IRefObject&lt;ISpinButton&gt;
  - name: decrementButtonAriaLabel
    uid: '@fluentui/react-internal!ISpinButtonProps#decrementButtonAriaLabel:member'
    package: '@fluentui/react-internal!'
    fullName: decrementButtonAriaLabel
    summary: Accessible label text for the decrement button (for screen reader users).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'decrementButtonAriaLabel?: string;'
      return:
        type: string
  - name: decrementButtonIcon
    uid: '@fluentui/react-internal!ISpinButtonProps#decrementButtonIcon:member'
    package: '@fluentui/react-internal!'
    fullName: decrementButtonIcon
    summary: Custom props for the decrement button.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'decrementButtonIcon?: IIconProps;'
      return:
        type: IIconProps
  - name: defaultValue
    uid: '@fluentui/react-internal!ISpinButtonProps#defaultValue:member'
    package: '@fluentui/react-internal!'
    fullName: defaultValue
    summary: >-
      Initial value of the control. Updates to this prop will not be respected.


      Use this if you intend for the SpinButton to be an uncontrolled component
      which maintains its own value. Mutually exclusive with `value`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultValue?: string;'
      return:
        type: string
  - name: disabled
    uid: '@fluentui/react-internal!ISpinButtonProps#disabled:member'
    package: '@fluentui/react-internal!'
    fullName: disabled
    summary: Whether or not the control is disabled.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: boolean;'
      return:
        type: boolean
  - name: downArrowButtonStyles
    uid: '@fluentui/react-internal!ISpinButtonProps#downArrowButtonStyles:member'
    package: '@fluentui/react-internal!'
    fullName: downArrowButtonStyles
    summary: >-
      Custom styles for the down arrow button.


      Note: The buttons are in a checked state when arrow keys are used to
      increment/decrement the SpinButton. Use `rootChecked` instead of
      `rootPressed` for styling when that is the case.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'downArrowButtonStyles?: Partial<IButtonStyles>;'
      return:
        type: Partial&lt;IButtonStyles&gt;
  - name: iconButtonProps
    uid: '@fluentui/react-internal!ISpinButtonProps#iconButtonProps:member'
    package: '@fluentui/react-internal!'
    fullName: iconButtonProps
    summary: Additional props for the up and down arrow buttons.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'iconButtonProps?: IButtonProps;'
      return:
        type: '<xref uid="office-ui-fabric-react!IButtonProps:interface" />'
  - name: iconProps
    uid: '@fluentui/react-internal!ISpinButtonProps#iconProps:member'
    package: '@fluentui/react-internal!'
    fullName: iconProps
    summary: Props for an icon to display alongside the control's label.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'iconProps?: IIconProps;'
      return:
        type: IIconProps
  - name: incrementButtonAriaLabel
    uid: '@fluentui/react-internal!ISpinButtonProps#incrementButtonAriaLabel:member'
    package: '@fluentui/react-internal!'
    fullName: incrementButtonAriaLabel
    summary: Accessible label text for the increment button (for screen reader users).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'incrementButtonAriaLabel?: string;'
      return:
        type: string
  - name: incrementButtonIcon
    uid: '@fluentui/react-internal!ISpinButtonProps#incrementButtonIcon:member'
    package: '@fluentui/react-internal!'
    fullName: incrementButtonIcon
    summary: Custom props for the increment button.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'incrementButtonIcon?: IIconProps;'
      return:
        type: IIconProps
  - name: inputProps
    uid: '@fluentui/react-internal!ISpinButtonProps#inputProps:member'
    package: '@fluentui/react-internal!'
    fullName: inputProps
    summary: Additional props for the input field.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'inputProps?: React.InputHTMLAttributes<HTMLElement | HTMLInputElement>;'
      return:
        type: React.InputHTMLAttributes&lt;HTMLElement | HTMLInputElement&gt;
  - name: keytipProps
    uid: '@fluentui/react-internal!ISpinButtonProps#keytipProps:member'
    package: '@fluentui/react-internal!'
    fullName: keytipProps
    summary: Keytip for the control.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'keytipProps?: IKeytipProps;'
      return:
        type: IKeytipProps
  - name: label
    uid: '@fluentui/react-internal!ISpinButtonProps#label:member'
    package: '@fluentui/react-internal!'
    fullName: label
    summary: Descriptive label for the control.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'label?: string;'
      return:
        type: string
  - name: labelPosition
    uid: '@fluentui/react-internal!ISpinButtonProps#labelPosition:member'
    package: '@fluentui/react-internal!'
    fullName: labelPosition
    summary: Where to position the control's label.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'labelPosition?: Position;'
      return:
        type: Position
  - name: max
    uid: '@fluentui/react-internal!ISpinButtonProps#max:member'
    package: '@fluentui/react-internal!'
    fullName: max
    summary: Max value of the control.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'max?: number;'
      return:
        type: number
  - name: min
    uid: '@fluentui/react-internal!ISpinButtonProps#min:member'
    package: '@fluentui/react-internal!'
    fullName: min
    summary: Min value of the control.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'min?: number;'
      return:
        type: number
  - name: onBlur
    uid: '@fluentui/react-internal!ISpinButtonProps#onBlur:member'
    package: '@fluentui/react-internal!'
    fullName: onBlur
    summary: Callback for when the control loses focus.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onBlur?: React.FocusEventHandler<HTMLInputElement>;'
      return:
        type: React.FocusEventHandler&lt;HTMLInputElement&gt;
  - name: onDecrement
    uid: '@fluentui/react-internal!ISpinButtonProps#onDecrement:member'
    package: '@fluentui/react-internal!'
    fullName: onDecrement
    summary: Callback for when the decrement button or down arrow key is pressed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDecrement?: (value: string, event?: React.MouseEvent<HTMLElement> |
        React.KeyboardEvent<HTMLElement>) => string | void;
      return:
        type: >-
          (value: string, event?: React.MouseEvent&lt;HTMLElement&gt; |
          React.KeyboardEvent&lt;HTMLElement&gt;) =&gt; string | void
  - name: onFocus
    uid: '@fluentui/react-internal!ISpinButtonProps#onFocus:member'
    package: '@fluentui/react-internal!'
    fullName: onFocus
    summary: Callback for when the user focuses the control.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onFocus?: React.FocusEventHandler<HTMLInputElement>;'
      return:
        type: React.FocusEventHandler&lt;HTMLInputElement&gt;
  - name: onIncrement
    uid: '@fluentui/react-internal!ISpinButtonProps#onIncrement:member'
    package: '@fluentui/react-internal!'
    fullName: onIncrement
    summary: Callback for when the increment button or up arrow key is pressed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onIncrement?: (value: string, event?: React.MouseEvent<HTMLElement> |
        React.KeyboardEvent<HTMLElement>) => string | void;
      return:
        type: >-
          (value: string, event?: React.MouseEvent&lt;HTMLElement&gt; |
          React.KeyboardEvent&lt;HTMLElement&gt;) =&gt; string | void
  - name: onValidate
    uid: '@fluentui/react-internal!ISpinButtonProps#onValidate:member'
    package: '@fluentui/react-internal!'
    fullName: onValidate
    summary: Callback for when the entered value should be validated.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onValidate?: (value: string, event?: React.SyntheticEvent<HTMLElement>)
        => string | void;
      return:
        type: >-
          (value: string, event?: React.SyntheticEvent&lt;HTMLElement&gt;) =&gt;
          string | void
  - name: precision
    uid: '@fluentui/react-internal!ISpinButtonProps#precision:member'
    package: '@fluentui/react-internal!'
    fullName: precision
    summary: >-
      How many decimal places the value should be rounded to.


      The default is calculated based on the precision of `step`<!-- -->: i.e.
      if step = 1, precision = 0. step = 0.0089, precision = 4. step = 300,
      precision = 2. step = 23.00, precision = 2.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'precision?: number;'
      return:
        type: number
  - name: step
    uid: '@fluentui/react-internal!ISpinButtonProps#step:member'
    package: '@fluentui/react-internal!'
    fullName: step
    summary: >-
      Difference between two adjacent values of the control. This value is used
      to calculate the precision of the input if no `precision` is given. The
      precision calculated this way will always be &gt;<!-- -->= 0.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'step?: number;'
      return:
        type: number
  - name: styles
    uid: '@fluentui/react-internal!ISpinButtonProps#styles:member'
    package: '@fluentui/react-internal!'
    fullName: styles
    summary: Custom styling for individual elements within the control.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<ISpinButtonStyleProps,
        ISpinButtonStyles>;
      return:
        type: 'IStyleFunctionOrObject&lt;ISpinButtonStyleProps, ISpinButtonStyles&gt;'
  - name: theme
    uid: '@fluentui/react-internal!ISpinButtonProps#theme:member'
    package: '@fluentui/react-internal!'
    fullName: theme
    summary: Theme provided by HOC.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme;'
      return:
        type: '<xref uid="@fluentui/theme!ITheme:interface" />'
  - name: title
    uid: '@fluentui/react-internal!ISpinButtonProps#title:member'
    package: '@fluentui/react-internal!'
    fullName: title
    summary: 'A more descriptive title for the control, visible on its tooltip.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'title?: string;'
      return:
        type: string
  - name: upArrowButtonStyles
    uid: '@fluentui/react-internal!ISpinButtonProps#upArrowButtonStyles:member'
    package: '@fluentui/react-internal!'
    fullName: upArrowButtonStyles
    summary: >-
      Custom styles for the up arrow button.


      Note: The buttons are in a checked state when arrow keys are used to
      increment/decrement the SpinButton. Use `rootChecked` instead of
      `rootPressed` for styling when that is the case.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'upArrowButtonStyles?: Partial<IButtonStyles>;'
      return:
        type: Partial&lt;IButtonStyles&gt;
  - name: value
    uid: '@fluentui/react-internal!ISpinButtonProps#value:member'
    package: '@fluentui/react-internal!'
    fullName: value
    summary: >-
      Current value of the control.


      Use this if you intend to pass in a new value as a result of change
      events. Mutually exclusive with `defaultValue`<!-- -->.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'value?: string;'
      return:
        type: string
extends: React.HTMLAttributes&lt;HTMLDivElement&gt;
