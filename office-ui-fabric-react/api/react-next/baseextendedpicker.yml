### YamlMime:UniversalReference
items:
  - uid: '@fluentui/react-next!BaseExtendedPicker:class'
    name: BaseExtendedPicker
    fullName: BaseExtendedPicker
    langs:
      - typeScript
    type: class
    extends:
      - 'React.Component<P, IBaseExtendedPickerState<T>> '
    implements:
      - 'IBaseExtendedPicker<T> '
    package: '@fluentui/react-next!'
    children:
      - '@fluentui/react-next!BaseExtendedPicker#_onSelectedItemsChanged:member'
      - '@fluentui/react-next!BaseExtendedPicker#_onSuggestionSelected:member'
      - '@fluentui/react-next!BaseExtendedPicker:constructor(1)'
      - '@fluentui/react-next!BaseExtendedPicker#canAddItems:member(1)'
      - '@fluentui/react-next!BaseExtendedPicker#clearInput:member(1)'
      - '@fluentui/react-next!BaseExtendedPicker#componentDidMount:member(1)'
      - '@fluentui/react-next!BaseExtendedPicker#floatingPicker:member'
      - '@fluentui/react-next!BaseExtendedPicker#floatingPickerProps:member'
      - '@fluentui/react-next!BaseExtendedPicker#focus:member(1)'
      - '@fluentui/react-next!BaseExtendedPicker#highlightedItems:member'
      - '@fluentui/react-next!BaseExtendedPicker#input:member'
      - '@fluentui/react-next!BaseExtendedPicker#inputElement:member'
      - '@fluentui/react-next!BaseExtendedPicker#items:member'
      - '@fluentui/react-next!BaseExtendedPicker#onBackspace:member'
      - '@fluentui/react-next!BaseExtendedPicker#onCopy:member'
      - '@fluentui/react-next!BaseExtendedPicker#onInputChange:member'
      - '@fluentui/react-next!BaseExtendedPicker#onInputClick:member'
      - '@fluentui/react-next!BaseExtendedPicker#onInputFocus:member'
      - '@fluentui/react-next!BaseExtendedPicker#onPaste:member'
      - '@fluentui/react-next!BaseExtendedPicker#onSelectionChange:member'
      - '@fluentui/react-next!BaseExtendedPicker#render:member(1)'
      - '@fluentui/react-next!BaseExtendedPicker#renderFloatingPicker:member(1)'
      - '@fluentui/react-next!BaseExtendedPicker#renderSelectedItemsList:member(1)'
      - '@fluentui/react-next!BaseExtendedPicker#root:member'
      - '@fluentui/react-next!BaseExtendedPicker#selectedItemsList:member'
      - '@fluentui/react-next!BaseExtendedPicker#selectedItemsListProps:member'
      - '@fluentui/react-next!BaseExtendedPicker#selection:member'
  - uid: '@fluentui/react-next!BaseExtendedPicker#_onSelectedItemsChanged:member'
    name: _onSelectedItemsChanged
    fullName: _onSelectedItemsChanged
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected _onSelectedItemsChanged: () => void;'
      return:
        type:
          - () => void
  - uid: '@fluentui/react-next!BaseExtendedPicker#_onSuggestionSelected:member'
    name: _onSuggestionSelected
    fullName: _onSuggestionSelected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected _onSuggestionSelected: (item: T) => void;'
      return:
        type:
          - '(item: T) => void'
  - uid: '@fluentui/react-next!BaseExtendedPicker:constructor(1)'
    summary: Constructs a new instance of the `BaseExtendedPicker` class
    name: (constructor)(basePickerProps)
    fullName: (constructor)(basePickerProps)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(basePickerProps: P);'
      parameters:
        - id: basePickerProps
          description: ''
          type:
            - P
  - uid: '@fluentui/react-next!BaseExtendedPicker#canAddItems:member(1)'
    name: canAddItems()
    fullName: canAddItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected canAddItems(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: '@fluentui/react-next!BaseExtendedPicker#clearInput:member(1)'
    name: clearInput()
    fullName: clearInput()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearInput(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-next!BaseExtendedPicker#componentDidMount:member(1)'
    name: componentDidMount()
    fullName: componentDidMount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'componentDidMount(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-next!BaseExtendedPicker#floatingPicker:member'
    name: floatingPicker
    fullName: floatingPicker
    langs:
      - typeScript
    type: property
    syntax:
      content: 'floatingPicker: React.RefObject<BaseFloatingPicker<T, IBaseFloatingPickerProps<T>>>;'
      return:
        type:
          - 'React.RefObject<BaseFloatingPicker<T, IBaseFloatingPickerProps<T>>>'
  - uid: '@fluentui/react-next!BaseExtendedPicker#floatingPickerProps:member'
    name: floatingPickerProps
    fullName: floatingPickerProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected readonly floatingPickerProps: IBaseFloatingPickerProps<T>;'
      return:
        type:
          - IBaseFloatingPickerProps<T>
  - uid: '@fluentui/react-next!BaseExtendedPicker#focus:member(1)'
    name: focus()
    fullName: focus()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'focus(): void;'
      return:
        type:
          - void
        description: ''
  - uid: '@fluentui/react-next!BaseExtendedPicker#highlightedItems:member'
    name: highlightedItems
    fullName: highlightedItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly highlightedItems: T[];'
      return:
        type:
          - 'T[]'
  - uid: '@fluentui/react-next!BaseExtendedPicker#input:member'
    name: input
    fullName: input
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected input: React.RefObject<Autofill>;'
      return:
        type:
          - React.RefObject<Autofill>
  - uid: '@fluentui/react-next!BaseExtendedPicker#inputElement:member'
    name: inputElement
    fullName: inputElement
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inputElement: HTMLInputElement | null;'
      return:
        type:
          - HTMLInputElement | null
  - uid: '@fluentui/react-next!BaseExtendedPicker#items:member'
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: any;'
      return:
        type:
          - any
  - uid: '@fluentui/react-next!BaseExtendedPicker#onBackspace:member'
    name: onBackspace
    fullName: onBackspace
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onBackspace: (ev: React.KeyboardEvent<HTMLElement>) => void;'
      return:
        type:
          - '(ev: React.KeyboardEvent<HTMLElement>) => void'
  - uid: '@fluentui/react-next!BaseExtendedPicker#onCopy:member'
    name: onCopy
    fullName: onCopy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onCopy: (ev: React.ClipboardEvent<HTMLElement>) => void;'
      return:
        type:
          - '(ev: React.ClipboardEvent<HTMLElement>) => void'
  - uid: '@fluentui/react-next!BaseExtendedPicker#onInputChange:member'
    name: onInputChange
    fullName: onInputChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onInputChange: (value: string, composing?: boolean | undefined) => void;'
      return:
        type:
          - '(value: string, composing?: boolean | undefined) => void'
  - uid: '@fluentui/react-next!BaseExtendedPicker#onInputClick:member'
    name: onInputClick
    fullName: onInputClick
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onInputClick: (ev: React.MouseEvent<HTMLInputElement | Autofill, MouseEvent>) => void;'
      return:
        type:
          - '(ev: React.MouseEvent<HTMLInputElement | Autofill, MouseEvent>) => void'
  - uid: '@fluentui/react-next!BaseExtendedPicker#onInputFocus:member'
    name: onInputFocus
    fullName: onInputFocus
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onInputFocus: (ev: React.FocusEvent<HTMLInputElement | Autofill>) => void;'
      return:
        type:
          - '(ev: React.FocusEvent<HTMLInputElement | Autofill>) => void'
  - uid: '@fluentui/react-next!BaseExtendedPicker#onPaste:member'
    name: onPaste
    fullName: onPaste
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onPaste: (ev: React.ClipboardEvent<HTMLInputElement | Autofill>) => void;'
      return:
        type:
          - '(ev: React.ClipboardEvent<HTMLInputElement | Autofill>) => void'
  - uid: '@fluentui/react-next!BaseExtendedPicker#onSelectionChange:member'
    name: onSelectionChange
    fullName: onSelectionChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected onSelectionChange: () => void;'
      return:
        type:
          - () => void
  - uid: '@fluentui/react-next!BaseExtendedPicker#render:member(1)'
    name: render()
    fullName: render()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'render(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
  - uid: '@fluentui/react-next!BaseExtendedPicker#renderFloatingPicker:member(1)'
    name: renderFloatingPicker()
    fullName: renderFloatingPicker()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected renderFloatingPicker(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
  - uid: '@fluentui/react-next!BaseExtendedPicker#renderSelectedItemsList:member(1)'
    name: renderSelectedItemsList()
    fullName: renderSelectedItemsList()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected renderSelectedItemsList(): JSX.Element;'
      return:
        type:
          - JSX.Element
        description: ''
  - uid: '@fluentui/react-next!BaseExtendedPicker#root:member'
    name: root
    fullName: root
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected root: React.RefObject<HTMLDivElement>;'
      return:
        type:
          - React.RefObject<HTMLDivElement>
  - uid: '@fluentui/react-next!BaseExtendedPicker#selectedItemsList:member'
    name: selectedItemsList
    fullName: selectedItemsList
    langs:
      - typeScript
    type: property
    syntax:
      content: 'selectedItemsList: React.RefObject<BaseSelectedItemsList<T, IBaseSelectedItemsListProps<T>>>;'
      return:
        type:
          - 'React.RefObject<BaseSelectedItemsList<T, IBaseSelectedItemsListProps<T>>>'
  - uid: '@fluentui/react-next!BaseExtendedPicker#selectedItemsListProps:member'
    name: selectedItemsListProps
    fullName: selectedItemsListProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected readonly selectedItemsListProps: IBaseSelectedItemsListProps<T>;'
      return:
        type:
          - IBaseSelectedItemsListProps<T>
  - uid: '@fluentui/react-next!BaseExtendedPicker#selection:member'
    name: selection
    fullName: selection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected selection: Selection;'
      return:
        type:
          - '@uifabric/utilities!Selection:class'
